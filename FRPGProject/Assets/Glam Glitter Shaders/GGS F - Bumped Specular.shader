// Compiled shader for all platforms, uncompressed size: 1001.3KB

Shader "Spaventacorvi/Glam Glitter F - Bumped Specular" {
Properties {
 _Color ("Main color", Color) = (0.705882,0.705882,0.705882,1)
 _MainTex ("Base (RGB)", 2D) = "white" {}
 _Shininess ("Shininess", Range(0,1)) = 0.3
 _Fakelight ("Fake light", Range(0,0.1)) = 0
 _Reflectioncubemap ("Reflection cubemap", CUBE) = "_Skybox" {}
 _Reflectioncubemappower ("Reflection cubemap power", Range(0,1)) = 0
 _Normalmap ("Normalmap", 2D) = "bump" {}
 _Specularglitter ("Specular glitter", 2D) = "white" {}
 _Specularpower05 ("Specular power (0 - 5)", Range(0,5)) = 0
 _Specularcontrast13 ("Specular contrast (1 - 3)", Range(1,3)) = 1
 _Glittermap ("Glitter map", 2D) = "white" {}
 _Glittercolor ("Glitter color", Color) = (1,1,1,1)
 _Glitterpower ("Glitter power", Range(0,10)) = 2
 _Glittercontrast13 ("Glitter contrast (1 - 3)", Range(1,3)) = 1
 _Glitteryspeed01 ("Glittery speed (0 - 1)", Range(0,1)) = 0.2
 _Glitterymaskdotsscale ("Glittery & mask dots scale", Range(0.1,8)) = 1
 _Mask ("Mask", 2D) = "black" {}
 _MasktransparencyDebug ("Mask transparency (Debug)", Range(0,1)) = 1
 _Maskadjust0515 ("Mask adjust (0.5 - 1.5)", Range(0.5,1.5)) = 1
}
SubShader { 
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //       d3d11 : 24 avg math (23..26)
 //        d3d9 : 31 avg math (29..34)
 //      opengl : 31 avg math (29..34)
 // Stats for Fragment shader:
 //       d3d11 : 87 avg math (85..89), 7 avg texture (7..8)
 //        d3d9 : 114 avg math (112..117), 7 avg texture (7..8)
 //      opengl : 102 avg math (100..104), 7 avg texture (7..8)
 Pass {
  Name "FORWARDBASE"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
Program "vp" {
SubProgram "opengl " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
"3.0-!!ARBvp1.0
PARAM c[13] = { { 0 },
		state.matrix.mvp,
		program.local[5..12] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[3].xyz, R1;
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 29 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c12, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c12.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c12.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
mov o4.xyz, r1
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 23 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerDraw" 0
"vs_4_0
eefiecedooilndalaneljhihncooenjckicbkmglabaaaaaafeafaaaaadaaaaaa
cmaaaaaamaaaaaaahiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
keaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaakeaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaakeaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneadaaaa
eaaaabaapfaaaaaafjaaaaaeegiocaaaaaaaaaaabdaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaaaaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaa
egbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
aaaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
acaaaaaaegiocaaaaaaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
baaaaaaibcaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabaaaaaaa
baaaaaaiccaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabbaaaaaa
baaaaaaiecaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabcaaaaaa
dgaaaaafhccabaaaadaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgbfbaaaacaaaaaaegiccaaaaaaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaaaaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaa
abaaaaaadiaaaaahhcaabaaaacaaaaaacgajbaaaaaaaaaaajgaebaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgaebaaaaaaaaaaacgajbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaafaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
"3.0-!!ARBvp1.0
PARAM c[13] = { { 0 },
		state.matrix.mvp,
		program.local[5..12] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[3].xyz, R1;
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 29 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c12, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c12.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c12.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
mov o4.xyz, r1
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 23 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerDraw" 0
"vs_4_0
eefiecedooilndalaneljhihncooenjckicbkmglabaaaaaafeafaaaaadaaaaaa
cmaaaaaamaaaaaaahiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
keaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaakeaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaakeaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneadaaaa
eaaaabaapfaaaaaafjaaaaaeegiocaaaaaaaaaaabdaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaaaaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaa
egbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
aaaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
acaaaaaaegiocaaaaaaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
baaaaaaibcaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabaaaaaaa
baaaaaaiccaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabbaaaaaa
baaaaaaiecaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabcaaaaaa
dgaaaaafhccabaaaadaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgbfbaaaacaaaaaaegiccaaaaaaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaaaaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaa
abaaaaaadiaaaaahhcaabaaaacaaaaaacgajbaaaaaaaaaaajgaebaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgaebaaaaaaaaaaacgajbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaafaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
"3.0-!!ARBvp1.0
PARAM c[13] = { { 0 },
		state.matrix.mvp,
		program.local[5..12] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[3].xyz, R1;
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 29 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c12, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c12.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c12.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
mov o4.xyz, r1
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 23 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerDraw" 0
"vs_4_0
eefiecedooilndalaneljhihncooenjckicbkmglabaaaaaafeafaaaaadaaaaaa
cmaaaaaamaaaaaaahiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
keaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaakeaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaakeaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneadaaaa
eaaaabaapfaaaaaafjaaaaaeegiocaaaaaaaaaaabdaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaaaaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaa
egbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
aaaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
acaaaaaaegiocaaaaaaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
baaaaaaibcaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabaaaaaaa
baaaaaaiccaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabbaaaaaa
baaaaaaiecaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabcaaaaaa
dgaaaaafhccabaaaadaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgbfbaaaacaaaaaaegiccaaaaaaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaaaaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaa
abaaaaaadiaaaaahhcaabaaaacaaaaaacgajbaaaaaaaaaaajgaebaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgaebaaaaaaaaaaacgajbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaafaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_ProjectionParams]
"3.0-!!ARBvp1.0
PARAM c[14] = { { 0, 0.5 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R1.xyz, R0, c[0].x;
MUL R0.xyz, R1.zxyw, R3.yzxw;
MAD R0.xyz, R1.yzxw, R3.zxyw, -R0;
MUL R0.xyz, vertex.attrib[14].w, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R0;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].y;
MUL R2.y, R2, c[13].x;
MOV result.texcoord[3].xyz, R3;
ADD result.texcoord[5].xy, R2, R2.z;
MOV result.position, R0;
MOV result.texcoord[5].zw, R0;
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c14, 0.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c14.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r3.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r1.xyz, r0, c14.x
mul r0.xyz, r1.zxyw, r3.yzxw
mad r0.xyz, r1.yzxw, r3.zxyw, -r0
mul r0.xyz, v2.w, r0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o5.xyz, r0.w, r0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c14.y
mul r2.y, r2, c12.x
mov o4.xyz, r3
mad o6.xy, r2.z, c13.zwzw, r2
mov o0, r0
mov o6.zw, r0
mov o3.xyz, r1
mov o1.xy, v3
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerCamera" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmleiiecjgjfdeomojhpbphibfdhlompiabaaaaaabeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefchmaeaaaaeaaaabaabpabaaaa
fjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
pccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
abaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaacaaaaaaegiocaaaabaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaaaaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaagaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaagaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = o_7;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_10;
  normal_10.xy = ((texture2D (_Normalmap, P_9).wy * 2.0) - 1.0);
  normal_10.z = sqrt((1.0 - clamp (dot (normal_10.xy, normal_10.xy), 0.0, 1.0)));
  normalLocal_5 = normal_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x * 2.0);
  attenuation_3 = tmpvar_15;
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  highp vec3 tmpvar_28;
  tmpvar_28 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_28)) + (tmpvar_28 * _Fakelight));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = textureProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_ProjectionParams]
"3.0-!!ARBvp1.0
PARAM c[14] = { { 0, 0.5 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R1.xyz, R0, c[0].x;
MUL R0.xyz, R1.zxyw, R3.yzxw;
MAD R0.xyz, R1.yzxw, R3.zxyw, -R0;
MUL R0.xyz, vertex.attrib[14].w, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R0;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].y;
MUL R2.y, R2, c[13].x;
MOV result.texcoord[3].xyz, R3;
ADD result.texcoord[5].xy, R2, R2.z;
MOV result.position, R0;
MOV result.texcoord[5].zw, R0;
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c14, 0.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c14.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r3.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r1.xyz, r0, c14.x
mul r0.xyz, r1.zxyw, r3.yzxw
mad r0.xyz, r1.yzxw, r3.zxyw, -r0
mul r0.xyz, v2.w, r0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o5.xyz, r0.w, r0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c14.y
mul r2.y, r2, c12.x
mov o4.xyz, r3
mad o6.xy, r2.z, c13.zwzw, r2
mov o0, r0
mov o6.zw, r0
mov o3.xyz, r1
mov o1.xy, v3
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerCamera" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmleiiecjgjfdeomojhpbphibfdhlompiabaaaaaabeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefchmaeaaaaeaaaabaabpabaaaa
fjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
pccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
abaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaacaaaaaaegiocaaaabaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaaaaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaagaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaagaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = o_7;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_10;
  normal_10.xy = ((texture2D (_Normalmap, P_9).wy * 2.0) - 1.0);
  normal_10.z = sqrt((1.0 - clamp (dot (normal_10.xy, normal_10.xy), 0.0, 1.0)));
  normalLocal_5 = normal_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x * 2.0);
  attenuation_3 = tmpvar_15;
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  highp vec3 tmpvar_28;
  tmpvar_28 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_28)) + (tmpvar_28 * _Fakelight));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = textureProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_ProjectionParams]
"3.0-!!ARBvp1.0
PARAM c[14] = { { 0, 0.5 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R1.xyz, R0, c[0].x;
MUL R0.xyz, R1.zxyw, R3.yzxw;
MAD R0.xyz, R1.yzxw, R3.zxyw, -R0;
MUL R0.xyz, vertex.attrib[14].w, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R0;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].y;
MUL R2.y, R2, c[13].x;
MOV result.texcoord[3].xyz, R3;
ADD result.texcoord[5].xy, R2, R2.z;
MOV result.position, R0;
MOV result.texcoord[5].zw, R0;
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c14, 0.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c14.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r3.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r1.xyz, r0, c14.x
mul r0.xyz, r1.zxyw, r3.yzxw
mad r0.xyz, r1.yzxw, r3.zxyw, -r0
mul r0.xyz, v2.w, r0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o5.xyz, r0.w, r0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c14.y
mul r2.y, r2, c12.x
mov o4.xyz, r3
mad o6.xy, r2.z, c13.zwzw, r2
mov o0, r0
mov o6.zw, r0
mov o3.xyz, r1
mov o1.xy, v3
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerCamera" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmleiiecjgjfdeomojhpbphibfdhlompiabaaaaaabeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefchmaeaaaaeaaaabaabpabaaaa
fjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
pccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
abaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaacaaaaaaegiocaaaabaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaaaaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaagaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaagaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = o_7;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_10;
  normal_10.xy = ((texture2D (_Normalmap, P_9).wy * 2.0) - 1.0);
  normal_10.z = sqrt((1.0 - clamp (dot (normal_10.xy, normal_10.xy), 0.0, 1.0)));
  normalLocal_5 = normal_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x * 2.0);
  attenuation_3 = tmpvar_15;
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  highp vec3 tmpvar_28;
  tmpvar_28 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_28)) + (tmpvar_28 * _Fakelight));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = textureProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
"3.0-!!ARBvp1.0
PARAM c[13] = { { 0 },
		state.matrix.mvp,
		program.local[5..12] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[3].xyz, R1;
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 29 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c12, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c12.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c12.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
mov o4.xyz, r1
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 23 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerDraw" 0
"vs_4_0
eefiecedooilndalaneljhihncooenjckicbkmglabaaaaaafeafaaaaadaaaaaa
cmaaaaaamaaaaaaahiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
keaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaakeaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaakeaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneadaaaa
eaaaabaapfaaaaaafjaaaaaeegiocaaaaaaaaaaabdaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaaaaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaa
egbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
aaaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
acaaaaaaegiocaaaaaaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
baaaaaaibcaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabaaaaaaa
baaaaaaiccaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabbaaaaaa
baaaaaaiecaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabcaaaaaa
dgaaaaafhccabaaaadaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgbfbaaaacaaaaaaegiccaaaaaaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaaaaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaa
abaaaaaadiaaaaahhcaabaaaacaaaaaacgajbaaaaaaaaaaajgaebaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgaebaaaaaaaaaaacgajbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaafaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture2D (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 lightDirection_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  lowp vec3 tmpvar_13;
  tmpvar_13 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_3 = tmpvar_13;
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture (_Specularglitter, P_25);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_27 = texture (_MainTex, P_28);
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((((max (0.0, dot (tmpvar_10, lightDirection_3)) * (2.0 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_27.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + (((2.0 * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_7 + lightDirection_3)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_26)) + (tmpvar_26 * _Fakelight));
  tmpvar_1 = tmpvar_29;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_ProjectionParams]
"3.0-!!ARBvp1.0
PARAM c[14] = { { 0, 0.5 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R1.xyz, R0, c[0].x;
MUL R0.xyz, R1.zxyw, R3.yzxw;
MAD R0.xyz, R1.yzxw, R3.zxyw, -R0;
MUL R0.xyz, vertex.attrib[14].w, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R0;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].y;
MUL R2.y, R2, c[13].x;
MOV result.texcoord[3].xyz, R3;
ADD result.texcoord[5].xy, R2, R2.z;
MOV result.position, R0;
MOV result.texcoord[5].zw, R0;
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c14, 0.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c14.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r3.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r1.xyz, r0, c14.x
mul r0.xyz, r1.zxyw, r3.yzxw
mad r0.xyz, r1.yzxw, r3.zxyw, -r0
mul r0.xyz, v2.w, r0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o5.xyz, r0.w, r0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c14.y
mul r2.y, r2, c12.x
mov o4.xyz, r3
mad o6.xy, r2.z, c13.zwzw, r2
mov o0, r0
mov o6.zw, r0
mov o3.xyz, r1
mov o1.xy, v3
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerCamera" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmleiiecjgjfdeomojhpbphibfdhlompiabaaaaaabeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefchmaeaaaaeaaaabaabpabaaaa
fjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
pccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
abaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaacaaaaaaegiocaaaabaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaaaaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaagaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaagaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = o_7;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_10;
  normal_10.xy = ((texture2D (_Normalmap, P_9).wy * 2.0) - 1.0);
  normal_10.z = sqrt((1.0 - clamp (dot (normal_10.xy, normal_10.xy), 0.0, 1.0)));
  normalLocal_5 = normal_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x * 2.0);
  attenuation_3 = tmpvar_15;
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  highp vec3 tmpvar_28;
  tmpvar_28 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_28)) + (tmpvar_28 * _Fakelight));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float tmpvar_15;
  mediump float lightShadowDataX_16;
  highp float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = textureProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = _LightShadowData.x;
  lightShadowDataX_16 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = max (float((dist_17 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_16);
  tmpvar_15 = tmpvar_20;
  lowp float tmpvar_21;
  tmpvar_21 = (tmpvar_15 * 2.0);
  attenuation_3 = tmpvar_21;
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  highp vec3 tmpvar_34;
  tmpvar_34 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_34)) + (tmpvar_34 * _Fakelight));
  tmpvar_1 = tmpvar_37;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  lowp float tmpvar_16;
  tmpvar_16 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (tmpvar_16 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture2D (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture2D (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture2D (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture2D (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture2D (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  mediump float tmpvar_16;
  tmpvar_16 = texture (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  shadow_15 = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (shadow_15 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  lowp float tmpvar_16;
  tmpvar_16 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (tmpvar_16 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture2D (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture2D (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture2D (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture2D (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture2D (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  mediump float tmpvar_16;
  tmpvar_16 = texture (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  shadow_15 = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (shadow_15 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  lowp float tmpvar_16;
  tmpvar_16 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (tmpvar_16 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture2D (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture2D (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture2D (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture2D (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture2D (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  mediump float tmpvar_16;
  tmpvar_16 = texture (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  shadow_15 = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (shadow_15 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture2D (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  lowp float tmpvar_16;
  tmpvar_16 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (tmpvar_16 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture2D (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture2D (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture2D (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture2D (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture2D (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp float _Fakelight;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 lightDirection_4;
  highp vec3 normalLocal_5;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = xlv_TEXCOORD3.x;
  tmpvar_7[0].y = xlv_TEXCOORD4.x;
  tmpvar_7[0].z = tmpvar_6.x;
  tmpvar_7[1].x = xlv_TEXCOORD3.y;
  tmpvar_7[1].y = xlv_TEXCOORD4.y;
  tmpvar_7[1].z = tmpvar_6.y;
  tmpvar_7[2].x = xlv_TEXCOORD3.z;
  tmpvar_7[2].y = xlv_TEXCOORD4.z;
  tmpvar_7[2].z = tmpvar_6.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_10;
  tmpvar_10 = ((texture (_Normalmap, P_9).xyz * 2.0) - 1.0);
  normalLocal_5 = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = normalize((normalLocal_5 * tmpvar_7));
  highp vec3 tmpvar_12;
  highp vec3 i_13;
  i_13 = -(tmpvar_8);
  tmpvar_12 = (i_13 - (2.0 * (dot (tmpvar_11, i_13) * tmpvar_11)));
  lowp vec3 tmpvar_14;
  tmpvar_14 = normalize(_WorldSpaceLightPos0.xyz);
  lightDirection_4 = tmpvar_14;
  lowp float shadow_15;
  mediump float tmpvar_16;
  tmpvar_16 = texture (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  shadow_15 = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (shadow_15 * (1.0 - _LightShadowData.x)));
  shadow_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = (shadow_15 * 2.0);
  attenuation_3 = tmpvar_18;
  highp mat2 tmpvar_19;
  tmpvar_19[0].x = -0.999999;
  tmpvar_19[0].y = 0.00159255;
  tmpvar_19[1].x = -0.00159255;
  tmpvar_19[1].y = -0.999999;
  lowp vec4 tmpvar_20;
  highp vec2 P_21;
  P_21 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_20 = texture (_Mask, P_21);
  node_1540_2 = tmpvar_20;
  highp vec2 P_22;
  P_22 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_19) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_23;
  arg0_23 = (1.0 - texture (_Glittermap, P_22).xyz);
  highp vec3 tmpvar_24;
  tmpvar_24 = (max (arg0_23, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (_Reflectioncubemap, tmpvar_12);
  highp vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_25.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_7 * tmpvar_8).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_27 = texture (_Glittermap, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_29 = texture (_Specularglitter, P_30);
  highp vec3 tmpvar_31;
  tmpvar_31 = ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_27.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_24) + mix (pow ((tmpvar_29.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_26);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_32 = texture (_MainTex, P_33);
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = (((((max (0.0, dot (tmpvar_11, lightDirection_4)) * (attenuation_3 * _LightColor0.xyz)) + (glstate_lightmodel_ambient.xyz * 2.0)) * (((tmpvar_32.xyz * _Color.xyz) + tmpvar_26) + ((1.0 - _MasktransparencyDebug) * tmpvar_24))) + (((floor(attenuation_3) * _LightColor0.xyz) * pow (max (0.0, dot (normalize((tmpvar_8 + lightDirection_4)), tmpvar_11)), exp2(((_Shininess * 10.0) + 1.0)))) * tmpvar_31)) + (tmpvar_31 * _Fakelight));
  tmpvar_1 = tmpvar_34;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 100 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"3.0-!!ARBfp1.0
PARAM c[25] = { state.lightmodel.ambient,
		program.local[1..21],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MAD R0.xy, fragment.texcoord[0], c[13], c[13].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R1.zw, R0.xywy, c[22].x, -c[22].y;
MUL R1.xy, R1.zwzw, R1.zwzw;
ADD_SAT R1.x, R1, R1.y;
MUL R0.xyz, R1.w, fragment.texcoord[4];
ADD R1.x, -R1, c[22].y;
DP3 R0.w, fragment.texcoord[2], fragment.texcoord[2];
MAD R5.xy, fragment.texcoord[0], c[4], c[4].zwzw;
MAD R0.xyz, R1.z, fragment.texcoord[3], R0;
RSQ R1.w, R1.x;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, fragment.texcoord[2];
RCP R0.w, R1.w;
MAD R2.xyz, R0.w, R1, R0;
DP3 R0.w, R2, R2;
RSQ R1.w, R0.w;
ADD R0.xyz, -fragment.texcoord[1], c[1];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
DP3 R1.x, c[2], c[2];
RSQ R1.x, R1.x;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, R1.x, c[2];
ADD R3.xyz, R1, R0;
MUL R2.xyz, R1.w, R2;
DP3 R0.w, R3, R3;
RSQ R1.w, R0.w;
MUL R3.xyz, R1.w, R3;
DP3 R1.w, R2, R3;
MOV R2.w, c[24].y;
MUL R0.w, R2, c[5].x;
ADD R0.w, R0, c[22].y;
MAX R1.w, R1, c[22].z;
EX2 R0.w, R0.w;
POW R0.w, R1.w, R0.w;
DP3 R1.w, R2, -R0;
MUL R4.xyz, R2, R1.w;
MOV R1.w, c[17].x;
MUL R2.w, R1, -c[24].x;
MUL R1.w, R1, c[23].x;
DP3 R3.x, fragment.texcoord[3], R0;
DP3 R3.y, fragment.texcoord[4], R0;
MAD R0.xyz, -R4, c[22].x, -R0;
MUL R3.xy, R3, -c[17].x;
MAD R3.zw, R3.xyxy, c[22].w, fragment.texcoord[0].xyxy;
ADD R3.zw, R3, -c[23].x;
MUL R4.xy, R3.w, c[23].wyzw;
MAD R3.zw, R3.z, c[23].xyyz, R4.xyxy;
TEX R0.xyz, R0, texture[3], CUBE;
ADD R3.zw, R3, c[23].x;
MAD R4.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R4.xyz, R4, texture[4], 2D;
MUL R4.xyz, R4, c[9].x;
TEX R5.xyz, R5, texture[1], 2D;
ADD R1.w, R1, c[22].y;
MAD R3.xy, -R3, c[22].w, fragment.texcoord[0];
MUL R3.xy, R3, R1.w;
MUL R3.xy, R3, c[16].x;
MUL R0.xyz, R0, c[12].x;
ADD R2.w, R2, c[22].y;
MUL R3.zw, R3, c[16].x;
MUL R3.zw, R3, R2.w;
MUL R3.zw, R3, c[21].x;
MAD R3.zw, R3, c[18].xyxy, c[18];
TEX R6.xyz, R3.zwzw, texture[2], 2D;
MAD R3.xy, R3, c[18], c[18].zwzw;
ADD R6.xyz, -R6, c[22].y;
POW R4.x, R4.x, c[20].x;
POW R4.z, R4.z, c[20].x;
POW R4.y, R4.y, c[20].x;
MAD R4.xyz, R5, -R4, R4;
MAX R5.xyz, R6, R5;
MOV R6.xyz, c[15];
MUL R6.xyz, R6, c[10].x;
TEX R3.xyz, R3, texture[2], 2D;
MUL R3.xyz, R6, R3;
MAD R6.xy, fragment.texcoord[0], c[6], c[6].zwzw;
MUL R5.xyz, R5, c[8].x;
POW R3.x, R3.x, c[19].x;
POW R3.z, R3.z, c[19].x;
POW R3.y, R3.y, c[19].x;
MAD R3.xyz, R5, -R3, R3;
ADD R3.xyz, R3, R4;
MUL R4.xyz, R0.w, c[3];
ADD R3.xyz, R0, R3;
MUL R4.xyz, R4, R3;
DP3 R0.w, R2, R1;
MAX R0.w, R0, c[22].z;
MUL R1.xyz, R0.w, c[3];
TEX R6.xyz, R6, texture[5], 2D;
MOV R1.w, c[22].y;
MUL R3.xyz, R3, c[14].x;
MAD R0.xyz, R6, c[11], R0;
ADD R0.w, R1, -c[8].x;
MAD R0.xyz, R0.w, R5, R0;
ADD R1.xyz, R1, c[0];
MAD R0.xyz, R1, R0, R4;
MAD result.color.xyz, R0, c[22].x, R3;
MOV result.color.w, c[22].y;
END
# 100 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 112 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [glstate_lightmodel_ambient]
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_cube s3
dcl_2d s4
dcl_2d s5
def c22, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c23, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c24, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c25, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c22.x, c22.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c22
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mad r0.xyz, r0.x, v3, r2
mul r1.xyz, r1.x, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
add r3.xyz, -v1, c1
dp3 r0.w, r2, r2
dp3 r0.y, r3, r3
dp3_pp r0.x, c2, c2
rsq_pp r1.x, r0.x
rsq r0.w, r0.w
rsq r0.y, r0.y
mul r0.xyz, r0.y, r3
mul_pp r4.xyz, r1.x, c2
add r1.xyz, r4, r0
mul r2.xyz, r0.w, r2
dp3 r1.w, r1, r1
rsq r0.w, r1.w
mul r1.xyz, r0.w, r1
dp3 r0.w, r2, r1
mov r1.w, c5.x
mad r1.w, r1, c25.z, c25.y
exp r2.w, r1.w
max r0.w, r0, c22.z
pow r1, r0.w, r2.w
dp3 r0.w, r2, -r0
mul r3.xyz, r2, r0.w
mov r1.w, r1.x
mad r1.xyz, -r3, c22.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r5.xy, r0.zwzw, -c17.x
mad r3.xy, r5, c23.x, v0
add r7.xy, r3, c23.y
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s4
mul r6.xyz, r0, c9.x
pow r3, r6.y, c20.x
pow r0, r6.x, c20.x
mov r6.x, r0
pow r0, r6.z, c20.x
mov r6.z, r0
mov r0.z, c17.x
mul r5.zw, r7.y, c23
mov r6.y, r3
mad r0.xy, v0, c4, c4.zwzw
texld r3.xyz, r0, s1
mad r0.xy, r7.x, c24, r5.zwzw
add r0.xy, r0, c24.z
mad r6.xyz, r3, -r6, r6
mad r0.z, r0, c25.x, c25.y
mul r0.xy, r0, c16.x
mul r0.xy, r0, r0.z
mov r0.z, c17.x
mad r2.w, r0.z, c24.z, c24
mad r0.zw, -r5.xyxy, c23.x, v0.xyxy
mul r0.zw, r0, r2.w
mul r5.xy, r0.zwzw, c16.x
mov r0.w, c10.x
mul r0.xy, r0, c21.x
mad r0.xy, r0, c18, c18.zwzw
mad r5.xy, r5, c18, c18.zwzw
texld r0.xyz, r0, s2
texld r5.xyz, r5, s2
mul r7.xyz, c15, r0.w
mul r7.xyz, r7, r5
add r5.xyz, -r0, c22.w
pow r0, r7.x, c19.x
max r3.xyz, r5, r3
mul r5.xyz, r3, c8.x
pow r3, r7.y, c19.x
mov r7.x, r0
pow r0, r7.z, c19.x
mov r7.y, r3
mul r3.xyz, r1.w, c3
dp3 r0.w, r2, r4
mov r7.z, r0
mad r0.xyz, r5, -r7, r7
add r0.xyz, r0, r6
texld r1.xyz, r1, s3
mad r0.xyz, r1, c12.x, r0
mul r3.xyz, r3, r0
mad r6.xy, v0, c6, c6.zwzw
mul r1.xyz, r1, c12.x
texld r2.xyz, r6, s5
mad r2.xyz, r2, c11, r1
max r0.w, r0, c22.z
mul r1.xyz, r0.w, c3
mov r1.w, c8.x
add r0.w, c22, -r1
mul r0.xyz, r0, c14.x
mad r2.xyz, r0.w, r5, r2
add r1.xyz, r1, c0
mad r1.xyz, r1, r2, r3
mad oC0.xyz, r1, c22.x, r0
mov_pp oC0.w, c22
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_Normalmap] 2D 4
SetTexture 1 [_Mask] 2D 0
SetTexture 2 [_Glittermap] 2D 5
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 2
SetTexture 5 [_MainTex] 2D 1
ConstBuffer "$Globals" 240
Vector 16 [_LightColor0]
Vector 32 [_Mask_ST]
Float 48 [_Shininess]
Vector 64 [_MainTex_ST]
Vector 80 [_Specularglitter_ST]
Float 96 [_MasktransparencyDebug]
Float 100 [_Specularpower05]
Float 104 [_Glitterpower]
Vector 112 [_Color]
Float 128 [_Reflectioncubemappower]
Vector 144 [_Normalmap_ST]
Float 160 [_Fakelight]
Vector 176 [_Glittercolor]
Float 192 [_Glitterymaskdotsscale]
Float 196 [_Glitteryspeed01]
Vector 208 [_Glittermap_ST]
Float 224 [_Glittercontrast13]
Float 228 [_Specularcontrast13]
Float 232 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerFrame" 208
Vector 64 [glstate_lightmodel_ambient]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerFrame" 3
"ps_4_0
eefiecedafmdobmfakfcfepblhapkjnacgkanppdabaaaaaadaaoaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcbaanaaaa
eaaaaaaaeeadaaaafjaaaaaeegiocaaaaaaaaaaaapaaaaaafjaaaaaeegiocaaa
abaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaa
adaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fidaaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gcbaaaadhcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaaamaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaaamaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
amaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
anaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaagaaaaaaegiccaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaaaoaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaaamaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaaaoaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaa
aaaaaaaaanaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
acaaaaaaaagabaaaafaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaacaaaaaaogikcaaaaaaaaaaa
acaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaaeaaaaaaaagabaaaacaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaagaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaaaoaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaadaaaaaa
aagabaaaadaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaaiaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaaiaaaaaabaaaaaajicaabaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaaihcaabaaaafaaaaaapgapbaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaaaaaaajocaabaaaabaaaaaaagijcaaaaaaaaaaaabaaaaaa
agijcaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaa
jgahbaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
aeaaaaaaogikcaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaafaaaaaaaagabaaaabaaaaaadcaaaaakhcaabaaaacaaaaaa
egacbaaaafaaaaaaegiccaaaaaaaaaaaahaaaaaaegacbaaaacaaaaaaaaaaaaaj
bcaabaaaabaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaaabeaaaaaaaaaiadp
dcaaaaajhcaabaaaacaaaaaaagaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaaaaaaaaajhcaabaaaadaaaaaaegiccaaaadaaaaaaaeaaaaaaegiccaaa
adaaaaaaaeaaaaaadcaaaaajhcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaa
abaaaaaaegacbaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaeaaaaaadcaaaaakhccabaaaaaaaaaaaegacbaaa
aaaaaaaaagiacaaaaaaaaaaaakaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 100 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"3.0-!!ARBfp1.0
PARAM c[25] = { state.lightmodel.ambient,
		program.local[1..21],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MAD R0.xy, fragment.texcoord[0], c[13], c[13].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R1.zw, R0.xywy, c[22].x, -c[22].y;
MUL R1.xy, R1.zwzw, R1.zwzw;
ADD_SAT R1.x, R1, R1.y;
MUL R0.xyz, R1.w, fragment.texcoord[4];
ADD R1.x, -R1, c[22].y;
DP3 R0.w, fragment.texcoord[2], fragment.texcoord[2];
MAD R5.xy, fragment.texcoord[0], c[4], c[4].zwzw;
MAD R0.xyz, R1.z, fragment.texcoord[3], R0;
RSQ R1.w, R1.x;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, fragment.texcoord[2];
RCP R0.w, R1.w;
MAD R2.xyz, R0.w, R1, R0;
DP3 R0.w, R2, R2;
RSQ R1.w, R0.w;
ADD R0.xyz, -fragment.texcoord[1], c[1];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
DP3 R1.x, c[2], c[2];
RSQ R1.x, R1.x;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, R1.x, c[2];
ADD R3.xyz, R1, R0;
MUL R2.xyz, R1.w, R2;
DP3 R0.w, R3, R3;
RSQ R1.w, R0.w;
MUL R3.xyz, R1.w, R3;
DP3 R1.w, R2, R3;
MOV R2.w, c[24].y;
MUL R0.w, R2, c[5].x;
ADD R0.w, R0, c[22].y;
MAX R1.w, R1, c[22].z;
EX2 R0.w, R0.w;
POW R0.w, R1.w, R0.w;
DP3 R1.w, R2, -R0;
MUL R4.xyz, R2, R1.w;
MOV R1.w, c[17].x;
MUL R2.w, R1, -c[24].x;
MUL R1.w, R1, c[23].x;
DP3 R3.x, fragment.texcoord[3], R0;
DP3 R3.y, fragment.texcoord[4], R0;
MAD R0.xyz, -R4, c[22].x, -R0;
MUL R3.xy, R3, -c[17].x;
MAD R3.zw, R3.xyxy, c[22].w, fragment.texcoord[0].xyxy;
ADD R3.zw, R3, -c[23].x;
MUL R4.xy, R3.w, c[23].wyzw;
MAD R3.zw, R3.z, c[23].xyyz, R4.xyxy;
TEX R0.xyz, R0, texture[3], CUBE;
ADD R3.zw, R3, c[23].x;
MAD R4.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R4.xyz, R4, texture[4], 2D;
MUL R4.xyz, R4, c[9].x;
TEX R5.xyz, R5, texture[1], 2D;
ADD R1.w, R1, c[22].y;
MAD R3.xy, -R3, c[22].w, fragment.texcoord[0];
MUL R3.xy, R3, R1.w;
MUL R3.xy, R3, c[16].x;
MUL R0.xyz, R0, c[12].x;
ADD R2.w, R2, c[22].y;
MUL R3.zw, R3, c[16].x;
MUL R3.zw, R3, R2.w;
MUL R3.zw, R3, c[21].x;
MAD R3.zw, R3, c[18].xyxy, c[18];
TEX R6.xyz, R3.zwzw, texture[2], 2D;
MAD R3.xy, R3, c[18], c[18].zwzw;
ADD R6.xyz, -R6, c[22].y;
POW R4.x, R4.x, c[20].x;
POW R4.z, R4.z, c[20].x;
POW R4.y, R4.y, c[20].x;
MAD R4.xyz, R5, -R4, R4;
MAX R5.xyz, R6, R5;
MOV R6.xyz, c[15];
MUL R6.xyz, R6, c[10].x;
TEX R3.xyz, R3, texture[2], 2D;
MUL R3.xyz, R6, R3;
MAD R6.xy, fragment.texcoord[0], c[6], c[6].zwzw;
MUL R5.xyz, R5, c[8].x;
POW R3.x, R3.x, c[19].x;
POW R3.z, R3.z, c[19].x;
POW R3.y, R3.y, c[19].x;
MAD R3.xyz, R5, -R3, R3;
ADD R3.xyz, R3, R4;
MUL R4.xyz, R0.w, c[3];
ADD R3.xyz, R0, R3;
MUL R4.xyz, R4, R3;
DP3 R0.w, R2, R1;
MAX R0.w, R0, c[22].z;
MUL R1.xyz, R0.w, c[3];
TEX R6.xyz, R6, texture[5], 2D;
MOV R1.w, c[22].y;
MUL R3.xyz, R3, c[14].x;
MAD R0.xyz, R6, c[11], R0;
ADD R0.w, R1, -c[8].x;
MAD R0.xyz, R0.w, R5, R0;
ADD R1.xyz, R1, c[0];
MAD R0.xyz, R1, R0, R4;
MAD result.color.xyz, R0, c[22].x, R3;
MOV result.color.w, c[22].y;
END
# 100 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 112 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 0 [glstate_lightmodel_ambient]
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_cube s3
dcl_2d s4
dcl_2d s5
def c22, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c23, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c24, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c25, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c22.x, c22.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c22
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mad r0.xyz, r0.x, v3, r2
mul r1.xyz, r1.x, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
add r3.xyz, -v1, c1
dp3 r0.w, r2, r2
dp3 r0.y, r3, r3
dp3_pp r0.x, c2, c2
rsq_pp r1.x, r0.x
rsq r0.w, r0.w
rsq r0.y, r0.y
mul r0.xyz, r0.y, r3
mul_pp r4.xyz, r1.x, c2
add r1.xyz, r4, r0
mul r2.xyz, r0.w, r2
dp3 r1.w, r1, r1
rsq r0.w, r1.w
mul r1.xyz, r0.w, r1
dp3 r0.w, r2, r1
mov r1.w, c5.x
mad r1.w, r1, c25.z, c25.y
exp r2.w, r1.w
max r0.w, r0, c22.z
pow r1, r0.w, r2.w
dp3 r0.w, r2, -r0
mul r3.xyz, r2, r0.w
mov r1.w, r1.x
mad r1.xyz, -r3, c22.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r5.xy, r0.zwzw, -c17.x
mad r3.xy, r5, c23.x, v0
add r7.xy, r3, c23.y
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s4
mul r6.xyz, r0, c9.x
pow r3, r6.y, c20.x
pow r0, r6.x, c20.x
mov r6.x, r0
pow r0, r6.z, c20.x
mov r6.z, r0
mov r0.z, c17.x
mul r5.zw, r7.y, c23
mov r6.y, r3
mad r0.xy, v0, c4, c4.zwzw
texld r3.xyz, r0, s1
mad r0.xy, r7.x, c24, r5.zwzw
add r0.xy, r0, c24.z
mad r6.xyz, r3, -r6, r6
mad r0.z, r0, c25.x, c25.y
mul r0.xy, r0, c16.x
mul r0.xy, r0, r0.z
mov r0.z, c17.x
mad r2.w, r0.z, c24.z, c24
mad r0.zw, -r5.xyxy, c23.x, v0.xyxy
mul r0.zw, r0, r2.w
mul r5.xy, r0.zwzw, c16.x
mov r0.w, c10.x
mul r0.xy, r0, c21.x
mad r0.xy, r0, c18, c18.zwzw
mad r5.xy, r5, c18, c18.zwzw
texld r0.xyz, r0, s2
texld r5.xyz, r5, s2
mul r7.xyz, c15, r0.w
mul r7.xyz, r7, r5
add r5.xyz, -r0, c22.w
pow r0, r7.x, c19.x
max r3.xyz, r5, r3
mul r5.xyz, r3, c8.x
pow r3, r7.y, c19.x
mov r7.x, r0
pow r0, r7.z, c19.x
mov r7.y, r3
mul r3.xyz, r1.w, c3
dp3 r0.w, r2, r4
mov r7.z, r0
mad r0.xyz, r5, -r7, r7
add r0.xyz, r0, r6
texld r1.xyz, r1, s3
mad r0.xyz, r1, c12.x, r0
mul r3.xyz, r3, r0
mad r6.xy, v0, c6, c6.zwzw
mul r1.xyz, r1, c12.x
texld r2.xyz, r6, s5
mad r2.xyz, r2, c11, r1
max r0.w, r0, c22.z
mul r1.xyz, r0.w, c3
mov r1.w, c8.x
add r0.w, c22, -r1
mul r0.xyz, r0, c14.x
mad r2.xyz, r0.w, r5, r2
add r1.xyz, r1, c0
mad r1.xyz, r1, r2, r3
mad oC0.xyz, r1, c22.x, r0
mov_pp oC0.w, c22
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_Normalmap] 2D 4
SetTexture 1 [_Mask] 2D 0
SetTexture 2 [_Glittermap] 2D 5
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 2
SetTexture 5 [_MainTex] 2D 1
ConstBuffer "$Globals" 240
Vector 16 [_LightColor0]
Vector 32 [_Mask_ST]
Float 48 [_Shininess]
Vector 64 [_MainTex_ST]
Vector 80 [_Specularglitter_ST]
Float 96 [_MasktransparencyDebug]
Float 100 [_Specularpower05]
Float 104 [_Glitterpower]
Vector 112 [_Color]
Float 128 [_Reflectioncubemappower]
Vector 144 [_Normalmap_ST]
Float 160 [_Fakelight]
Vector 176 [_Glittercolor]
Float 192 [_Glitterymaskdotsscale]
Float 196 [_Glitteryspeed01]
Vector 208 [_Glittermap_ST]
Float 224 [_Glittercontrast13]
Float 228 [_Specularcontrast13]
Float 232 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerFrame" 208
Vector 64 [glstate_lightmodel_ambient]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerFrame" 3
"ps_4_0
eefiecedafmdobmfakfcfepblhapkjnacgkanppdabaaaaaadaaoaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcbaanaaaa
eaaaaaaaeeadaaaafjaaaaaeegiocaaaaaaaaaaaapaaaaaafjaaaaaeegiocaaa
abaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaa
adaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fidaaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gcbaaaadhcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaaamaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaaamaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
amaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
anaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaagaaaaaaegiccaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaaaoaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaaamaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaaaoaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaa
aaaaaaaaanaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
acaaaaaaaagabaaaafaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaacaaaaaaogikcaaaaaaaaaaa
acaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaaeaaaaaaaagabaaaacaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaagaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaaaoaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaadaaaaaa
aagabaaaadaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaaiaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaaiaaaaaabaaaaaajicaabaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaaihcaabaaaafaaaaaapgapbaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaaaaaaajocaabaaaabaaaaaaagijcaaaaaaaaaaaabaaaaaa
agijcaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaa
jgahbaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
aeaaaaaaogikcaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaafaaaaaaaagabaaaabaaaaaadcaaaaakhcaabaaaacaaaaaa
egacbaaaafaaaaaaegiccaaaaaaaaaaaahaaaaaaegacbaaaacaaaaaaaaaaaaaj
bcaabaaaabaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaaabeaaaaaaaaaiadp
dcaaaaajhcaabaaaacaaaaaaagaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaaaaaaaaajhcaabaaaadaaaaaaegiccaaaadaaaaaaaeaaaaaaegiccaaa
adaaaaaaaeaaaaaadcaaaaajhcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaa
abaaaaaaegacbaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaeaaaaaadcaaaaakhccabaaaaaaaaaaaegacbaaa
aaaaaaaaagiacaaaaaaaaaaaakaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 100 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"3.0-!!ARBfp1.0
PARAM c[25] = { state.lightmodel.ambient,
		program.local[1..21],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
MAD R0.xy, fragment.texcoord[0], c[13], c[13].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R1.zw, R0.xywy, c[22].x, -c[22].y;
MUL R1.xy, R1.zwzw, R1.zwzw;
ADD_SAT R1.x, R1, R1.y;
MUL R0.xyz, R1.w, fragment.texcoord[4];
ADD R1.x, -R1, c[22].y;
DP3 R0.w, fragment.texcoord[2], fragment.texcoord[2];
MAD R5.xy, fragment.texcoord[0], c[4], c[4].zwzw;
MAD R0.xyz, R1.z, fragment.texcoord[3], R0;
RSQ R1.w, R1.x;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, fragment.texcoord[2];
RCP R0.w, R1.w;
MAD R2.xyz, R0.w, R1, R0;
DP3 R0.w, R2, R2;
RSQ R1.w, R0.w;
ADD R0.xyz, -fragment.texcoord[1], c[1];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
DP3 R1.x, c[2], c[2];
RSQ R1.x, R1.x;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, R1.x, c[2];
ADD R3.xyz, R1, R0;
MUL R2.xyz, R1.w, R2;
DP3 R0.w, R3, R3;
RSQ R1.w, R0.w;
MUL R3.xyz, R1.w, R3;
DP3 R1.w, R2, R3;
MOV R2.w, c[24].y;
MUL R0.w, R2, c[5].x;
ADD R0.w, R0, c[22].y;
MAX R1.w, R1, c[22].z;
EX2 R0.w, R0.w;
POW R0.w, R1.w, R0.w;
DP3 R1.w, R2, -R0;
MUL R4.xyz, R2, R1.w;
MOV R1.w, c[17].x;
MUL R2.w, R1, -c[24].x;
MUL R1.w, R1, c[23].x;
DP3 R3.x, fragment.texcoord[3], R0;
DP3 R3.y, fragment.texcoord[4], R0;
MAD R0.xyz, -R4, c[22].x, -R0;
MUL R3.xy, R3, -c[17].x;
MAD R3.zw, R3.xyxy, c[22].w, fragment.texcoord[0].xyxy;
ADD R3.zw, R3, -c[23].x;
MUL R4.xy, R3.w, c[23].wyzw;
MAD R3.zw, R3.z, c[23].xyyz, R4.xyxy;
TEX R0.xyz, R0, texture[3], CUBE;
ADD R3.zw, R3, c[23].x;
MAD R4.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R4.xyz, R4, texture[4], 2D;
MUL R4.xyz, R4, c[9].x;
TEX R5.xyz, R5, texture[1], 2D;
ADD R1.w, R1, c[22].y;
MAD R3.xy, -R3, c[22].w, fragment.texcoord[0];
MUL R3.xy, R3, R1.w;
MUL R3.xy, R3, c[16].x;
MUL R0.xyz, R0, c[12].x;
ADD R2.w, R2, c[22].y;
MUL R3.zw, R3, c[16].x;
MUL R3.zw, R3, R2.w;
MUL R3.zw, R3, c[21].x;
MAD R3.zw, R3, c[18].xyxy, c[18];
TEX R6.xyz, R3.zwzw, texture[2], 2D;
MAD R3.xy, R3, c[18], c[18].zwzw;
ADD R6.xyz, -R6, c[22].y;
POW R4.x, R4.x, c[20].x;
POW R4.z, R4.z, c[20].x;
POW R4.y, R4.y, c[20].x;
MAD R4.xyz, R5, -R4, R4;
MAX R5.xyz, R6, R5;
MOV R6.xyz, c[15];
MUL R6.xyz, R6, c[10].x;
TEX R3.xyz, R3, texture[2], 2D;
MUL R3.xyz, R6, R3;
MAD R6.xy, fragment.texcoord[0], c[6], c[6].zwzw;
MUL R5.xyz, R5, c[8].x;
POW R3.x, R3.x, c[19].x;
POW R3.z, R3.z, c[19].x;
POW R3.y, R3.y, c[19].x;
MAD R3.xyz, R5, -R3, R3;
ADD R3.xyz, R3, R4;
MUL R4.xyz, R0.w, c[3];
ADD R3.xyz, R0, R3;
MUL R4.xyz, R4, R3;
DP3 R0.w, R2, R1;
MAX R0.w, R0, c[22].z;
MUL R1.xyz, R0.w, c[3];
TEX R6.xyz, R6, texture[5], 2D;
MOV R1.w, c[22].y;
MUL R3.xyz, R3, c[14].x;
MAD R0.xyz, R6, c[11], R0;
ADD R0.w, R1, -c[8].x;
MAD R0.xyz, R0.w, R5, R0;
ADD R1.xyz, R1, c[0];
MAD R0.xyz, R1, R0, R4;
MAD result.color.xyz, R0, c[22].x, R3;
MOV result.color.w, c[22].y;
END
# 100 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 112 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [glstate_lightmodel_ambient]
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_cube s3
dcl_2d s4
dcl_2d s5
def c22, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c23, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c24, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c25, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c22.x, c22.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c22
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mad r0.xyz, r0.x, v3, r2
mul r1.xyz, r1.x, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
add r3.xyz, -v1, c1
dp3 r0.w, r2, r2
dp3 r0.y, r3, r3
dp3_pp r0.x, c2, c2
rsq_pp r1.x, r0.x
rsq r0.w, r0.w
rsq r0.y, r0.y
mul r0.xyz, r0.y, r3
mul_pp r4.xyz, r1.x, c2
add r1.xyz, r4, r0
mul r2.xyz, r0.w, r2
dp3 r1.w, r1, r1
rsq r0.w, r1.w
mul r1.xyz, r0.w, r1
dp3 r0.w, r2, r1
mov r1.w, c5.x
mad r1.w, r1, c25.z, c25.y
exp r2.w, r1.w
max r0.w, r0, c22.z
pow r1, r0.w, r2.w
dp3 r0.w, r2, -r0
mul r3.xyz, r2, r0.w
mov r1.w, r1.x
mad r1.xyz, -r3, c22.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r5.xy, r0.zwzw, -c17.x
mad r3.xy, r5, c23.x, v0
add r7.xy, r3, c23.y
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s4
mul r6.xyz, r0, c9.x
pow r3, r6.y, c20.x
pow r0, r6.x, c20.x
mov r6.x, r0
pow r0, r6.z, c20.x
mov r6.z, r0
mov r0.z, c17.x
mul r5.zw, r7.y, c23
mov r6.y, r3
mad r0.xy, v0, c4, c4.zwzw
texld r3.xyz, r0, s1
mad r0.xy, r7.x, c24, r5.zwzw
add r0.xy, r0, c24.z
mad r6.xyz, r3, -r6, r6
mad r0.z, r0, c25.x, c25.y
mul r0.xy, r0, c16.x
mul r0.xy, r0, r0.z
mov r0.z, c17.x
mad r2.w, r0.z, c24.z, c24
mad r0.zw, -r5.xyxy, c23.x, v0.xyxy
mul r0.zw, r0, r2.w
mul r5.xy, r0.zwzw, c16.x
mov r0.w, c10.x
mul r0.xy, r0, c21.x
mad r0.xy, r0, c18, c18.zwzw
mad r5.xy, r5, c18, c18.zwzw
texld r0.xyz, r0, s2
texld r5.xyz, r5, s2
mul r7.xyz, c15, r0.w
mul r7.xyz, r7, r5
add r5.xyz, -r0, c22.w
pow r0, r7.x, c19.x
max r3.xyz, r5, r3
mul r5.xyz, r3, c8.x
pow r3, r7.y, c19.x
mov r7.x, r0
pow r0, r7.z, c19.x
mov r7.y, r3
mul r3.xyz, r1.w, c3
dp3 r0.w, r2, r4
mov r7.z, r0
mad r0.xyz, r5, -r7, r7
add r0.xyz, r0, r6
texld r1.xyz, r1, s3
mad r0.xyz, r1, c12.x, r0
mul r3.xyz, r3, r0
mad r6.xy, v0, c6, c6.zwzw
mul r1.xyz, r1, c12.x
texld r2.xyz, r6, s5
mad r2.xyz, r2, c11, r1
max r0.w, r0, c22.z
mul r1.xyz, r0.w, c3
mov r1.w, c8.x
add r0.w, c22, -r1
mul r0.xyz, r0, c14.x
mad r2.xyz, r0.w, r5, r2
add r1.xyz, r1, c0
mad r1.xyz, r1, r2, r3
mad oC0.xyz, r1, c22.x, r0
mov_pp oC0.w, c22
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_Normalmap] 2D 4
SetTexture 1 [_Mask] 2D 0
SetTexture 2 [_Glittermap] 2D 5
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 2
SetTexture 5 [_MainTex] 2D 1
ConstBuffer "$Globals" 240
Vector 16 [_LightColor0]
Vector 32 [_Mask_ST]
Float 48 [_Shininess]
Vector 64 [_MainTex_ST]
Vector 80 [_Specularglitter_ST]
Float 96 [_MasktransparencyDebug]
Float 100 [_Specularpower05]
Float 104 [_Glitterpower]
Vector 112 [_Color]
Float 128 [_Reflectioncubemappower]
Vector 144 [_Normalmap_ST]
Float 160 [_Fakelight]
Vector 176 [_Glittercolor]
Float 192 [_Glitterymaskdotsscale]
Float 196 [_Glitteryspeed01]
Vector 208 [_Glittermap_ST]
Float 224 [_Glittercontrast13]
Float 228 [_Specularcontrast13]
Float 232 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerFrame" 208
Vector 64 [glstate_lightmodel_ambient]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerFrame" 3
"ps_4_0
eefiecedafmdobmfakfcfepblhapkjnacgkanppdabaaaaaadaaoaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcbaanaaaa
eaaaaaaaeeadaaaafjaaaaaeegiocaaaaaaaaaaaapaaaaaafjaaaaaeegiocaaa
abaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaa
adaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fidaaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gcbaaaadhcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaaamaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaaamaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
amaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
anaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaagaaaaaaegiccaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaaaoaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaaamaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaaaoaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaa
aaaaaaaaanaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
acaaaaaaaagabaaaafaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaacaaaaaaogikcaaaaaaaaaaa
acaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaaeaaaaaaaagabaaaacaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaagaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaaaoaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaadaaaaaa
aagabaaaadaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaaiaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaaiaaaaaabaaaaaajicaabaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaaihcaabaaaafaaaaaapgapbaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaaaaaaajocaabaaaabaaaaaaagijcaaaaaaaaaaaabaaaaaa
agijcaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaa
jgahbaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
aeaaaaaaogikcaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaafaaaaaaaagabaaaabaaaaaadcaaaaakhcaabaaaacaaaaaa
egacbaaaafaaaaaaegiccaaaaaaaaaaaahaaaaaaegacbaaaacaaaaaaaaaaaaaj
bcaabaaaabaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaaabeaaaaaaaaaiadp
dcaaaaajhcaabaaaacaaaaaaagaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaaaaaaaaajhcaabaaaadaaaaaaegiccaaaadaaaaaaaeaaaaaaegiccaaa
adaaaaaaaeaaaaaadcaaaaajhcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaa
abaaaaaaegacbaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaeaaaaaadcaaaaakhccabaaaaaaaaaaaegacbaaa
aaaaaaaaagiacaaaaaaaaaaaakaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 104 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"3.0-!!ARBfp1.0
PARAM c[25] = { state.lightmodel.ambient,
		program.local[1..21],
		{ 0.050000001, 0.5, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 1 },
		{ 2, 0, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
ADD R1.xyz, -fragment.texcoord[1], c[1];
DP3 R0.x, R1, R1;
RSQ R0.x, R0.x;
MUL R1.xyz, R0.x, R1;
MOV R4.xyz, c[15];
MUL R4.xyz, R4, c[10].x;
DP3 R0.x, R1, fragment.texcoord[3];
DP3 R0.y, fragment.texcoord[4], R1;
MUL R3.xy, R0, -c[17].x;
MAD R0.xy, R3, c[22].x, fragment.texcoord[0];
ADD R0.zw, R0.xyxy, -c[22].y;
MUL R0.xy, R0.w, c[23];
MAD R0.xy, R0.z, c[22].zwzw, R0;
ADD R2.xy, R0, c[22].y;
MOV R0.w, c[17].x;
MAD R3.zw, fragment.texcoord[0].xyxy, c[4].xyxy, c[4];
MAD R0.x, R0.w, -c[23].z, c[23].w;
MUL R2.xy, R2, c[16].x;
MUL R0.xy, R2, R0.x;
MUL R0.xy, R0, c[21].x;
MAD R0.xy, R0, c[18], c[18].zwzw;
TEX R0.xyz, R0, texture[3], 2D;
ADD R2.xyz, -R0, c[23].w;
MUL R0.x, R0.w, c[22].y;
MAD R0.zw, -R3.xyxy, c[22].x, fragment.texcoord[0].xyxy;
ADD R0.x, R0, c[23].w;
MUL R3.xy, R0.zwzw, R0.x;
TEX R0.xyz, R3.zwzw, texture[2], 2D;
MAX R2.xyz, R2, R0;
MUL R3.xy, R3, c[16].x;
MAD R3.xy, R3, c[18], c[18].zwzw;
TEX R3.xyz, R3, texture[3], 2D;
MUL R3.xyz, R4, R3;
MAD R4.xy, fragment.texcoord[0], c[13], c[13].zwzw;
MUL R2.xyz, R2, c[8].x;
MOV R0.w, c[23];
TEX R4.yw, R4, texture[0], 2D;
MAD R5.xy, R4.wyzw, c[24].x, -R0.w;
MUL R6.xy, R5, R5;
ADD_SAT R0.w, R6.x, R6.y;
ADD R1.w, -R0, c[23];
MUL R4.xyz, fragment.texcoord[4], R5.y;
DP3 R0.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.w, R0.w;
RSQ R1.w, R1.w;
MUL R6.xyz, R0.w, fragment.texcoord[2];
MAD R4.xyz, fragment.texcoord[3], R5.x, R4;
MAD R5.zw, fragment.texcoord[0].xyxy, c[7].xyxy, c[7];
TEX R5.xyz, R5.zwzw, texture[5], 2D;
MUL R5.xyz, R5, c[9].x;
RCP R1.w, R1.w;
MAD R4.xyz, R1.w, R6, R4;
DP3 R0.w, R4, R4;
POW R5.x, R5.x, c[20].x;
POW R5.z, R5.z, c[20].x;
POW R5.y, R5.y, c[20].x;
MAD R0.xyz, R0, -R5, R5;
POW R3.x, R3.x, c[19].x;
POW R3.y, R3.y, c[19].x;
POW R3.z, R3.z, c[19].x;
MAD R3.xyz, R2, -R3, R3;
ADD R5.xyz, R3, R0;
RSQ R0.x, R0.w;
MUL R0.xyz, R0.x, R4;
DP3 R1.w, -R1, R0;
DP3 R0.w, c[2], c[2];
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, c[2];
ADD R6.xyz, R1, R3;
MUL R4.xyz, R0, R1.w;
MAD R1.xyz, -R4, c[24].x, -R1;
DP3 R0.w, R6, R6;
TEX R1.xyz, R1, texture[4], CUBE;
MUL R4.xyz, R1, c[12].x;
ADD R1.xyz, R5, R4;
RSQ R0.w, R0.w;
MUL R6.xyz, R0.w, R6;
DP3 R0.w, R0, R6;
MAD R6.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R6.xyz, R6, texture[6], 2D;
MOV R5.xw, c[24].zyzx;
MAX R2.w, R0, c[24].y;
MUL R0.w, R5.x, c[5].x;
ADD R1.w, R0, c[23];
TXP R5.x, fragment.texcoord[5], texture[1], 2D;
MUL R0.w, R5.x, c[24].x;
EX2 R1.w, R1.w;
POW R1.w, R2.w, R1.w;
FLR R3.w, R0;
MUL R5.xyz, R3.w, c[3];
MUL R5.xyz, R5, R1.w;
DP3 R1.w, R0, R3;
MOV R2.w, c[23];
MUL R5.xyz, R1, R5;
MAD R4.xyz, R6, c[11], R4;
ADD R0.x, R2.w, -c[8];
MAD R0.xyz, R2, R0.x, R4;
MAX R1.w, R1, c[24].y;
MUL R2.xyz, R5.w, c[0];
MUL R3.xyz, R0.w, c[3];
MAD R2.xyz, R1.w, R3, R2;
MAD R0.xyz, R2, R0, R5;
MAD result.color.xyz, R1, c[14].x, R0;
MOV result.color.w, c[23];
END
# 104 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 117 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [glstate_lightmodel_ambient]
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c22, 2.00000000, -1.00000000, 0.05000000, -0.50000000
def c23, 0.00159374, -0.99999875, -0.00159374, 0.50000000
def c24, -0.31830987, 1.00000000, 0.50000000, 0.00000000
def c25, 10.00000000, 1.00000000, 0, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c22.x, c22.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c24.y
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mul r1.xyz, r1.x, v2
mad r0.xyz, r0.x, v3, r2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
dp3 r0.w, r2, r2
add r0.xyz, -v1, c1
dp3 r1.x, r0, r0
rsq r1.x, r1.x
rsq r0.w, r0.w
dp3_pp r1.y, c2, c2
rsq_pp r1.y, r1.y
mul r0.xyz, r1.x, r0
mul_pp r6.xyz, r1.y, c2
add r1.xyz, r0, r6
mul r2.xyz, r0.w, r2
dp3 r1.w, r1, r1
rsq r0.w, r1.w
mul r1.xyz, r0.w, r1
dp3 r0.w, r2, r1
mov r1.w, c5.x
mad r1.w, r1, c25.x, c25.y
exp r2.w, r1.w
max r0.w, r0, c24
pow r1, r0.w, r2.w
texldp r3.x, v5, s1
dp3 r0.w, r2, -r0
mul_pp r1.w, r3.x, c22.x
mov r3.w, r1.x
frc r1.x, r1.w
add r2.w, r1, -r1.x
mul r1.xyz, r2, r0.w
mul r3.xyz, r2.w, c3
mad r1.xyz, -r1, c22.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r4.xy, r0.zwzw, -c17.x
mul r7.xyz, r3, r3.w
mad r3.xy, r4, c22.z, v0
add r8.xy, r3, c22.w
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s5
mul r5.xyz, r0, c9.x
pow r3, r5.y, c20.x
pow r0, r5.x, c20.x
mov r5.x, r0
pow r0, r5.z, c20.x
mov r5.z, r0
mov r0.z, c17.x
mul r4.zw, r8.y, c23.xyxy
texld r1.xyz, r1, s4
mov r5.y, r3
mad r0.xy, v0, c4, c4.zwzw
texld r3.xyz, r0, s2
mad r0.xy, r8.x, c23.yzzw, r4.zwzw
add r0.xy, r0, c23.w
mad r5.xyz, r3, -r5, r5
mad r0.z, r0, c24.x, c24.y
mul r0.xy, r0, c16.x
mul r0.xy, r0, r0.z
mov r0.z, c17.x
mad r2.w, r0.z, c24.z, c24.y
mad r0.zw, -r4.xyxy, c22.z, v0.xyxy
mul r0.zw, r0, r2.w
mul r4.xy, r0.zwzw, c16.x
mov r0.w, c10.x
mul r0.xy, r0, c21.x
mad r0.xy, r0, c18, c18.zwzw
mad r4.xy, r4, c18, c18.zwzw
texld r0.xyz, r0, s3
texld r4.xyz, r4, s3
mul r8.xyz, c15, r0.w
mul r8.xyz, r8, r4
add r4.xyz, -r0, c24.y
pow r0, r8.x, c19.x
max r3.xyz, r4, r3
mul r4.xyz, r3, c8.x
pow r3, r8.y, c19.x
mov r8.x, r0
pow r0, r8.z, c19.x
mov r0.w, c8.x
mov r8.y, r3
mov r8.z, r0
mad r0.xyz, r4, -r8, r8
add r0.xyz, r0, r5
mad r0.xyz, r1, c12.x, r0
mul r3.xyz, r0, r7
mul r5.xyz, r1, c12.x
mad r7.xy, v0, c6, c6.zwzw
texld r1.xyz, r7, s6
add r0.w, c24.y, -r0
mad r1.xyz, r1, c11, r5
mad r1.xyz, r4, r0.w, r1
dp3 r0.w, r2, r6
mov r2.xyz, c0
max r0.w, r0, c24
mul r2.xyz, c22.x, r2
mul r4.xyz, r1.w, c3
mad r2.xyz, r0.w, r4, r2
mad r1.xyz, r2, r1, r3
mad oC0.xyz, r0, c14.x, r1
mov_pp oC0.w, c24.y
"
}
SubProgram "d3d11 " {
// Stats: 89 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_Normalmap] 2D 5
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [_Mask] 2D 1
SetTexture 3 [_Glittermap] 2D 6
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 3
SetTexture 6 [_MainTex] 2D 2
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Float 224 [_Fakelight]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerFrame" 208
Vector 64 [glstate_lightmodel_ambient]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerFrame" 3
"ps_4_0
eefiecedcbobehfieadfellffmikceabgfloddkmabaaaaaapmaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcmeanaaaaeaaaaaaahbadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafidaaaaeaahabaaaaeaaaaaa
ffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaa
gcbaaaadlcbabaaaagaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
bbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaadaaaaaaaagabaaaagaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaa
aaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
adaaaaaaaagabaaaagaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
akaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaafaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
afaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaaeaaaaaa
aagabaaaaeaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaamaaaaaabaaaaaajicaabaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaaihcaabaaaafaaaaaapgapbaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaoaaaaahgcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaajgafbaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaaaaaaaaahccaabaaaabaaaaaaakaabaaaaeaaaaaaakaabaaa
aeaaaaaaebaaaaafecaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaihcaabaaa
aeaaaaaafgafbaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaadiaaaaaiocaabaaa
abaaaaaakgakbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
abaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaacaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaafaaaaaaegiccaaaaaaaaaaaalaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaabaaaaaaakiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaabaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaaaaaaaaajhcaabaaaadaaaaaaegiccaaa
adaaaaaaaeaaaaaaegiccaaaadaaaaaaaeaaaaaadcaaaaajhcaabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaadcaaaaajhcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaaaoaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 104 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"3.0-!!ARBfp1.0
PARAM c[25] = { state.lightmodel.ambient,
		program.local[1..21],
		{ 0.050000001, 0.5, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 1 },
		{ 2, 0, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
ADD R1.xyz, -fragment.texcoord[1], c[1];
DP3 R0.x, R1, R1;
RSQ R0.x, R0.x;
MUL R1.xyz, R0.x, R1;
MOV R4.xyz, c[15];
MUL R4.xyz, R4, c[10].x;
DP3 R0.x, R1, fragment.texcoord[3];
DP3 R0.y, fragment.texcoord[4], R1;
MUL R3.xy, R0, -c[17].x;
MAD R0.xy, R3, c[22].x, fragment.texcoord[0];
ADD R0.zw, R0.xyxy, -c[22].y;
MUL R0.xy, R0.w, c[23];
MAD R0.xy, R0.z, c[22].zwzw, R0;
ADD R2.xy, R0, c[22].y;
MOV R0.w, c[17].x;
MAD R3.zw, fragment.texcoord[0].xyxy, c[4].xyxy, c[4];
MAD R0.x, R0.w, -c[23].z, c[23].w;
MUL R2.xy, R2, c[16].x;
MUL R0.xy, R2, R0.x;
MUL R0.xy, R0, c[21].x;
MAD R0.xy, R0, c[18], c[18].zwzw;
TEX R0.xyz, R0, texture[3], 2D;
ADD R2.xyz, -R0, c[23].w;
MUL R0.x, R0.w, c[22].y;
MAD R0.zw, -R3.xyxy, c[22].x, fragment.texcoord[0].xyxy;
ADD R0.x, R0, c[23].w;
MUL R3.xy, R0.zwzw, R0.x;
TEX R0.xyz, R3.zwzw, texture[2], 2D;
MAX R2.xyz, R2, R0;
MUL R3.xy, R3, c[16].x;
MAD R3.xy, R3, c[18], c[18].zwzw;
TEX R3.xyz, R3, texture[3], 2D;
MUL R3.xyz, R4, R3;
MAD R4.xy, fragment.texcoord[0], c[13], c[13].zwzw;
MUL R2.xyz, R2, c[8].x;
MOV R0.w, c[23];
TEX R4.yw, R4, texture[0], 2D;
MAD R5.xy, R4.wyzw, c[24].x, -R0.w;
MUL R6.xy, R5, R5;
ADD_SAT R0.w, R6.x, R6.y;
ADD R1.w, -R0, c[23];
MUL R4.xyz, fragment.texcoord[4], R5.y;
DP3 R0.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.w, R0.w;
RSQ R1.w, R1.w;
MUL R6.xyz, R0.w, fragment.texcoord[2];
MAD R4.xyz, fragment.texcoord[3], R5.x, R4;
MAD R5.zw, fragment.texcoord[0].xyxy, c[7].xyxy, c[7];
TEX R5.xyz, R5.zwzw, texture[5], 2D;
MUL R5.xyz, R5, c[9].x;
RCP R1.w, R1.w;
MAD R4.xyz, R1.w, R6, R4;
DP3 R0.w, R4, R4;
POW R5.x, R5.x, c[20].x;
POW R5.z, R5.z, c[20].x;
POW R5.y, R5.y, c[20].x;
MAD R0.xyz, R0, -R5, R5;
POW R3.x, R3.x, c[19].x;
POW R3.y, R3.y, c[19].x;
POW R3.z, R3.z, c[19].x;
MAD R3.xyz, R2, -R3, R3;
ADD R5.xyz, R3, R0;
RSQ R0.x, R0.w;
MUL R0.xyz, R0.x, R4;
DP3 R1.w, -R1, R0;
DP3 R0.w, c[2], c[2];
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, c[2];
ADD R6.xyz, R1, R3;
MUL R4.xyz, R0, R1.w;
MAD R1.xyz, -R4, c[24].x, -R1;
DP3 R0.w, R6, R6;
TEX R1.xyz, R1, texture[4], CUBE;
MUL R4.xyz, R1, c[12].x;
ADD R1.xyz, R5, R4;
RSQ R0.w, R0.w;
MUL R6.xyz, R0.w, R6;
DP3 R0.w, R0, R6;
MAD R6.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R6.xyz, R6, texture[6], 2D;
MOV R5.xw, c[24].zyzx;
MAX R2.w, R0, c[24].y;
MUL R0.w, R5.x, c[5].x;
ADD R1.w, R0, c[23];
TXP R5.x, fragment.texcoord[5], texture[1], 2D;
MUL R0.w, R5.x, c[24].x;
EX2 R1.w, R1.w;
POW R1.w, R2.w, R1.w;
FLR R3.w, R0;
MUL R5.xyz, R3.w, c[3];
MUL R5.xyz, R5, R1.w;
DP3 R1.w, R0, R3;
MOV R2.w, c[23];
MUL R5.xyz, R1, R5;
MAD R4.xyz, R6, c[11], R4;
ADD R0.x, R2.w, -c[8];
MAD R0.xyz, R2, R0.x, R4;
MAX R1.w, R1, c[24].y;
MUL R2.xyz, R5.w, c[0];
MUL R3.xyz, R0.w, c[3];
MAD R2.xyz, R1.w, R3, R2;
MAD R0.xyz, R2, R0, R5;
MAD result.color.xyz, R1, c[14].x, R0;
MOV result.color.w, c[23];
END
# 104 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 117 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 0 [glstate_lightmodel_ambient]
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c22, 2.00000000, -1.00000000, 0.05000000, -0.50000000
def c23, 0.00159374, -0.99999875, -0.00159374, 0.50000000
def c24, -0.31830987, 1.00000000, 0.50000000, 0.00000000
def c25, 10.00000000, 1.00000000, 0, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c22.x, c22.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c24.y
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mul r1.xyz, r1.x, v2
mad r0.xyz, r0.x, v3, r2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
dp3 r0.w, r2, r2
add r0.xyz, -v1, c1
dp3 r1.x, r0, r0
rsq r1.x, r1.x
rsq r0.w, r0.w
dp3_pp r1.y, c2, c2
rsq_pp r1.y, r1.y
mul r0.xyz, r1.x, r0
mul_pp r6.xyz, r1.y, c2
add r1.xyz, r0, r6
mul r2.xyz, r0.w, r2
dp3 r1.w, r1, r1
rsq r0.w, r1.w
mul r1.xyz, r0.w, r1
dp3 r0.w, r2, r1
mov r1.w, c5.x
mad r1.w, r1, c25.x, c25.y
exp r2.w, r1.w
max r0.w, r0, c24
pow r1, r0.w, r2.w
texldp r3.x, v5, s1
dp3 r0.w, r2, -r0
mul_pp r1.w, r3.x, c22.x
mov r3.w, r1.x
frc r1.x, r1.w
add r2.w, r1, -r1.x
mul r1.xyz, r2, r0.w
mul r3.xyz, r2.w, c3
mad r1.xyz, -r1, c22.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r4.xy, r0.zwzw, -c17.x
mul r7.xyz, r3, r3.w
mad r3.xy, r4, c22.z, v0
add r8.xy, r3, c22.w
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s5
mul r5.xyz, r0, c9.x
pow r3, r5.y, c20.x
pow r0, r5.x, c20.x
mov r5.x, r0
pow r0, r5.z, c20.x
mov r5.z, r0
mov r0.z, c17.x
mul r4.zw, r8.y, c23.xyxy
texld r1.xyz, r1, s4
mov r5.y, r3
mad r0.xy, v0, c4, c4.zwzw
texld r3.xyz, r0, s2
mad r0.xy, r8.x, c23.yzzw, r4.zwzw
add r0.xy, r0, c23.w
mad r5.xyz, r3, -r5, r5
mad r0.z, r0, c24.x, c24.y
mul r0.xy, r0, c16.x
mul r0.xy, r0, r0.z
mov r0.z, c17.x
mad r2.w, r0.z, c24.z, c24.y
mad r0.zw, -r4.xyxy, c22.z, v0.xyxy
mul r0.zw, r0, r2.w
mul r4.xy, r0.zwzw, c16.x
mov r0.w, c10.x
mul r0.xy, r0, c21.x
mad r0.xy, r0, c18, c18.zwzw
mad r4.xy, r4, c18, c18.zwzw
texld r0.xyz, r0, s3
texld r4.xyz, r4, s3
mul r8.xyz, c15, r0.w
mul r8.xyz, r8, r4
add r4.xyz, -r0, c24.y
pow r0, r8.x, c19.x
max r3.xyz, r4, r3
mul r4.xyz, r3, c8.x
pow r3, r8.y, c19.x
mov r8.x, r0
pow r0, r8.z, c19.x
mov r0.w, c8.x
mov r8.y, r3
mov r8.z, r0
mad r0.xyz, r4, -r8, r8
add r0.xyz, r0, r5
mad r0.xyz, r1, c12.x, r0
mul r3.xyz, r0, r7
mul r5.xyz, r1, c12.x
mad r7.xy, v0, c6, c6.zwzw
texld r1.xyz, r7, s6
add r0.w, c24.y, -r0
mad r1.xyz, r1, c11, r5
mad r1.xyz, r4, r0.w, r1
dp3 r0.w, r2, r6
mov r2.xyz, c0
max r0.w, r0, c24
mul r2.xyz, c22.x, r2
mul r4.xyz, r1.w, c3
mad r2.xyz, r0.w, r4, r2
mad r1.xyz, r2, r1, r3
mad oC0.xyz, r0, c14.x, r1
mov_pp oC0.w, c24.y
"
}
SubProgram "d3d11 " {
// Stats: 89 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_Normalmap] 2D 5
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [_Mask] 2D 1
SetTexture 3 [_Glittermap] 2D 6
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 3
SetTexture 6 [_MainTex] 2D 2
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Float 224 [_Fakelight]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerFrame" 208
Vector 64 [glstate_lightmodel_ambient]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerFrame" 3
"ps_4_0
eefiecedcbobehfieadfellffmikceabgfloddkmabaaaaaapmaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcmeanaaaaeaaaaaaahbadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafidaaaaeaahabaaaaeaaaaaa
ffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaa
gcbaaaadlcbabaaaagaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
bbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaadaaaaaaaagabaaaagaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaa
aaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
adaaaaaaaagabaaaagaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
akaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaafaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
afaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaaeaaaaaa
aagabaaaaeaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaamaaaaaabaaaaaajicaabaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaaihcaabaaaafaaaaaapgapbaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaoaaaaahgcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaajgafbaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaaaaaaaaahccaabaaaabaaaaaaakaabaaaaeaaaaaaakaabaaa
aeaaaaaaebaaaaafecaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaihcaabaaa
aeaaaaaafgafbaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaadiaaaaaiocaabaaa
abaaaaaakgakbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
abaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaacaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaafaaaaaaegiccaaaaaaaaaaaalaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaabaaaaaaakiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaabaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaaaaaaaaajhcaabaaaadaaaaaaegiccaaa
adaaaaaaaeaaaaaaegiccaaaadaaaaaaaeaaaaaadcaaaaajhcaabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaadcaaaaajhcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaaaoaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 104 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"3.0-!!ARBfp1.0
PARAM c[25] = { state.lightmodel.ambient,
		program.local[1..21],
		{ 0.050000001, 0.5, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 1 },
		{ 2, 0, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
ADD R1.xyz, -fragment.texcoord[1], c[1];
DP3 R0.x, R1, R1;
RSQ R0.x, R0.x;
MUL R1.xyz, R0.x, R1;
MOV R4.xyz, c[15];
MUL R4.xyz, R4, c[10].x;
DP3 R0.x, R1, fragment.texcoord[3];
DP3 R0.y, fragment.texcoord[4], R1;
MUL R3.xy, R0, -c[17].x;
MAD R0.xy, R3, c[22].x, fragment.texcoord[0];
ADD R0.zw, R0.xyxy, -c[22].y;
MUL R0.xy, R0.w, c[23];
MAD R0.xy, R0.z, c[22].zwzw, R0;
ADD R2.xy, R0, c[22].y;
MOV R0.w, c[17].x;
MAD R3.zw, fragment.texcoord[0].xyxy, c[4].xyxy, c[4];
MAD R0.x, R0.w, -c[23].z, c[23].w;
MUL R2.xy, R2, c[16].x;
MUL R0.xy, R2, R0.x;
MUL R0.xy, R0, c[21].x;
MAD R0.xy, R0, c[18], c[18].zwzw;
TEX R0.xyz, R0, texture[3], 2D;
ADD R2.xyz, -R0, c[23].w;
MUL R0.x, R0.w, c[22].y;
MAD R0.zw, -R3.xyxy, c[22].x, fragment.texcoord[0].xyxy;
ADD R0.x, R0, c[23].w;
MUL R3.xy, R0.zwzw, R0.x;
TEX R0.xyz, R3.zwzw, texture[2], 2D;
MAX R2.xyz, R2, R0;
MUL R3.xy, R3, c[16].x;
MAD R3.xy, R3, c[18], c[18].zwzw;
TEX R3.xyz, R3, texture[3], 2D;
MUL R3.xyz, R4, R3;
MAD R4.xy, fragment.texcoord[0], c[13], c[13].zwzw;
MUL R2.xyz, R2, c[8].x;
MOV R0.w, c[23];
TEX R4.yw, R4, texture[0], 2D;
MAD R5.xy, R4.wyzw, c[24].x, -R0.w;
MUL R6.xy, R5, R5;
ADD_SAT R0.w, R6.x, R6.y;
ADD R1.w, -R0, c[23];
MUL R4.xyz, fragment.texcoord[4], R5.y;
DP3 R0.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.w, R0.w;
RSQ R1.w, R1.w;
MUL R6.xyz, R0.w, fragment.texcoord[2];
MAD R4.xyz, fragment.texcoord[3], R5.x, R4;
MAD R5.zw, fragment.texcoord[0].xyxy, c[7].xyxy, c[7];
TEX R5.xyz, R5.zwzw, texture[5], 2D;
MUL R5.xyz, R5, c[9].x;
RCP R1.w, R1.w;
MAD R4.xyz, R1.w, R6, R4;
DP3 R0.w, R4, R4;
POW R5.x, R5.x, c[20].x;
POW R5.z, R5.z, c[20].x;
POW R5.y, R5.y, c[20].x;
MAD R0.xyz, R0, -R5, R5;
POW R3.x, R3.x, c[19].x;
POW R3.y, R3.y, c[19].x;
POW R3.z, R3.z, c[19].x;
MAD R3.xyz, R2, -R3, R3;
ADD R5.xyz, R3, R0;
RSQ R0.x, R0.w;
MUL R0.xyz, R0.x, R4;
DP3 R1.w, -R1, R0;
DP3 R0.w, c[2], c[2];
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, c[2];
ADD R6.xyz, R1, R3;
MUL R4.xyz, R0, R1.w;
MAD R1.xyz, -R4, c[24].x, -R1;
DP3 R0.w, R6, R6;
TEX R1.xyz, R1, texture[4], CUBE;
MUL R4.xyz, R1, c[12].x;
ADD R1.xyz, R5, R4;
RSQ R0.w, R0.w;
MUL R6.xyz, R0.w, R6;
DP3 R0.w, R0, R6;
MAD R6.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R6.xyz, R6, texture[6], 2D;
MOV R5.xw, c[24].zyzx;
MAX R2.w, R0, c[24].y;
MUL R0.w, R5.x, c[5].x;
ADD R1.w, R0, c[23];
TXP R5.x, fragment.texcoord[5], texture[1], 2D;
MUL R0.w, R5.x, c[24].x;
EX2 R1.w, R1.w;
POW R1.w, R2.w, R1.w;
FLR R3.w, R0;
MUL R5.xyz, R3.w, c[3];
MUL R5.xyz, R5, R1.w;
DP3 R1.w, R0, R3;
MOV R2.w, c[23];
MUL R5.xyz, R1, R5;
MAD R4.xyz, R6, c[11], R4;
ADD R0.x, R2.w, -c[8];
MAD R0.xyz, R2, R0.x, R4;
MAX R1.w, R1, c[24].y;
MUL R2.xyz, R5.w, c[0];
MUL R3.xyz, R0.w, c[3];
MAD R2.xyz, R1.w, R3, R2;
MAD R0.xyz, R2, R0, R5;
MAD result.color.xyz, R1, c[14].x, R0;
MOV result.color.w, c[23];
END
# 104 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 117 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [glstate_lightmodel_ambient]
Vector 1 [_WorldSpaceCameraPos]
Vector 2 [_WorldSpaceLightPos0]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Float 14 [_Fakelight]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c22, 2.00000000, -1.00000000, 0.05000000, -0.50000000
def c23, 0.00159374, -0.99999875, -0.00159374, 0.50000000
def c24, -0.31830987, 1.00000000, 0.50000000, 0.00000000
def c25, 10.00000000, 1.00000000, 0, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c22.x, c22.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c24.y
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mul r1.xyz, r1.x, v2
mad r0.xyz, r0.x, v3, r2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
dp3 r0.w, r2, r2
add r0.xyz, -v1, c1
dp3 r1.x, r0, r0
rsq r1.x, r1.x
rsq r0.w, r0.w
dp3_pp r1.y, c2, c2
rsq_pp r1.y, r1.y
mul r0.xyz, r1.x, r0
mul_pp r6.xyz, r1.y, c2
add r1.xyz, r0, r6
mul r2.xyz, r0.w, r2
dp3 r1.w, r1, r1
rsq r0.w, r1.w
mul r1.xyz, r0.w, r1
dp3 r0.w, r2, r1
mov r1.w, c5.x
mad r1.w, r1, c25.x, c25.y
exp r2.w, r1.w
max r0.w, r0, c24
pow r1, r0.w, r2.w
texldp r3.x, v5, s1
dp3 r0.w, r2, -r0
mul_pp r1.w, r3.x, c22.x
mov r3.w, r1.x
frc r1.x, r1.w
add r2.w, r1, -r1.x
mul r1.xyz, r2, r0.w
mul r3.xyz, r2.w, c3
mad r1.xyz, -r1, c22.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r4.xy, r0.zwzw, -c17.x
mul r7.xyz, r3, r3.w
mad r3.xy, r4, c22.z, v0
add r8.xy, r3, c22.w
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s5
mul r5.xyz, r0, c9.x
pow r3, r5.y, c20.x
pow r0, r5.x, c20.x
mov r5.x, r0
pow r0, r5.z, c20.x
mov r5.z, r0
mov r0.z, c17.x
mul r4.zw, r8.y, c23.xyxy
texld r1.xyz, r1, s4
mov r5.y, r3
mad r0.xy, v0, c4, c4.zwzw
texld r3.xyz, r0, s2
mad r0.xy, r8.x, c23.yzzw, r4.zwzw
add r0.xy, r0, c23.w
mad r5.xyz, r3, -r5, r5
mad r0.z, r0, c24.x, c24.y
mul r0.xy, r0, c16.x
mul r0.xy, r0, r0.z
mov r0.z, c17.x
mad r2.w, r0.z, c24.z, c24.y
mad r0.zw, -r4.xyxy, c22.z, v0.xyxy
mul r0.zw, r0, r2.w
mul r4.xy, r0.zwzw, c16.x
mov r0.w, c10.x
mul r0.xy, r0, c21.x
mad r0.xy, r0, c18, c18.zwzw
mad r4.xy, r4, c18, c18.zwzw
texld r0.xyz, r0, s3
texld r4.xyz, r4, s3
mul r8.xyz, c15, r0.w
mul r8.xyz, r8, r4
add r4.xyz, -r0, c24.y
pow r0, r8.x, c19.x
max r3.xyz, r4, r3
mul r4.xyz, r3, c8.x
pow r3, r8.y, c19.x
mov r8.x, r0
pow r0, r8.z, c19.x
mov r0.w, c8.x
mov r8.y, r3
mov r8.z, r0
mad r0.xyz, r4, -r8, r8
add r0.xyz, r0, r5
mad r0.xyz, r1, c12.x, r0
mul r3.xyz, r0, r7
mul r5.xyz, r1, c12.x
mad r7.xy, v0, c6, c6.zwzw
texld r1.xyz, r7, s6
add r0.w, c24.y, -r0
mad r1.xyz, r1, c11, r5
mad r1.xyz, r4, r0.w, r1
dp3 r0.w, r2, r6
mov r2.xyz, c0
max r0.w, r0, c24
mul r2.xyz, c22.x, r2
mul r4.xyz, r1.w, c3
mad r2.xyz, r0.w, r4, r2
mad r1.xyz, r2, r1, r3
mad oC0.xyz, r0, c14.x, r1
mov_pp oC0.w, c24.y
"
}
SubProgram "d3d11 " {
// Stats: 89 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_Normalmap] 2D 5
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [_Mask] 2D 1
SetTexture 3 [_Glittermap] 2D 6
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 3
SetTexture 6 [_MainTex] 2D 2
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Float 224 [_Fakelight]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerFrame" 208
Vector 64 [glstate_lightmodel_ambient]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerFrame" 3
"ps_4_0
eefiecedcbobehfieadfellffmikceabgfloddkmabaaaaaapmaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcmeanaaaaeaaaaaaahbadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafidaaaaeaahabaaaaeaaaaaa
ffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaa
gcbaaaadlcbabaaaagaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
bbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaadaaaaaaaagabaaaagaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaa
aaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
adaaaaaaaagabaaaagaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
akaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaafaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
afaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaaeaaaaaa
aagabaaaaeaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaamaaaaaabaaaaaajicaabaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaaihcaabaaaafaaaaaapgapbaaaabaaaaaaegiccaaa
acaaaaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaoaaaaahgcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaajgafbaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaaaaaaaaahccaabaaaabaaaaaaakaabaaaaeaaaaaaakaabaaa
aeaaaaaaebaaaaafecaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaihcaabaaa
aeaaaaaafgafbaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaadiaaaaaiocaabaaa
abaaaaaakgakbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
abaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaacaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaafaaaaaaegiccaaaaaaaaaaaalaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaabaaaaaaakiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaabaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaaaaaaaaajhcaabaaaadaaaaaaegiccaaa
adaaaaaaaeaaaaaaegiccaaaadaaaaaaaeaaaaaadcaaaaajhcaabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaadcaaaaajhcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaaaoaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 28 avg math (23..31)
 //        d3d9 : 34 avg math (29..38)
 //      opengl : 34 avg math (29..38)
 // Stats for Fragment shader:
 //       d3d11 : 91 avg math (84..101), 9 avg texture (7..13)
 //        d3d9 : 120 avg math (112..131), 9 avg texture (7..13)
 //      opengl : 110 avg math (99..124), 9 avg texture (7..13)
 Pass {
  Name "FORWARDADD"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  Fog {
   Color (0,0,0,0)
  }
  Blend One One
Program "vp" {
SubProgram "opengl " {
// Stats: 33 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[17] = { { 0 },
		state.matrix.mvp,
		program.local[5..16] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MOV result.texcoord[3].xyz, R1;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
DP4 R1.w, vertex.position, c[8];
DP4 R1.z, vertex.position, c[7];
DP4 R1.x, vertex.position, c[5];
DP4 R1.y, vertex.position, c[6];
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[1], R1;
DP4 result.texcoord[5].z, R1, c[15];
DP4 result.texcoord[5].y, R1, c[14];
DP4 result.texcoord[5].x, R1, c[13];
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 33 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 33 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c16, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c16.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c16.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mov o4.xyz, r1
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
dp4 r1.w, v0, c7
dp4 r1.z, v0, c6
dp4 r1.x, v0, c4
dp4 r1.y, v0, c5
mul o5.xyz, r0.w, r2
mov o2, r1
dp4 o6.z, r1, c14
dp4 o6.y, r1, c13
dp4 o6.x, r1, c12
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 27 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedpgoikocoeepfnkgjiblmgnbjjmleglkiabaaaaaadeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefcjmaeaaaaeaaaabaachabaaaa
fjaaaaaeegiocaaaaaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
hccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaabaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaa
egaobaaaaaaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhccabaaaagaaaaaaegiccaaaaaaaaaaaaeaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTexture0, vec2(tmpvar_14)).w * 2.0);
  attenuation_3 = tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_17;
  tmpvar_17[0].x = -0.999999;
  tmpvar_17[0].y = 0.00159255;
  tmpvar_17[1].x = -0.00159255;
  tmpvar_17[1].y = -0.999999;
  lowp vec4 tmpvar_18;
  highp vec2 P_19;
  P_19 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_18 = texture2D (_Mask, P_19);
  node_1540_2 = tmpvar_18;
  highp vec2 P_20;
  P_20 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_17) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_21;
  arg0_21 = (1.0 - texture2D (_Glittermap, P_20).xyz);
  highp vec3 tmpvar_22;
  tmpvar_22 = (max (arg0_21, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_23.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_25;
  highp vec2 P_26;
  P_26 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_25 = texture2D (_Glittermap, P_26);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_27 = texture2D (_Specularglitter, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_16) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_24) + ((1.0 - _MasktransparencyDebug) * tmpvar_22))) + ((tmpvar_16 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_25.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_22) + mix (pow ((tmpvar_27.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_24)));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp float tmpvar_15;
  tmpvar_15 = (texture2D (_LightTexture0, vec2(tmpvar_14)).w * 2.0);
  attenuation_3 = tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_17;
  tmpvar_17[0].x = -0.999999;
  tmpvar_17[0].y = 0.00159255;
  tmpvar_17[1].x = -0.00159255;
  tmpvar_17[1].y = -0.999999;
  lowp vec4 tmpvar_18;
  highp vec2 P_19;
  P_19 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_18 = texture2D (_Mask, P_19);
  node_1540_2 = tmpvar_18;
  highp vec2 P_20;
  P_20 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_17) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_21;
  arg0_21 = (1.0 - texture2D (_Glittermap, P_20).xyz);
  highp vec3 tmpvar_22;
  tmpvar_22 = (max (arg0_21, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_23.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_25;
  highp vec2 P_26;
  P_26 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_25 = texture2D (_Glittermap, P_26);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_27 = texture2D (_Specularglitter, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_16) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_24) + ((1.0 - _MasktransparencyDebug) * tmpvar_22))) + ((tmpvar_16 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_25.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_22) + mix (pow ((tmpvar_27.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_24)));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec3 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp float tmpvar_15;
  tmpvar_15 = (texture (_LightTexture0, vec2(tmpvar_14)).w * 2.0);
  attenuation_3 = tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_17;
  tmpvar_17[0].x = -0.999999;
  tmpvar_17[0].y = 0.00159255;
  tmpvar_17[1].x = -0.00159255;
  tmpvar_17[1].y = -0.999999;
  lowp vec4 tmpvar_18;
  highp vec2 P_19;
  P_19 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_18 = texture (_Mask, P_19);
  node_1540_2 = tmpvar_18;
  highp vec2 P_20;
  P_20 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_17) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_21;
  arg0_21 = (1.0 - texture (_Glittermap, P_20).xyz);
  highp vec3 tmpvar_22;
  tmpvar_22 = (max (arg0_21, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_23.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_25;
  highp vec2 P_26;
  P_26 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_25 = texture (_Glittermap, P_26);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_27 = texture (_Specularglitter, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_16) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_24) + ((1.0 - _MasktransparencyDebug) * tmpvar_22))) + ((tmpvar_16 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_25.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_22) + mix (pow ((tmpvar_27.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_24)));
  tmpvar_1 = tmpvar_31;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
"3.0-!!ARBvp1.0
PARAM c[13] = { { 0 },
		state.matrix.mvp,
		program.local[5..12] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[3].xyz, R1;
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 29 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c12, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c12.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c12.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
mov o4.xyz, r1
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 23 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerDraw" 0
"vs_4_0
eefiecedooilndalaneljhihncooenjckicbkmglabaaaaaafeafaaaaadaaaaaa
cmaaaaaamaaaaaaahiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
keaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaakeaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaakeaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneadaaaa
eaaaabaapfaaaaaafjaaaaaeegiocaaaaaaaaaaabdaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaaaaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaa
egbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
aaaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
acaaaaaaegiocaaaaaaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
baaaaaaibcaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabaaaaaaa
baaaaaaiccaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabbaaaaaa
baaaaaaiecaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaaaaaaaaabcaaaaaa
dgaaaaafhccabaaaadaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgbfbaaaacaaaaaaegiccaaaaaaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaaaaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaa
abaaaaaadiaaaaahhcaabaaaacaaaaaacgajbaaaaaaaaaaajgaebaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgaebaaaaaaaaaaacgajbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaafaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = (2.0 * _LightColor0.xyz);
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_26 = texture2D (_MainTex, P_27);
  highp vec4 tmpvar_28;
  tmpvar_28.w = 0.0;
  tmpvar_28.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_13) * (((tmpvar_26.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + ((tmpvar_13 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21)));
  tmpvar_1 = tmpvar_28;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = (2.0 * _LightColor0.xyz);
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture2D (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture2D (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture2D (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture2D (_Specularglitter, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_26 = texture2D (_MainTex, P_27);
  highp vec4 tmpvar_28;
  tmpvar_28.w = 0.0;
  tmpvar_28.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_13) * (((tmpvar_26.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + ((tmpvar_13 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21)));
  tmpvar_1 = tmpvar_28;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = (2.0 * _LightColor0.xyz);
  highp mat2 tmpvar_14;
  tmpvar_14[0].x = -0.999999;
  tmpvar_14[0].y = 0.00159255;
  tmpvar_14[1].x = -0.00159255;
  tmpvar_14[1].y = -0.999999;
  lowp vec4 tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_15 = texture (_Mask, P_16);
  node_1540_2 = tmpvar_15;
  highp vec2 P_17;
  P_17 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_14) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_18;
  arg0_18 = (1.0 - texture (_Glittermap, P_17).xyz);
  highp vec3 tmpvar_19;
  tmpvar_19 = (max (arg0_18, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_21;
  tmpvar_21 = (tmpvar_20.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_22;
  highp vec2 P_23;
  P_23 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_22 = texture (_Glittermap, P_23);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_24 = texture (_Specularglitter, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_26 = texture (_MainTex, P_27);
  highp vec4 tmpvar_28;
  tmpvar_28.w = 0.0;
  tmpvar_28.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_13) * (((tmpvar_26.xyz * _Color.xyz) + tmpvar_21) + ((1.0 - _MasktransparencyDebug) * tmpvar_19))) + ((tmpvar_13 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_22.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_19) + mix (pow ((tmpvar_24.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_21)));
  tmpvar_1 = tmpvar_28;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[17] = { { 0 },
		state.matrix.mvp,
		program.local[5..16] };
TEMP R0;
TEMP R1;
TEMP R2;
DP4 R1.w, vertex.position, c[8];
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MOV result.texcoord[3].xyz, R1;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
DP4 R1.z, vertex.position, c[7];
DP4 R1.x, vertex.position, c[5];
DP4 R1.y, vertex.position, c[6];
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[1], R1;
DP4 result.texcoord[5].w, R1, c[16];
DP4 result.texcoord[5].z, R1, c[15];
DP4 result.texcoord[5].y, R1, c[14];
DP4 result.texcoord[5].x, R1, c[13];
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c16, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
dp4 r1.w, v0, c7
mov r0.w, c16.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c16.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mov o4.xyz, r1
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
dp4 r1.z, v0, c6
dp4 r1.x, v0, c4
dp4 r1.y, v0, c5
mul o5.xyz, r0.w, r2
mov o2, r1
dp4 o6.w, r1, c15
dp4 o6.z, r1, c14
dp4 o6.y, r1, c13
dp4 o6.x, r1, c12
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 27 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedcodhkfbadjpbpfonohbollfnckiaoighabaaaaaadeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefcjmaeaaaaeaaaabaachabaaaa
fjaaaaaeegiocaaaaaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
pccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaabaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaa
egaobaaaaaaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaaaaaaaaaabaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpccabaaaagaaaaaaegiocaaaaaaaaaaaaeaaaaaa
pgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  highp vec3 tmpvar_17;
  tmpvar_17 = ((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_18;
  tmpvar_18[0].x = -0.999999;
  tmpvar_18[0].y = 0.00159255;
  tmpvar_18[1].x = -0.00159255;
  tmpvar_18[1].y = -0.999999;
  lowp vec4 tmpvar_19;
  highp vec2 P_20;
  P_20 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_19 = texture2D (_Mask, P_20);
  node_1540_2 = tmpvar_19;
  highp vec2 P_21;
  P_21 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_18) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_22;
  arg0_22 = (1.0 - texture2D (_Glittermap, P_21).xyz);
  highp vec3 tmpvar_23;
  tmpvar_23 = (max (arg0_22, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_24;
  tmpvar_24 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_25;
  tmpvar_25 = (tmpvar_24.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_26 = texture2D (_Glittermap, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_28 = texture2D (_Specularglitter, P_29);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_30 = texture2D (_MainTex, P_31);
  highp vec4 tmpvar_32;
  tmpvar_32.w = 0.0;
  tmpvar_32.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_17) * (((tmpvar_30.xyz * _Color.xyz) + tmpvar_25) + ((1.0 - _MasktransparencyDebug) * tmpvar_23))) + ((tmpvar_17 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_26.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_23) + mix (pow ((tmpvar_28.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_25)));
  tmpvar_1 = tmpvar_32;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  highp vec3 tmpvar_17;
  tmpvar_17 = ((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_18;
  tmpvar_18[0].x = -0.999999;
  tmpvar_18[0].y = 0.00159255;
  tmpvar_18[1].x = -0.00159255;
  tmpvar_18[1].y = -0.999999;
  lowp vec4 tmpvar_19;
  highp vec2 P_20;
  P_20 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_19 = texture2D (_Mask, P_20);
  node_1540_2 = tmpvar_19;
  highp vec2 P_21;
  P_21 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_18) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_22;
  arg0_22 = (1.0 - texture2D (_Glittermap, P_21).xyz);
  highp vec3 tmpvar_23;
  tmpvar_23 = (max (arg0_22, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_24;
  tmpvar_24 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_25;
  tmpvar_25 = (tmpvar_24.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_26 = texture2D (_Glittermap, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_28 = texture2D (_Specularglitter, P_29);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_30 = texture2D (_MainTex, P_31);
  highp vec4 tmpvar_32;
  tmpvar_32.w = 0.0;
  tmpvar_32.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_17) * (((tmpvar_30.xyz * _Color.xyz) + tmpvar_25) + ((1.0 - _MasktransparencyDebug) * tmpvar_23))) + ((tmpvar_17 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_26.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_23) + mix (pow ((tmpvar_28.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_25)));
  tmpvar_1 = tmpvar_32;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_LightTextureB0, vec2(tmpvar_15));
  highp vec3 tmpvar_17;
  tmpvar_17 = ((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_18;
  tmpvar_18[0].x = -0.999999;
  tmpvar_18[0].y = 0.00159255;
  tmpvar_18[1].x = -0.00159255;
  tmpvar_18[1].y = -0.999999;
  lowp vec4 tmpvar_19;
  highp vec2 P_20;
  P_20 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_19 = texture (_Mask, P_20);
  node_1540_2 = tmpvar_19;
  highp vec2 P_21;
  P_21 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_18) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_22;
  arg0_22 = (1.0 - texture (_Glittermap, P_21).xyz);
  highp vec3 tmpvar_23;
  tmpvar_23 = (max (arg0_22, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_25;
  tmpvar_25 = (tmpvar_24.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_26 = texture (_Glittermap, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_28 = texture (_Specularglitter, P_29);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_30 = texture (_MainTex, P_31);
  highp vec4 tmpvar_32;
  tmpvar_32.w = 0.0;
  tmpvar_32.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_17) * (((tmpvar_30.xyz * _Color.xyz) + tmpvar_25) + ((1.0 - _MasktransparencyDebug) * tmpvar_23))) + ((tmpvar_17 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_26.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_23) + mix (pow ((tmpvar_28.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_25)));
  tmpvar_1 = tmpvar_32;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 33 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[17] = { { 0 },
		state.matrix.mvp,
		program.local[5..16] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MOV result.texcoord[3].xyz, R1;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
DP4 R1.w, vertex.position, c[8];
DP4 R1.z, vertex.position, c[7];
DP4 R1.x, vertex.position, c[5];
DP4 R1.y, vertex.position, c[6];
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[1], R1;
DP4 result.texcoord[5].z, R1, c[15];
DP4 result.texcoord[5].y, R1, c[14];
DP4 result.texcoord[5].x, R1, c[13];
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 33 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 33 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c16, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c16.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c16.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mov o4.xyz, r1
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
dp4 r1.w, v0, c7
dp4 r1.z, v0, c6
dp4 r1.x, v0, c4
dp4 r1.y, v0, c5
mul o5.xyz, r0.w, r2
mov o2, r1
dp4 o6.z, r1, c14
dp4 o6.y, r1, c13
dp4 o6.x, r1, c12
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 27 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedpgoikocoeepfnkgjiblmgnbjjmleglkiabaaaaaadeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefcjmaeaaaaeaaaabaachabaaaa
fjaaaaaeegiocaaaaaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
hccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaabaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaa
egaobaaaaaaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhccabaaaagaaaaaaegiccaaaaaaaaaaaaeaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp float tmpvar_15;
  tmpvar_15 = ((texture2D (_LightTextureB0, vec2(tmpvar_14)).w * textureCube (_LightTexture0, xlv_TEXCOORD5).w) * 2.0);
  attenuation_3 = tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_17;
  tmpvar_17[0].x = -0.999999;
  tmpvar_17[0].y = 0.00159255;
  tmpvar_17[1].x = -0.00159255;
  tmpvar_17[1].y = -0.999999;
  lowp vec4 tmpvar_18;
  highp vec2 P_19;
  P_19 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_18 = texture2D (_Mask, P_19);
  node_1540_2 = tmpvar_18;
  highp vec2 P_20;
  P_20 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_17) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_21;
  arg0_21 = (1.0 - texture2D (_Glittermap, P_20).xyz);
  highp vec3 tmpvar_22;
  tmpvar_22 = (max (arg0_21, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_23.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_25;
  highp vec2 P_26;
  P_26 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_25 = texture2D (_Glittermap, P_26);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_27 = texture2D (_Specularglitter, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_16) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_24) + ((1.0 - _MasktransparencyDebug) * tmpvar_22))) + ((tmpvar_16 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_25.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_22) + mix (pow ((tmpvar_27.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_24)));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp float tmpvar_15;
  tmpvar_15 = ((texture2D (_LightTextureB0, vec2(tmpvar_14)).w * textureCube (_LightTexture0, xlv_TEXCOORD5).w) * 2.0);
  attenuation_3 = tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_17;
  tmpvar_17[0].x = -0.999999;
  tmpvar_17[0].y = 0.00159255;
  tmpvar_17[1].x = -0.00159255;
  tmpvar_17[1].y = -0.999999;
  lowp vec4 tmpvar_18;
  highp vec2 P_19;
  P_19 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_18 = texture2D (_Mask, P_19);
  node_1540_2 = tmpvar_18;
  highp vec2 P_20;
  P_20 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_17) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_21;
  arg0_21 = (1.0 - texture2D (_Glittermap, P_20).xyz);
  highp vec3 tmpvar_22;
  tmpvar_22 = (max (arg0_21, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_23.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_25;
  highp vec2 P_26;
  P_26 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_25 = texture2D (_Glittermap, P_26);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_27 = texture2D (_Specularglitter, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture2D (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_16) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_24) + ((1.0 - _MasktransparencyDebug) * tmpvar_22))) + ((tmpvar_16 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_25.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_22) + mix (pow ((tmpvar_27.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_24)));
  tmpvar_1 = tmpvar_31;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec3 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec3 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp float tmpvar_15;
  tmpvar_15 = ((texture (_LightTextureB0, vec2(tmpvar_14)).w * texture (_LightTexture0, xlv_TEXCOORD5).w) * 2.0);
  attenuation_3 = tmpvar_15;
  highp vec3 tmpvar_16;
  tmpvar_16 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_17;
  tmpvar_17[0].x = -0.999999;
  tmpvar_17[0].y = 0.00159255;
  tmpvar_17[1].x = -0.00159255;
  tmpvar_17[1].y = -0.999999;
  lowp vec4 tmpvar_18;
  highp vec2 P_19;
  P_19 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_18 = texture (_Mask, P_19);
  node_1540_2 = tmpvar_18;
  highp vec2 P_20;
  P_20 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_17) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_21;
  arg0_21 = (1.0 - texture (_Glittermap, P_20).xyz);
  highp vec3 tmpvar_22;
  tmpvar_22 = (max (arg0_21, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_23.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_25;
  highp vec2 P_26;
  P_26 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_25 = texture (_Glittermap, P_26);
  lowp vec4 tmpvar_27;
  highp vec2 P_28;
  P_28 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_27 = texture (_Specularglitter, P_28);
  lowp vec4 tmpvar_29;
  highp vec2 P_30;
  P_30 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_29 = texture (_MainTex, P_30);
  highp vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_16) * (((tmpvar_29.xyz * _Color.xyz) + tmpvar_24) + ((1.0 - _MasktransparencyDebug) * tmpvar_22))) + ((tmpvar_16 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_25.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_22) + mix (pow ((tmpvar_27.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_24)));
  tmpvar_1 = tmpvar_31;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[17] = { { 0 },
		state.matrix.mvp,
		program.local[5..16] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R0.xyz, R0, c[0].x;
MUL R2.xyz, R0.zxyw, R1.yzxw;
MAD R2.xyz, R0.yzxw, R1.zxyw, -R2;
MOV result.texcoord[3].xyz, R1;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
DP4 R1.w, vertex.position, c[8];
DP4 R1.z, vertex.position, c[7];
DP4 R1.x, vertex.position, c[5];
DP4 R1.y, vertex.position, c[6];
MUL result.texcoord[4].xyz, R0.w, R2;
MOV result.texcoord[1], R1;
DP4 result.texcoord[5].y, R1, c[14];
DP4 result.texcoord[5].x, R1, c[13];
MOV result.texcoord[2].xyz, R0;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 32 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c16, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c16.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r1.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r0.xyz, r0, c16.x
mul r2.xyz, r0.zxyw, r1.yzxw
mad r2.xyz, r0.yzxw, r1.zxyw, -r2
mov o4.xyz, r1
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
dp4 r1.w, v0, c7
dp4 r1.z, v0, c6
dp4 r1.x, v0, c4
dp4 r1.y, v0, c5
mul o5.xyz, r0.w, r2
mov o2, r1
dp4 o6.y, r1, c13
dp4 o6.x, r1, c12
mov o3.xyz, r0
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 27 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmdfgjhoeogphpponijlbnkfloaemelddabaaaaaadeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaalmaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaa
lmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefcjmaeaaaaeaaaabaachabaaaa
fjaaaaaeegiocaaaaaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaad
hccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
abaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
diaaaaaidcaabaaaabaaaaaafgafbaaaaaaaaaaaegiacaaaaaaaaaaaacaaaaaa
dcaaaaakdcaabaaaabaaaaaaegiacaaaaaaaaaaaabaaaaaaagaabaaaaaaaaaaa
egaabaaaabaaaaaadcaaaaakdcaabaaaabaaaaaaegiacaaaaaaaaaaaadaaaaaa
kgakbaaaaaaaaaaaegaabaaaabaaaaaadcaaaaakmccabaaaabaaaaaaagiecaaa
aaaaaaaaaeaaaaaapgapbaaaaaaaaaaaagaebaaaabaaaaaadgaaaaafpccabaaa
acaaaaaaegaobaaaaaaaaaaadgaaaaafdccabaaaabaaaaaaegbabaaaadaaaaaa
baaaaaaibcaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaabaaaaaabaaaaaaa
baaaaaaiccaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaabaaaaaabbaaaaaa
baaaaaaiecaabaaaaaaaaaaaegbcbaaaabaaaaaaegiccaaaabaaaaaabcaaaaaa
dgaaaaafhccabaaaadaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaa
abaaaaaadiaaaaahhcaabaaaacaaaaaacgajbaaaaaaaaaaajgaebaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgaebaaaaaaaaaaacgajbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaafaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  tmpvar_14 = (texture2D (_LightTexture0, xlv_TEXCOORD5).w * 2.0);
  attenuation_3 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_28 = texture2D (_MainTex, P_29);
  highp vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_15) * (((tmpvar_28.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + ((tmpvar_15 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23)));
  tmpvar_1 = tmpvar_30;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  tmpvar_14 = (texture2D (_LightTexture0, xlv_TEXCOORD5).w * 2.0);
  attenuation_3 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_28 = texture2D (_MainTex, P_29);
  highp vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_15) * (((tmpvar_28.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + ((tmpvar_15 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23)));
  tmpvar_1 = tmpvar_30;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec2 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec2 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  tmpvar_14 = (texture (_LightTexture0, xlv_TEXCOORD5).w * 2.0);
  attenuation_3 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture (_Specularglitter, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_28 = texture (_MainTex, P_29);
  highp vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_15) * (((tmpvar_28.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + ((tmpvar_15 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23)));
  tmpvar_1 = tmpvar_30;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [unity_World2Shadow0]
Matrix 9 [_Object2World]
Matrix 13 [_World2Object]
Matrix 17 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[21] = { { 0 },
		state.matrix.mvp,
		program.local[5..20] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[11];
DP4 R0.y, R1, c[10];
DP4 R0.x, R1, c[9];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[14];
MAD R1.xyz, vertex.normal.x, c[13], R1;
MAD R1.xyz, vertex.normal.z, c[15], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.w, vertex.position, c[12];
DP4 R0.z, vertex.position, c[11];
DP4 R0.x, vertex.position, c[9];
DP4 R0.y, vertex.position, c[10];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].w, R0, c[20];
DP4 result.texcoord[5].z, R0, c[19];
DP4 result.texcoord[5].y, R0, c[18];
DP4 result.texcoord[5].x, R0, c[17];
DP4 result.texcoord[6].w, R0, c[8];
DP4 result.texcoord[6].z, R0, c[7];
DP4 result.texcoord[6].y, R0, c[6];
DP4 result.texcoord[6].x, R0, c[5];
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 38 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Matrix 16 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c20, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c20.x
dp4 r0.z, r1, c10
dp4 r0.y, r1, c9
dp4 r0.x, r1, c8
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c13
mad r1.xyz, v1.x, c12, r1
mad r1.xyz, v1.z, c14, r1
add r1.xyz, r1, c20.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.w, v0, c11
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mov o2, r0
dp4 o6.w, r0, c19
dp4 o6.z, r0, c18
dp4 o6.y, r0, c17
dp4 o6.x, r0, c16
dp4 o7.w, r0, c7
dp4 o7.z, r0, c6
dp4 o7.y, r0, c5
dp4 o7.x, r0, c4
mov o3.xyz, r1
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 31 math
Keywords { "SPOT" "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedcapohiacgmmgmlkebfelblfpgdnphepmabaaaaaaaaahaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcfaafaaaaeaaaabaafeabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaaamaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadpccabaaaagaaaaaagfaaaaadpccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaaaaaaaaaacaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaa
abaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pccabaaaagaaaaaaegiocaaaaaaaaaaaaeaaaaaapgapbaaaaaaaaaaaegaobaaa
abaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaabaaaaaa
ajaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaaaiaaaaaaagaabaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaa
akaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaahaaaaaa
egiocaaaabaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  lowp vec4 tmpvar_14;
  highp vec2 P_15;
  P_15 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_14 = texture2D (_LightTexture0, P_15);
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_LightTextureB0, vec2(tmpvar_16));
  lowp float tmpvar_18;
  mediump float shadow_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6);
  highp float tmpvar_21;
  if ((tmpvar_20.x < (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w))) {
    tmpvar_21 = _LightShadowData.x;
  } else {
    tmpvar_21 = 1.0;
  };
  shadow_19 = tmpvar_21;
  tmpvar_18 = shadow_19;
  highp vec3 tmpvar_22;
  tmpvar_22 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_14.w) * tmpvar_17.w) * tmpvar_18) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_23;
  tmpvar_23[0].x = -0.999999;
  tmpvar_23[0].y = 0.00159255;
  tmpvar_23[1].x = -0.00159255;
  tmpvar_23[1].y = -0.999999;
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_24 = texture2D (_Mask, P_25);
  node_1540_2 = tmpvar_24;
  highp vec2 P_26;
  P_26 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_23) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_27;
  arg0_27 = (1.0 - texture2D (_Glittermap, P_26).xyz);
  highp vec3 tmpvar_28;
  tmpvar_28 = (max (arg0_27, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_31;
  highp vec2 P_32;
  P_32 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_31 = texture2D (_Glittermap, P_32);
  lowp vec4 tmpvar_33;
  highp vec2 P_34;
  P_34 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_33 = texture2D (_Specularglitter, P_34);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 0.0;
  tmpvar_37.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_22) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_30) + ((1.0 - _MasktransparencyDebug) * tmpvar_28))) + ((tmpvar_22 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_31.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_28) + mix (pow ((tmpvar_33.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_30)));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  lowp vec4 tmpvar_14;
  highp vec2 P_15;
  P_15 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_14 = texture2D (_LightTexture0, P_15);
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_LightTextureB0, vec2(tmpvar_16));
  lowp float tmpvar_18;
  mediump float shadow_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6);
  highp float tmpvar_21;
  if ((tmpvar_20.x < (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w))) {
    tmpvar_21 = _LightShadowData.x;
  } else {
    tmpvar_21 = 1.0;
  };
  shadow_19 = tmpvar_21;
  tmpvar_18 = shadow_19;
  highp vec3 tmpvar_22;
  tmpvar_22 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_14.w) * tmpvar_17.w) * tmpvar_18) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_23;
  tmpvar_23[0].x = -0.999999;
  tmpvar_23[0].y = 0.00159255;
  tmpvar_23[1].x = -0.00159255;
  tmpvar_23[1].y = -0.999999;
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_24 = texture2D (_Mask, P_25);
  node_1540_2 = tmpvar_24;
  highp vec2 P_26;
  P_26 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_23) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_27;
  arg0_27 = (1.0 - texture2D (_Glittermap, P_26).xyz);
  highp vec3 tmpvar_28;
  tmpvar_28 = (max (arg0_27, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_31;
  highp vec2 P_32;
  P_32 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_31 = texture2D (_Glittermap, P_32);
  lowp vec4 tmpvar_33;
  highp vec2 P_34;
  P_34 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_33 = texture2D (_Specularglitter, P_34);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 0.0;
  tmpvar_37.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_22) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_30) + ((1.0 - _MasktransparencyDebug) * tmpvar_28))) + ((tmpvar_22 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_31.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_28) + mix (pow ((tmpvar_33.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_30)));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
out highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
in highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  lowp vec4 tmpvar_14;
  highp vec2 P_15;
  P_15 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_14 = texture (_LightTexture0, P_15);
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_LightTextureB0, vec2(tmpvar_16));
  lowp float tmpvar_18;
  mediump float shadow_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureProj (_ShadowMapTexture, xlv_TEXCOORD6);
  highp float tmpvar_21;
  if ((tmpvar_20.x < (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w))) {
    tmpvar_21 = _LightShadowData.x;
  } else {
    tmpvar_21 = 1.0;
  };
  shadow_19 = tmpvar_21;
  tmpvar_18 = shadow_19;
  highp vec3 tmpvar_22;
  tmpvar_22 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_14.w) * tmpvar_17.w) * tmpvar_18) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_23;
  tmpvar_23[0].x = -0.999999;
  tmpvar_23[0].y = 0.00159255;
  tmpvar_23[1].x = -0.00159255;
  tmpvar_23[1].y = -0.999999;
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_24 = texture (_Mask, P_25);
  node_1540_2 = tmpvar_24;
  highp vec2 P_26;
  P_26 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_23) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_27;
  arg0_27 = (1.0 - texture (_Glittermap, P_26).xyz);
  highp vec3 tmpvar_28;
  tmpvar_28 = (max (arg0_27, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_31;
  highp vec2 P_32;
  P_32 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_31 = texture (_Glittermap, P_32);
  lowp vec4 tmpvar_33;
  highp vec2 P_34;
  P_34 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_33 = texture (_Specularglitter, P_34);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 0.0;
  tmpvar_37.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_22) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_30) + ((1.0 - _MasktransparencyDebug) * tmpvar_28))) + ((tmpvar_22 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_31.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_28) + mix (pow ((tmpvar_33.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_30)));
  tmpvar_1 = tmpvar_37;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [unity_World2Shadow0]
Matrix 9 [_Object2World]
Matrix 13 [_World2Object]
Matrix 17 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[21] = { { 0 },
		state.matrix.mvp,
		program.local[5..20] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[11];
DP4 R0.y, R1, c[10];
DP4 R0.x, R1, c[9];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[14];
MAD R1.xyz, vertex.normal.x, c[13], R1;
MAD R1.xyz, vertex.normal.z, c[15], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.w, vertex.position, c[12];
DP4 R0.z, vertex.position, c[11];
DP4 R0.x, vertex.position, c[9];
DP4 R0.y, vertex.position, c[10];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].w, R0, c[20];
DP4 result.texcoord[5].z, R0, c[19];
DP4 result.texcoord[5].y, R0, c[18];
DP4 result.texcoord[5].x, R0, c[17];
DP4 result.texcoord[6].w, R0, c[8];
DP4 result.texcoord[6].z, R0, c[7];
DP4 result.texcoord[6].y, R0, c[6];
DP4 result.texcoord[6].x, R0, c[5];
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 38 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Matrix 16 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c20, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c20.x
dp4 r0.z, r1, c10
dp4 r0.y, r1, c9
dp4 r0.x, r1, c8
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c13
mad r1.xyz, v1.x, c12, r1
mad r1.xyz, v1.z, c14, r1
add r1.xyz, r1, c20.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.w, v0, c11
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mov o2, r0
dp4 o6.w, r0, c19
dp4 o6.z, r0, c18
dp4 o6.y, r0, c17
dp4 o6.x, r0, c16
dp4 o7.w, r0, c7
dp4 o7.z, r0, c6
dp4 o7.y, r0, c5
dp4 o7.x, r0, c4
mov o3.xyz, r1
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 31 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedcapohiacgmmgmlkebfelblfpgdnphepmabaaaaaaaaahaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcfaafaaaaeaaaabaafeabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaaamaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadpccabaaaagaaaaaagfaaaaadpccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaaaaaaaaaacaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaa
abaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pccabaaaagaaaaaaegiocaaaaaaaaaaaaeaaaaaapgapbaaaaaaaaaaaegaobaaa
abaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaabaaaaaa
ajaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaaaiaaaaaaagaabaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaa
akaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaahaaaaaa
egiocaaaabaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DProjEXT (_ShadowMapTexture, xlv_TEXCOORD6);
  shadow_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (shadow_18 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  tmpvar_17 = shadow_18;
  highp vec3 tmpvar_21;
  tmpvar_21 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture2D (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
out highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
in highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump float shadow_18;
  mediump float tmpvar_19;
  tmpvar_19 = textureProj (_ShadowMapTexture, xlv_TEXCOORD6);
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  tmpvar_17 = shadow_18;
  highp vec3 tmpvar_21;
  tmpvar_21 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_ProjectionParams]
"3.0-!!ARBvp1.0
PARAM c[14] = { { 0, 0.5 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R1.xyz, R0, c[0].x;
MUL R0.xyz, R1.zxyw, R3.yzxw;
MAD R0.xyz, R1.yzxw, R3.zxyw, -R0;
MUL R0.xyz, vertex.attrib[14].w, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R0;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].y;
MUL R2.y, R2, c[13].x;
MOV result.texcoord[3].xyz, R3;
ADD result.texcoord[5].xy, R2, R2.z;
MOV result.position, R0;
MOV result.texcoord[5].zw, R0;
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.texcoord[1].w, vertex.position, c[8];
DP4 result.texcoord[1].z, vertex.position, c[7];
DP4 result.texcoord[1].y, vertex.position, c[6];
DP4 result.texcoord[1].x, vertex.position, c[5];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c14, 0.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c14.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r3.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r1.xyz, r0, c14.x
mul r0.xyz, r1.zxyw, r3.yzxw
mad r0.xyz, r1.yzxw, r3.zxyw, -r0
mul r0.xyz, v2.w, r0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o5.xyz, r0.w, r0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c14.y
mul r2.y, r2, c12.x
mov o4.xyz, r3
mad o6.xy, r2.z, c13.zwzw, r2
mov o0, r0
mov o6.zw, r0
mov o3.xyz, r1
mov o1.xy, v3
dp4 o2.w, v0, c7
dp4 o2.z, v0, c6
dp4 o2.y, v0, c5
dp4 o2.x, v0, c4
"
}
SubProgram "d3d11 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "UnityPerCamera" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmleiiecjgjfdeomojhpbphibfdhlompiabaaaaaabeagaaaaadaaaaaa
cmaaaaaamaaaaaaajaabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
lmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaalmaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
lmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklfdeieefchmaeaaaaeaaaabaabpabaaaa
fjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaabdaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaafpaaaaadpcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaad
pccabaaaagaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
abaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaabaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaacaaaaaaegiocaaaabaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
abaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaabaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaabaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaabaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaaaaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaagaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaagaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  mediump float lightShadowDataX_15;
  highp float dist_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_16 = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = _LightShadowData.x;
  lightShadowDataX_15 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = max (float((dist_16 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_15);
  tmpvar_14 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = (tmpvar_14 * 2.0);
  attenuation_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture2D (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = o_7;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  tmpvar_14 = (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x * 2.0);
  attenuation_3 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_28 = texture2D (_MainTex, P_29);
  highp vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_15) * (((tmpvar_28.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + ((tmpvar_15 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23)));
  tmpvar_1 = tmpvar_30;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  mediump float lightShadowDataX_15;
  highp float dist_16;
  lowp float tmpvar_17;
  tmpvar_17 = textureProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_16 = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = _LightShadowData.x;
  lightShadowDataX_15 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = max (float((dist_16 > (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w))), lightShadowDataX_15);
  tmpvar_14 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = (tmpvar_14 * 2.0);
  attenuation_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 37 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_ProjectionParams]
"3.0-!!ARBvp1.0
PARAM c[18] = { { 0, 0.5 },
		state.matrix.mvp,
		program.local[5..17] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R1.z, R0, c[7];
DP4 R1.y, R0, c[6];
DP4 R1.x, R0, c[5];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
MUL R0.xyz, vertex.normal.y, c[10];
MAD R0.xyz, vertex.normal.x, c[9], R0;
MAD R0.xyz, vertex.normal.z, c[11], R0;
ADD R1.xyz, R0, c[0].x;
MUL R0.xyz, R1.zxyw, R3.yzxw;
MAD R0.xyz, R1.yzxw, R3.zxyw, -R0;
MUL R0.xyz, vertex.attrib[14].w, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R0;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R2.w, vertex.position, c[8];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].y;
MUL R2.y, R2, c[17].x;
ADD result.texcoord[6].xy, R2, R2.z;
DP4 R2.z, vertex.position, c[7];
DP4 R2.x, vertex.position, c[5];
DP4 R2.y, vertex.position, c[6];
MOV result.texcoord[3].xyz, R3;
MOV result.position, R0;
MOV result.texcoord[1], R2;
DP4 result.texcoord[5].y, R2, c[14];
DP4 result.texcoord[5].x, R2, c[13];
MOV result.texcoord[6].zw, R0;
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
END
# 37 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_ProjectionParams]
Vector 17 [_ScreenParams]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c18, 0.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r0.w, c18.x
mov r0.xyz, v2
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r3.xyz, r0.w, r1
mul r0.xyz, v1.y, c9
mad r0.xyz, v1.x, c8, r0
mad r0.xyz, v1.z, c10, r0
add r1.xyz, r0, c18.x
mul r0.xyz, r1.zxyw, r3.yzxw
mad r0.xyz, r1.yzxw, r3.zxyw, -r0
mul r0.xyz, v2.w, r0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o5.xyz, r0.w, r0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r2.w, v0, c7
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c18.y
mul r2.y, r2, c16.x
mad o7.xy, r2.z, c17.zwzw, r2
dp4 r2.z, v0, c6
dp4 r2.x, v0, c4
dp4 r2.y, v0, c5
mov o4.xyz, r3
mov o0, r0
mov o2, r2
dp4 o6.y, r2, c13
dp4 o6.x, r2, c12
mov o7.zw, r0
mov o3.xyz, r1
mov o1.xy, v3
"
}
SubProgram "d3d11 " {
// Stats: 30 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 368
Matrix 80 [_LightMatrix0]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedbehpeijpdmnokplpjapbdncfpmoglbemabaaaaaapeagaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaneaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaa
neaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaagaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefceeafaaaaeaaaabaafbabaaaafjaaaaaeegiocaaa
aaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaa
gfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaa
aeaaaaaagfaaaaadhccabaaaafaaaaaagfaaaaadpccabaaaagaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
pccabaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaadiaaaaaidcaabaaaacaaaaaafgafbaaaabaaaaaaegiacaaa
aaaaaaaaagaaaaaadcaaaaakdcaabaaaacaaaaaaegiacaaaaaaaaaaaafaaaaaa
agaabaaaabaaaaaaegaabaaaacaaaaaadcaaaaakdcaabaaaacaaaaaaegiacaaa
aaaaaaaaahaaaaaakgakbaaaabaaaaaaegaabaaaacaaaaaadcaaaaakmccabaaa
abaaaaaaagiecaaaaaaaaaaaaiaaaaaapgapbaaaabaaaaaaagaebaaaacaaaaaa
dgaaaaafpccabaaaacaaaaaaegaobaaaabaaaaaadgaaaaafdccabaaaabaaaaaa
egbabaaaadaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
acaaaaaabaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
acaaaaaabbaaaaaabaaaaaaiecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaa
acaaaaaabcaaaaaadgaaaaafhccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaacaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaacaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaa
acaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaa
aeaaaaaaegacbaaaacaaaaaadiaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaa
jgaebaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaa
acaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaagaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaagaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture2D (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  mediump float lightShadowDataX_15;
  highp float dist_16;
  lowp float tmpvar_17;
  tmpvar_17 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_16 = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = _LightShadowData.x;
  lightShadowDataX_15 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = max (float((dist_16 > (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w))), lightShadowDataX_15);
  tmpvar_14 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = ((texture2D (_LightTexture0, xlv_TEXCOORD5).w * tmpvar_14) * 2.0);
  attenuation_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture2D (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  xlv_TEXCOORD6 = o_7;
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_9;
  normal_9.xy = ((texture2D (_Normalmap, P_8).wy * 2.0) - 1.0);
  normal_9.z = sqrt((1.0 - clamp (dot (normal_9.xy, normal_9.xy), 0.0, 1.0)));
  normalLocal_4 = normal_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  tmpvar_14 = ((texture2D (_LightTexture0, xlv_TEXCOORD5).w * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * 2.0);
  attenuation_3 = tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_15 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_16;
  tmpvar_16[0].x = -0.999999;
  tmpvar_16[0].y = 0.00159255;
  tmpvar_16[1].x = -0.00159255;
  tmpvar_16[1].y = -0.999999;
  lowp vec4 tmpvar_17;
  highp vec2 P_18;
  P_18 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_17 = texture2D (_Mask, P_18);
  node_1540_2 = tmpvar_17;
  highp vec2 P_19;
  P_19 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_16) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_20;
  arg0_20 = (1.0 - texture2D (_Glittermap, P_19).xyz);
  highp vec3 tmpvar_21;
  tmpvar_21 = (max (arg0_20, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_22.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_24 = texture2D (_Glittermap, P_25);
  lowp vec4 tmpvar_26;
  highp vec2 P_27;
  P_27 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_26 = texture2D (_Specularglitter, P_27);
  lowp vec4 tmpvar_28;
  highp vec2 P_29;
  P_29 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_28 = texture2D (_MainTex, P_29);
  highp vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_15) * (((tmpvar_28.xyz * _Color.xyz) + tmpvar_23) + ((1.0 - _MasktransparencyDebug) * tmpvar_21))) + ((tmpvar_15 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_24.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_21) + mix (pow ((tmpvar_26.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_23)));
  tmpvar_1 = tmpvar_30;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec2 xlv_TEXCOORD5;
out highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec2 xlv_TEXCOORD5;
in highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp float attenuation_3;
  highp vec3 normalLocal_4;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = xlv_TEXCOORD3.x;
  tmpvar_6[0].y = xlv_TEXCOORD4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = xlv_TEXCOORD3.y;
  tmpvar_6[1].y = xlv_TEXCOORD4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = xlv_TEXCOORD3.z;
  tmpvar_6[2].y = xlv_TEXCOORD4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  highp vec3 tmpvar_7;
  tmpvar_7 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_8;
  P_8 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((texture (_Normalmap, P_8).xyz * 2.0) - 1.0);
  normalLocal_4 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = normalize((normalLocal_4 * tmpvar_6));
  highp vec3 tmpvar_11;
  highp vec3 i_12;
  i_12 = -(tmpvar_7);
  tmpvar_11 = (i_12 - (2.0 * (dot (tmpvar_10, i_12) * tmpvar_10)));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp float tmpvar_14;
  mediump float lightShadowDataX_15;
  highp float dist_16;
  lowp float tmpvar_17;
  tmpvar_17 = textureProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_16 = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = _LightShadowData.x;
  lightShadowDataX_15 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = max (float((dist_16 > (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w))), lightShadowDataX_15);
  tmpvar_14 = tmpvar_19;
  lowp float tmpvar_20;
  tmpvar_20 = ((texture (_LightTexture0, xlv_TEXCOORD5).w * tmpvar_14) * 2.0);
  attenuation_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (attenuation_3 * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_11);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_6 * tmpvar_7).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_10, tmpvar_13)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (normalize((tmpvar_7 + tmpvar_13)), tmpvar_10)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_LightPositionRange]
"3.0-!!ARBvp1.0
PARAM c[18] = { { 0 },
		state.matrix.mvp,
		program.local[5..17] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[7];
DP4 R0.y, R1, c[6];
DP4 R0.x, R1, c[5];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[10];
MAD R1.xyz, vertex.normal.x, c[9], R1;
MAD R1.xyz, vertex.normal.z, c[11], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP4 R0.w, vertex.position, c[8];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].z, R0, c[15];
DP4 result.texcoord[5].y, R0, c[14];
DP4 result.texcoord[5].x, R0, c[13];
MOV result.texcoord[2].xyz, R1;
ADD result.texcoord[6].xyz, R0, -c[17];
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_LightPositionRange]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c17, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c17.x
dp4 r0.z, r1, c6
dp4 r0.y, r1, c5
dp4 r0.x, r1, c4
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c9
mad r1.xyz, v1.x, c8, r1
mad r1.xyz, v1.z, c10, r1
add r1.xyz, r1, c17.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mov o2, r0
dp4 o6.z, r0, c14
dp4 o6.y, r0, c13
dp4 o6.x, r0, c12
mov o3.xyz, r1
add o7.xyz, r0, -c16
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 28 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedilmignahpapgpmgdabomnngaommhchmnabaaaaaaimagaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcnmaeaaaaeaaaabaadhabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaaacaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaaaaaaaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaagaaaaaaegiccaaaaaaaaaaaaeaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaaaaaaaaajhccabaaaahaaaaaaegacbaaaaaaaaaaaegiccaiaebaaaaaa
abaaaaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(tmpvar_14));
  highp float tmpvar_16;
  tmpvar_16 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  packDist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (packDist_17, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp float tmpvar_20;
  if ((tmpvar_19 < tmpvar_16)) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  highp vec3 tmpvar_21;
  tmpvar_21 = (((tmpvar_15.w * tmpvar_20) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture2D (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(tmpvar_14));
  highp float tmpvar_16;
  tmpvar_16 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  packDist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (packDist_17, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp float tmpvar_20;
  if ((tmpvar_19 < tmpvar_16)) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  highp vec3 tmpvar_21;
  tmpvar_21 = (((tmpvar_15.w * tmpvar_20) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture2D (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture2D (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture2D (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture2D (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture2D (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec3 xlv_TEXCOORD5;
out highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec3 xlv_TEXCOORD5;
in highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (_LightTexture0, vec2(tmpvar_14));
  highp float tmpvar_16;
  tmpvar_16 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture (_ShadowMapTexture, xlv_TEXCOORD6);
  packDist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (packDist_17, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp float tmpvar_20;
  if ((tmpvar_19 < tmpvar_16)) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  highp vec3 tmpvar_21;
  tmpvar_21 = (((tmpvar_15.w * tmpvar_20) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_22;
  tmpvar_22[0].x = -0.999999;
  tmpvar_22[0].y = 0.00159255;
  tmpvar_22[1].x = -0.00159255;
  tmpvar_22[1].y = -0.999999;
  lowp vec4 tmpvar_23;
  highp vec2 P_24;
  P_24 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_23 = texture (_Mask, P_24);
  node_1540_2 = tmpvar_23;
  highp vec2 P_25;
  P_25 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_22) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_26;
  arg0_26 = (1.0 - texture (_Glittermap, P_25).xyz);
  highp vec3 tmpvar_27;
  tmpvar_27 = (max (arg0_26, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_30;
  highp vec2 P_31;
  P_31 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_30 = texture (_Glittermap, P_31);
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_32 = texture (_Specularglitter, P_33);
  lowp vec4 tmpvar_34;
  highp vec2 P_35;
  P_35 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_34 = texture (_MainTex, P_35);
  highp vec4 tmpvar_36;
  tmpvar_36.w = 0.0;
  tmpvar_36.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_21) * (((tmpvar_34.xyz * _Color.xyz) + tmpvar_29) + ((1.0 - _MasktransparencyDebug) * tmpvar_27))) + ((tmpvar_21 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_30.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_27) + mix (pow ((tmpvar_32.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_29)));
  tmpvar_1 = tmpvar_36;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_LightPositionRange]
"3.0-!!ARBvp1.0
PARAM c[18] = { { 0 },
		state.matrix.mvp,
		program.local[5..17] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[7];
DP4 R0.y, R1, c[6];
DP4 R0.x, R1, c[5];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[10];
MAD R1.xyz, vertex.normal.x, c[9], R1;
MAD R1.xyz, vertex.normal.z, c[11], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP4 R0.w, vertex.position, c[8];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].z, R0, c[15];
DP4 result.texcoord[5].y, R0, c[14];
DP4 result.texcoord[5].x, R0, c[13];
MOV result.texcoord[2].xyz, R1;
ADD result.texcoord[6].xyz, R0, -c[17];
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_LightPositionRange]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c17, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c17.x
dp4 r0.z, r1, c6
dp4 r0.y, r1, c5
dp4 r0.x, r1, c4
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c9
mad r1.xyz, v1.x, c8, r1
mad r1.xyz, v1.z, c10, r1
add r1.xyz, r1, c17.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mov o2, r0
dp4 o6.z, r0, c14
dp4 o6.y, r0, c13
dp4 o6.x, r0, c12
mov o3.xyz, r1
add o7.xyz, r0, -c16
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 28 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedilmignahpapgpmgdabomnngaommhchmnabaaaaaaimagaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcnmaeaaaaeaaaabaadhabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaaacaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaaaaaaaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaagaaaaaaegiccaaaaaaaaaaaaeaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaaaaaaaaajhccabaaaahaaaaaaegacbaaaaaaaaaaaegiccaiaebaaaaaa
abaaaaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  lowp vec4 tmpvar_16;
  tmpvar_16 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  highp float tmpvar_17;
  tmpvar_17 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  packDist_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (packDist_18, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp float tmpvar_21;
  if ((tmpvar_20 < tmpvar_17)) {
    tmpvar_21 = _LightShadowData.x;
  } else {
    tmpvar_21 = 1.0;
  };
  highp vec3 tmpvar_22;
  tmpvar_22 = ((((tmpvar_15.w * tmpvar_16.w) * tmpvar_21) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_23;
  tmpvar_23[0].x = -0.999999;
  tmpvar_23[0].y = 0.00159255;
  tmpvar_23[1].x = -0.00159255;
  tmpvar_23[1].y = -0.999999;
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_24 = texture2D (_Mask, P_25);
  node_1540_2 = tmpvar_24;
  highp vec2 P_26;
  P_26 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_23) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_27;
  arg0_27 = (1.0 - texture2D (_Glittermap, P_26).xyz);
  highp vec3 tmpvar_28;
  tmpvar_28 = (max (arg0_27, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_31;
  highp vec2 P_32;
  P_32 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_31 = texture2D (_Glittermap, P_32);
  lowp vec4 tmpvar_33;
  highp vec2 P_34;
  P_34 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_33 = texture2D (_Specularglitter, P_34);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 0.0;
  tmpvar_37.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_22) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_30) + ((1.0 - _MasktransparencyDebug) * tmpvar_28))) + ((tmpvar_22 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_31.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_28) + mix (pow ((tmpvar_33.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_30)));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  lowp vec4 tmpvar_16;
  tmpvar_16 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  highp float tmpvar_17;
  tmpvar_17 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  packDist_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (packDist_18, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp float tmpvar_21;
  if ((tmpvar_20 < tmpvar_17)) {
    tmpvar_21 = _LightShadowData.x;
  } else {
    tmpvar_21 = 1.0;
  };
  highp vec3 tmpvar_22;
  tmpvar_22 = ((((tmpvar_15.w * tmpvar_16.w) * tmpvar_21) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_23;
  tmpvar_23[0].x = -0.999999;
  tmpvar_23[0].y = 0.00159255;
  tmpvar_23[1].x = -0.00159255;
  tmpvar_23[1].y = -0.999999;
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_24 = texture2D (_Mask, P_25);
  node_1540_2 = tmpvar_24;
  highp vec2 P_26;
  P_26 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_23) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_27;
  arg0_27 = (1.0 - texture2D (_Glittermap, P_26).xyz);
  highp vec3 tmpvar_28;
  tmpvar_28 = (max (arg0_27, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_31;
  highp vec2 P_32;
  P_32 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_31 = texture2D (_Glittermap, P_32);
  lowp vec4 tmpvar_33;
  highp vec2 P_34;
  P_34 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_33 = texture2D (_Specularglitter, P_34);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture2D (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 0.0;
  tmpvar_37.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_22) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_30) + ((1.0 - _MasktransparencyDebug) * tmpvar_28))) + ((tmpvar_22 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_31.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_28) + mix (pow ((tmpvar_33.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_30)));
  tmpvar_1 = tmpvar_37;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec3 xlv_TEXCOORD5;
out highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec3 xlv_TEXCOORD5;
in highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (_LightTextureB0, vec2(tmpvar_14));
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_LightTexture0, xlv_TEXCOORD5);
  highp float tmpvar_17;
  tmpvar_17 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture (_ShadowMapTexture, xlv_TEXCOORD6);
  packDist_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (packDist_18, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp float tmpvar_21;
  if ((tmpvar_20 < tmpvar_17)) {
    tmpvar_21 = _LightShadowData.x;
  } else {
    tmpvar_21 = 1.0;
  };
  highp vec3 tmpvar_22;
  tmpvar_22 = ((((tmpvar_15.w * tmpvar_16.w) * tmpvar_21) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_23;
  tmpvar_23[0].x = -0.999999;
  tmpvar_23[0].y = 0.00159255;
  tmpvar_23[1].x = -0.00159255;
  tmpvar_23[1].y = -0.999999;
  lowp vec4 tmpvar_24;
  highp vec2 P_25;
  P_25 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_24 = texture (_Mask, P_25);
  node_1540_2 = tmpvar_24;
  highp vec2 P_26;
  P_26 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_23) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_27;
  arg0_27 = (1.0 - texture (_Glittermap, P_26).xyz);
  highp vec3 tmpvar_28;
  tmpvar_28 = (max (arg0_27, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_31;
  highp vec2 P_32;
  P_32 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_31 = texture (_Glittermap, P_32);
  lowp vec4 tmpvar_33;
  highp vec2 P_34;
  P_34 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_33 = texture (_Specularglitter, P_34);
  lowp vec4 tmpvar_35;
  highp vec2 P_36;
  P_36 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_35 = texture (_MainTex, P_36);
  highp vec4 tmpvar_37;
  tmpvar_37.w = 0.0;
  tmpvar_37.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_22) * (((tmpvar_35.xyz * _Color.xyz) + tmpvar_30) + ((1.0 - _MasktransparencyDebug) * tmpvar_28))) + ((tmpvar_22 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_31.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_28) + mix (pow ((tmpvar_33.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_30)));
  tmpvar_1 = tmpvar_37;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [unity_World2Shadow0]
Matrix 9 [_Object2World]
Matrix 13 [_World2Object]
Matrix 17 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[21] = { { 0 },
		state.matrix.mvp,
		program.local[5..20] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[11];
DP4 R0.y, R1, c[10];
DP4 R0.x, R1, c[9];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[14];
MAD R1.xyz, vertex.normal.x, c[13], R1;
MAD R1.xyz, vertex.normal.z, c[15], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.w, vertex.position, c[12];
DP4 R0.z, vertex.position, c[11];
DP4 R0.x, vertex.position, c[9];
DP4 R0.y, vertex.position, c[10];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].w, R0, c[20];
DP4 result.texcoord[5].z, R0, c[19];
DP4 result.texcoord[5].y, R0, c[18];
DP4 result.texcoord[5].x, R0, c[17];
DP4 result.texcoord[6].w, R0, c[8];
DP4 result.texcoord[6].z, R0, c[7];
DP4 result.texcoord[6].y, R0, c[6];
DP4 result.texcoord[6].x, R0, c[5];
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 38 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Matrix 16 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c20, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c20.x
dp4 r0.z, r1, c10
dp4 r0.y, r1, c9
dp4 r0.x, r1, c8
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c13
mad r1.xyz, v1.x, c12, r1
mad r1.xyz, v1.z, c14, r1
add r1.xyz, r1, c20.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.w, v0, c11
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mov o2, r0
dp4 o6.w, r0, c19
dp4 o6.z, r0, c18
dp4 o6.y, r0, c17
dp4 o6.x, r0, c16
dp4 o7.w, r0, c7
dp4 o7.z, r0, c6
dp4 o7.y, r0, c5
dp4 o7.x, r0, c4
mov o3.xyz, r1
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 31 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 368
Matrix 80 [_LightMatrix0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedkhfcpdmoakoelmjfgeikpakdjdallphdabaaaaaaaaahaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcfaafaaaaeaaaabaafeabaaaafjaaaaaeegiocaaa
aaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaaamaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadpccabaaaagaaaaaagfaaaaadpccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaaaaaaaaaagaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaa
afaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaaaaaaaaaahaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pccabaaaagaaaaaaegiocaaaaaaaaaaaaiaaaaaapgapbaaaaaaaaaaaegaobaaa
abaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaabaaaaaa
ajaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaaaiaaaaaaagaabaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaa
akaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaahaaaaaa
egiocaaaabaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  lowp vec4 tmpvar_14;
  highp vec2 P_15;
  P_15 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_14 = texture2D (_LightTexture0, P_15);
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_LightTextureB0, vec2(tmpvar_16));
  lowp float tmpvar_18;
  mediump vec4 shadows_19;
  highp vec4 shadowVals_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  highp vec2 P_22;
  P_22 = (tmpvar_21.xy + _ShadowOffsets[0].xy);
  lowp float tmpvar_23;
  tmpvar_23 = texture2D (_ShadowMapTexture, P_22).x;
  shadowVals_20.x = tmpvar_23;
  highp vec2 P_24;
  P_24 = (tmpvar_21.xy + _ShadowOffsets[1].xy);
  lowp float tmpvar_25;
  tmpvar_25 = texture2D (_ShadowMapTexture, P_24).x;
  shadowVals_20.y = tmpvar_25;
  highp vec2 P_26;
  P_26 = (tmpvar_21.xy + _ShadowOffsets[2].xy);
  lowp float tmpvar_27;
  tmpvar_27 = texture2D (_ShadowMapTexture, P_26).x;
  shadowVals_20.z = tmpvar_27;
  highp vec2 P_28;
  P_28 = (tmpvar_21.xy + _ShadowOffsets[3].xy);
  lowp float tmpvar_29;
  tmpvar_29 = texture2D (_ShadowMapTexture, P_28).x;
  shadowVals_20.w = tmpvar_29;
  bvec4 tmpvar_30;
  tmpvar_30 = lessThan (shadowVals_20, tmpvar_21.zzzz);
  highp vec4 tmpvar_31;
  tmpvar_31 = _LightShadowData.xxxx;
  highp float tmpvar_32;
  if (tmpvar_30.x) {
    tmpvar_32 = tmpvar_31.x;
  } else {
    tmpvar_32 = 1.0;
  };
  highp float tmpvar_33;
  if (tmpvar_30.y) {
    tmpvar_33 = tmpvar_31.y;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_30.z) {
    tmpvar_34 = tmpvar_31.z;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_30.w) {
    tmpvar_35 = tmpvar_31.w;
  } else {
    tmpvar_35 = 1.0;
  };
  highp vec4 tmpvar_36;
  tmpvar_36.x = tmpvar_32;
  tmpvar_36.y = tmpvar_33;
  tmpvar_36.z = tmpvar_34;
  tmpvar_36.w = tmpvar_35;
  shadows_19 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = dot (shadows_19, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_18 = tmpvar_37;
  highp vec3 tmpvar_38;
  tmpvar_38 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_14.w) * tmpvar_17.w) * tmpvar_18) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_39;
  tmpvar_39[0].x = -0.999999;
  tmpvar_39[0].y = 0.00159255;
  tmpvar_39[1].x = -0.00159255;
  tmpvar_39[1].y = -0.999999;
  lowp vec4 tmpvar_40;
  highp vec2 P_41;
  P_41 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_40 = texture2D (_Mask, P_41);
  node_1540_2 = tmpvar_40;
  highp vec2 P_42;
  P_42 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_39) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_43;
  arg0_43 = (1.0 - texture2D (_Glittermap, P_42).xyz);
  highp vec3 tmpvar_44;
  tmpvar_44 = (max (arg0_43, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_45;
  tmpvar_45 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_46;
  tmpvar_46 = (tmpvar_45.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_47;
  highp vec2 P_48;
  P_48 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_47 = texture2D (_Glittermap, P_48);
  lowp vec4 tmpvar_49;
  highp vec2 P_50;
  P_50 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_49 = texture2D (_Specularglitter, P_50);
  lowp vec4 tmpvar_51;
  highp vec2 P_52;
  P_52 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_51 = texture2D (_MainTex, P_52);
  highp vec4 tmpvar_53;
  tmpvar_53.w = 0.0;
  tmpvar_53.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_38) * (((tmpvar_51.xyz * _Color.xyz) + tmpvar_46) + ((1.0 - _MasktransparencyDebug) * tmpvar_44))) + ((tmpvar_38 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_47.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_44) + mix (pow ((tmpvar_49.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_46)));
  tmpvar_1 = tmpvar_53;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  lowp vec4 tmpvar_14;
  highp vec2 P_15;
  P_15 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_14 = texture2D (_LightTexture0, P_15);
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_LightTextureB0, vec2(tmpvar_16));
  lowp float tmpvar_18;
  mediump vec4 shadows_19;
  highp vec4 shadowVals_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  highp vec2 P_22;
  P_22 = (tmpvar_21.xy + _ShadowOffsets[0].xy);
  lowp float tmpvar_23;
  tmpvar_23 = texture2D (_ShadowMapTexture, P_22).x;
  shadowVals_20.x = tmpvar_23;
  highp vec2 P_24;
  P_24 = (tmpvar_21.xy + _ShadowOffsets[1].xy);
  lowp float tmpvar_25;
  tmpvar_25 = texture2D (_ShadowMapTexture, P_24).x;
  shadowVals_20.y = tmpvar_25;
  highp vec2 P_26;
  P_26 = (tmpvar_21.xy + _ShadowOffsets[2].xy);
  lowp float tmpvar_27;
  tmpvar_27 = texture2D (_ShadowMapTexture, P_26).x;
  shadowVals_20.z = tmpvar_27;
  highp vec2 P_28;
  P_28 = (tmpvar_21.xy + _ShadowOffsets[3].xy);
  lowp float tmpvar_29;
  tmpvar_29 = texture2D (_ShadowMapTexture, P_28).x;
  shadowVals_20.w = tmpvar_29;
  bvec4 tmpvar_30;
  tmpvar_30 = lessThan (shadowVals_20, tmpvar_21.zzzz);
  highp vec4 tmpvar_31;
  tmpvar_31 = _LightShadowData.xxxx;
  highp float tmpvar_32;
  if (tmpvar_30.x) {
    tmpvar_32 = tmpvar_31.x;
  } else {
    tmpvar_32 = 1.0;
  };
  highp float tmpvar_33;
  if (tmpvar_30.y) {
    tmpvar_33 = tmpvar_31.y;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_30.z) {
    tmpvar_34 = tmpvar_31.z;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_30.w) {
    tmpvar_35 = tmpvar_31.w;
  } else {
    tmpvar_35 = 1.0;
  };
  highp vec4 tmpvar_36;
  tmpvar_36.x = tmpvar_32;
  tmpvar_36.y = tmpvar_33;
  tmpvar_36.z = tmpvar_34;
  tmpvar_36.w = tmpvar_35;
  shadows_19 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = dot (shadows_19, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_18 = tmpvar_37;
  highp vec3 tmpvar_38;
  tmpvar_38 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_14.w) * tmpvar_17.w) * tmpvar_18) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_39;
  tmpvar_39[0].x = -0.999999;
  tmpvar_39[0].y = 0.00159255;
  tmpvar_39[1].x = -0.00159255;
  tmpvar_39[1].y = -0.999999;
  lowp vec4 tmpvar_40;
  highp vec2 P_41;
  P_41 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_40 = texture2D (_Mask, P_41);
  node_1540_2 = tmpvar_40;
  highp vec2 P_42;
  P_42 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_39) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_43;
  arg0_43 = (1.0 - texture2D (_Glittermap, P_42).xyz);
  highp vec3 tmpvar_44;
  tmpvar_44 = (max (arg0_43, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_45;
  tmpvar_45 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_46;
  tmpvar_46 = (tmpvar_45.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_47;
  highp vec2 P_48;
  P_48 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_47 = texture2D (_Glittermap, P_48);
  lowp vec4 tmpvar_49;
  highp vec2 P_50;
  P_50 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_49 = texture2D (_Specularglitter, P_50);
  lowp vec4 tmpvar_51;
  highp vec2 P_52;
  P_52 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_51 = texture2D (_MainTex, P_52);
  highp vec4 tmpvar_53;
  tmpvar_53.w = 0.0;
  tmpvar_53.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_38) * (((tmpvar_51.xyz * _Color.xyz) + tmpvar_46) + ((1.0 - _MasktransparencyDebug) * tmpvar_44))) + ((tmpvar_38 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_47.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_44) + mix (pow ((tmpvar_49.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_46)));
  tmpvar_1 = tmpvar_53;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
out highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
in highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  lowp vec4 tmpvar_14;
  highp vec2 P_15;
  P_15 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_14 = texture (_LightTexture0, P_15);
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_LightTextureB0, vec2(tmpvar_16));
  lowp float tmpvar_18;
  mediump vec4 shadows_19;
  highp vec4 shadowVals_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  highp vec2 P_22;
  P_22 = (tmpvar_21.xy + _ShadowOffsets[0].xy);
  lowp float tmpvar_23;
  tmpvar_23 = texture (_ShadowMapTexture, P_22).x;
  shadowVals_20.x = tmpvar_23;
  highp vec2 P_24;
  P_24 = (tmpvar_21.xy + _ShadowOffsets[1].xy);
  lowp float tmpvar_25;
  tmpvar_25 = texture (_ShadowMapTexture, P_24).x;
  shadowVals_20.y = tmpvar_25;
  highp vec2 P_26;
  P_26 = (tmpvar_21.xy + _ShadowOffsets[2].xy);
  lowp float tmpvar_27;
  tmpvar_27 = texture (_ShadowMapTexture, P_26).x;
  shadowVals_20.z = tmpvar_27;
  highp vec2 P_28;
  P_28 = (tmpvar_21.xy + _ShadowOffsets[3].xy);
  lowp float tmpvar_29;
  tmpvar_29 = texture (_ShadowMapTexture, P_28).x;
  shadowVals_20.w = tmpvar_29;
  bvec4 tmpvar_30;
  tmpvar_30 = lessThan (shadowVals_20, tmpvar_21.zzzz);
  highp vec4 tmpvar_31;
  tmpvar_31 = _LightShadowData.xxxx;
  highp float tmpvar_32;
  if (tmpvar_30.x) {
    tmpvar_32 = tmpvar_31.x;
  } else {
    tmpvar_32 = 1.0;
  };
  highp float tmpvar_33;
  if (tmpvar_30.y) {
    tmpvar_33 = tmpvar_31.y;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_30.z) {
    tmpvar_34 = tmpvar_31.z;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_30.w) {
    tmpvar_35 = tmpvar_31.w;
  } else {
    tmpvar_35 = 1.0;
  };
  highp vec4 tmpvar_36;
  tmpvar_36.x = tmpvar_32;
  tmpvar_36.y = tmpvar_33;
  tmpvar_36.z = tmpvar_34;
  tmpvar_36.w = tmpvar_35;
  shadows_19 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = dot (shadows_19, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_18 = tmpvar_37;
  highp vec3 tmpvar_38;
  tmpvar_38 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_14.w) * tmpvar_17.w) * tmpvar_18) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_39;
  tmpvar_39[0].x = -0.999999;
  tmpvar_39[0].y = 0.00159255;
  tmpvar_39[1].x = -0.00159255;
  tmpvar_39[1].y = -0.999999;
  lowp vec4 tmpvar_40;
  highp vec2 P_41;
  P_41 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_40 = texture (_Mask, P_41);
  node_1540_2 = tmpvar_40;
  highp vec2 P_42;
  P_42 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_39) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_43;
  arg0_43 = (1.0 - texture (_Glittermap, P_42).xyz);
  highp vec3 tmpvar_44;
  tmpvar_44 = (max (arg0_43, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_45;
  tmpvar_45 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_46;
  tmpvar_46 = (tmpvar_45.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_47;
  highp vec2 P_48;
  P_48 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_47 = texture (_Glittermap, P_48);
  lowp vec4 tmpvar_49;
  highp vec2 P_50;
  P_50 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_49 = texture (_Specularglitter, P_50);
  lowp vec4 tmpvar_51;
  highp vec2 P_52;
  P_52 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_51 = texture (_MainTex, P_52);
  highp vec4 tmpvar_53;
  tmpvar_53.w = 0.0;
  tmpvar_53.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_38) * (((tmpvar_51.xyz * _Color.xyz) + tmpvar_46) + ((1.0 - _MasktransparencyDebug) * tmpvar_44))) + ((tmpvar_38 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_47.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_44) + mix (pow ((tmpvar_49.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_46)));
  tmpvar_1 = tmpvar_53;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [unity_World2Shadow0]
Matrix 9 [_Object2World]
Matrix 13 [_World2Object]
Matrix 17 [_LightMatrix0]
"3.0-!!ARBvp1.0
PARAM c[21] = { { 0 },
		state.matrix.mvp,
		program.local[5..20] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[11];
DP4 R0.y, R1, c[10];
DP4 R0.x, R1, c[9];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[14];
MAD R1.xyz, vertex.normal.x, c[13], R1;
MAD R1.xyz, vertex.normal.z, c[15], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.w, vertex.position, c[12];
DP4 R0.z, vertex.position, c[11];
DP4 R0.x, vertex.position, c[9];
DP4 R0.y, vertex.position, c[10];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].w, R0, c[20];
DP4 result.texcoord[5].z, R0, c[19];
DP4 result.texcoord[5].y, R0, c[18];
DP4 result.texcoord[5].x, R0, c[17];
DP4 result.texcoord[6].w, R0, c[8];
DP4 result.texcoord[6].z, R0, c[7];
DP4 result.texcoord[6].y, R0, c[6];
DP4 result.texcoord[6].x, R0, c[5];
MOV result.texcoord[2].xyz, R1;
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 38 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 38 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Matrix 16 [_LightMatrix0]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c20, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c20.x
dp4 r0.z, r1, c10
dp4 r0.y, r1, c9
dp4 r0.x, r1, c8
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c13
mad r1.xyz, v1.x, c12, r1
mad r1.xyz, v1.z, c14, r1
add r1.xyz, r1, c20.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.w, v0, c11
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mov o2, r0
dp4 o6.w, r0, c19
dp4 o6.z, r0, c18
dp4 o6.y, r0, c17
dp4 o6.x, r0, c16
dp4 o7.w, r0, c7
dp4 o7.z, r0, c6
dp4 o7.y, r0, c5
dp4 o7.x, r0, c4
mov o3.xyz, r1
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 31 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 368
Matrix 80 [_LightMatrix0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedkhfcpdmoakoelmjfgeikpakdjdallphdabaaaaaaaaahaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaapaaaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcfaafaaaaeaaaabaafeabaaaafjaaaaaeegiocaaa
aaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaaamaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadpccabaaaagaaaaaagfaaaaadpccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaaaaaaaaaagaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaa
afaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaaaaaaaaaahaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pccabaaaagaaaaaaegiocaaaaaaaaaaaaiaaaaaapgapbaaaaaaaaaaaegaobaaa
abaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaabaaaaaa
ajaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaaaiaaaaaaagaabaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaabaaaaaa
akaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaahaaaaaa
egiocaaaabaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  highp vec3 coord_20;
  coord_20 = (tmpvar_19 + _ShadowOffsets[0].xyz);
  lowp float tmpvar_21;
  tmpvar_21 = shadow2DEXT (_ShadowMapTexture, coord_20);
  shadows_18.x = tmpvar_21;
  highp vec3 coord_22;
  coord_22 = (tmpvar_19 + _ShadowOffsets[1].xyz);
  lowp float tmpvar_23;
  tmpvar_23 = shadow2DEXT (_ShadowMapTexture, coord_22);
  shadows_18.y = tmpvar_23;
  highp vec3 coord_24;
  coord_24 = (tmpvar_19 + _ShadowOffsets[2].xyz);
  lowp float tmpvar_25;
  tmpvar_25 = shadow2DEXT (_ShadowMapTexture, coord_24);
  shadows_18.z = tmpvar_25;
  highp vec3 coord_26;
  coord_26 = (tmpvar_19 + _ShadowOffsets[3].xyz);
  lowp float tmpvar_27;
  tmpvar_27 = shadow2DEXT (_ShadowMapTexture, coord_26);
  shadows_18.w = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28 = (_LightShadowData.xxxx + (shadows_18 * (1.0 - _LightShadowData.xxxx)));
  shadows_18 = tmpvar_28;
  mediump float tmpvar_29;
  tmpvar_29 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_29;
  highp vec3 tmpvar_30;
  tmpvar_30 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_31;
  tmpvar_31[0].x = -0.999999;
  tmpvar_31[0].y = 0.00159255;
  tmpvar_31[1].x = -0.00159255;
  tmpvar_31[1].y = -0.999999;
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_32 = texture2D (_Mask, P_33);
  node_1540_2 = tmpvar_32;
  highp vec2 P_34;
  P_34 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_31) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_35;
  arg0_35 = (1.0 - texture2D (_Glittermap, P_34).xyz);
  highp vec3 tmpvar_36;
  tmpvar_36 = (max (arg0_35, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_37;
  tmpvar_37 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_39;
  highp vec2 P_40;
  P_40 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_39 = texture2D (_Glittermap, P_40);
  lowp vec4 tmpvar_41;
  highp vec2 P_42;
  P_42 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_41 = texture2D (_Specularglitter, P_42);
  lowp vec4 tmpvar_43;
  highp vec2 P_44;
  P_44 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_43 = texture2D (_MainTex, P_44);
  highp vec4 tmpvar_45;
  tmpvar_45.w = 0.0;
  tmpvar_45.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_30) * (((tmpvar_43.xyz * _Color.xyz) + tmpvar_38) + ((1.0 - _MasktransparencyDebug) * tmpvar_36))) + ((tmpvar_30 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_39.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_36) + mix (pow ((tmpvar_41.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_38)));
  tmpvar_1 = tmpvar_45;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec4 xlv_TEXCOORD5;
out highp vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec4 xlv_TEXCOORD5;
in highp vec4 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_13 = texture (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  highp vec3 coord_20;
  coord_20 = (tmpvar_19 + _ShadowOffsets[0].xyz);
  mediump float tmpvar_21;
  tmpvar_21 = texture (_ShadowMapTexture, coord_20);
  shadows_18.x = tmpvar_21;
  highp vec3 coord_22;
  coord_22 = (tmpvar_19 + _ShadowOffsets[1].xyz);
  mediump float tmpvar_23;
  tmpvar_23 = texture (_ShadowMapTexture, coord_22);
  shadows_18.y = tmpvar_23;
  highp vec3 coord_24;
  coord_24 = (tmpvar_19 + _ShadowOffsets[2].xyz);
  mediump float tmpvar_25;
  tmpvar_25 = texture (_ShadowMapTexture, coord_24);
  shadows_18.z = tmpvar_25;
  highp vec3 coord_26;
  coord_26 = (tmpvar_19 + _ShadowOffsets[3].xyz);
  mediump float tmpvar_27;
  tmpvar_27 = texture (_ShadowMapTexture, coord_26);
  shadows_18.w = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28 = (_LightShadowData.xxxx + (shadows_18 * (1.0 - _LightShadowData.xxxx)));
  shadows_18 = tmpvar_28;
  mediump float tmpvar_29;
  tmpvar_29 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_29;
  highp vec3 tmpvar_30;
  tmpvar_30 = (((((float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_31;
  tmpvar_31[0].x = -0.999999;
  tmpvar_31[0].y = 0.00159255;
  tmpvar_31[1].x = -0.00159255;
  tmpvar_31[1].y = -0.999999;
  lowp vec4 tmpvar_32;
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_32 = texture (_Mask, P_33);
  node_1540_2 = tmpvar_32;
  highp vec2 P_34;
  P_34 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_31) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_35;
  arg0_35 = (1.0 - texture (_Glittermap, P_34).xyz);
  highp vec3 tmpvar_36;
  tmpvar_36 = (max (arg0_35, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_37.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_39;
  highp vec2 P_40;
  P_40 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_39 = texture (_Glittermap, P_40);
  lowp vec4 tmpvar_41;
  highp vec2 P_42;
  P_42 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_41 = texture (_Specularglitter, P_42);
  lowp vec4 tmpvar_43;
  highp vec2 P_44;
  P_44 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_43 = texture (_MainTex, P_44);
  highp vec4 tmpvar_45;
  tmpvar_45.w = 0.0;
  tmpvar_45.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_30) * (((tmpvar_43.xyz * _Color.xyz) + tmpvar_38) + ((1.0 - _MasktransparencyDebug) * tmpvar_36))) + ((tmpvar_30 * pow (max (0.0, dot (normalize((tmpvar_6 + tmpvar_12)), tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_39.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_36) + mix (pow ((tmpvar_41.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_38)));
  tmpvar_1 = tmpvar_45;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_LightPositionRange]
"3.0-!!ARBvp1.0
PARAM c[18] = { { 0 },
		state.matrix.mvp,
		program.local[5..17] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[7];
DP4 R0.y, R1, c[6];
DP4 R0.x, R1, c[5];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[10];
MAD R1.xyz, vertex.normal.x, c[9], R1;
MAD R1.xyz, vertex.normal.z, c[11], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP4 R0.w, vertex.position, c[8];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].z, R0, c[15];
DP4 result.texcoord[5].y, R0, c[14];
DP4 result.texcoord[5].x, R0, c[13];
MOV result.texcoord[2].xyz, R1;
ADD result.texcoord[6].xyz, R0, -c[17];
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_LightPositionRange]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c17, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c17.x
dp4 r0.z, r1, c6
dp4 r0.y, r1, c5
dp4 r0.x, r1, c4
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c9
mad r1.xyz, v1.x, c8, r1
mad r1.xyz, v1.z, c10, r1
add r1.xyz, r1, c17.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mov o2, r0
dp4 o6.z, r0, c14
dp4 o6.y, r0, c13
dp4 o6.x, r0, c12
mov o3.xyz, r1
add o7.xyz, r0, -c16
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 28 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedilmignahpapgpmgdabomnngaommhchmnabaaaaaaimagaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcnmaeaaaaeaaaabaadhabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaaacaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaaaaaaaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaagaaaaaaegiccaaaaaaaaaaaaeaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaaaaaaaaajhccabaaaahaaaaaaegacbaaaaaaaaaaaegiccaiaebaaaaaa
abaaaaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(tmpvar_14));
  highp float tmpvar_16;
  mediump vec4 shadows_17;
  highp vec4 shadowVals_18;
  highp float tmpvar_19;
  tmpvar_19 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_20;
  vec_20 = (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_ShadowMapTexture, vec_20);
  packDist_21 = tmpvar_22;
  shadowVals_18.x = dot (packDist_21, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_23;
  vec_23 = (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_ShadowMapTexture, vec_23);
  packDist_24 = tmpvar_25;
  shadowVals_18.y = dot (packDist_24, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_26;
  vec_26 = (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_ShadowMapTexture, vec_26);
  packDist_27 = tmpvar_28;
  shadowVals_18.z = dot (packDist_27, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_29;
  vec_29 = (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_30;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCube (_ShadowMapTexture, vec_29);
  packDist_30 = tmpvar_31;
  shadowVals_18.w = dot (packDist_30, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  bvec4 tmpvar_32;
  tmpvar_32 = lessThan (shadowVals_18, vec4(tmpvar_19));
  highp vec4 tmpvar_33;
  tmpvar_33 = _LightShadowData.xxxx;
  highp float tmpvar_34;
  if (tmpvar_32.x) {
    tmpvar_34 = tmpvar_33.x;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_32.y) {
    tmpvar_35 = tmpvar_33.y;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_32.z) {
    tmpvar_36 = tmpvar_33.z;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_32.w) {
    tmpvar_37 = tmpvar_33.w;
  } else {
    tmpvar_37 = 1.0;
  };
  highp vec4 tmpvar_38;
  tmpvar_38.x = tmpvar_34;
  tmpvar_38.y = tmpvar_35;
  tmpvar_38.z = tmpvar_36;
  tmpvar_38.w = tmpvar_37;
  shadows_17 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = dot (shadows_17, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_16 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = (((tmpvar_15.w * tmpvar_16) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_41;
  tmpvar_41[0].x = -0.999999;
  tmpvar_41[0].y = 0.00159255;
  tmpvar_41[1].x = -0.00159255;
  tmpvar_41[1].y = -0.999999;
  lowp vec4 tmpvar_42;
  highp vec2 P_43;
  P_43 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_42 = texture2D (_Mask, P_43);
  node_1540_2 = tmpvar_42;
  highp vec2 P_44;
  P_44 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_41) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_45;
  arg0_45 = (1.0 - texture2D (_Glittermap, P_44).xyz);
  highp vec3 tmpvar_46;
  tmpvar_46 = (max (arg0_45, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_47;
  tmpvar_47 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_48;
  tmpvar_48 = (tmpvar_47.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_49;
  highp vec2 P_50;
  P_50 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_49 = texture2D (_Glittermap, P_50);
  lowp vec4 tmpvar_51;
  highp vec2 P_52;
  P_52 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_51 = texture2D (_Specularglitter, P_52);
  lowp vec4 tmpvar_53;
  highp vec2 P_54;
  P_54 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_53 = texture2D (_MainTex, P_54);
  highp vec4 tmpvar_55;
  tmpvar_55.w = 0.0;
  tmpvar_55.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_40) * (((tmpvar_53.xyz * _Color.xyz) + tmpvar_48) + ((1.0 - _MasktransparencyDebug) * tmpvar_46))) + ((tmpvar_40 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_49.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_46) + mix (pow ((tmpvar_51.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_48)));
  tmpvar_1 = tmpvar_55;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTexture0, vec2(tmpvar_14));
  highp float tmpvar_16;
  mediump vec4 shadows_17;
  highp vec4 shadowVals_18;
  highp float tmpvar_19;
  tmpvar_19 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_20;
  vec_20 = (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_ShadowMapTexture, vec_20);
  packDist_21 = tmpvar_22;
  shadowVals_18.x = dot (packDist_21, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_23;
  vec_23 = (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_ShadowMapTexture, vec_23);
  packDist_24 = tmpvar_25;
  shadowVals_18.y = dot (packDist_24, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_26;
  vec_26 = (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_ShadowMapTexture, vec_26);
  packDist_27 = tmpvar_28;
  shadowVals_18.z = dot (packDist_27, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_29;
  vec_29 = (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_30;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCube (_ShadowMapTexture, vec_29);
  packDist_30 = tmpvar_31;
  shadowVals_18.w = dot (packDist_30, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  bvec4 tmpvar_32;
  tmpvar_32 = lessThan (shadowVals_18, vec4(tmpvar_19));
  highp vec4 tmpvar_33;
  tmpvar_33 = _LightShadowData.xxxx;
  highp float tmpvar_34;
  if (tmpvar_32.x) {
    tmpvar_34 = tmpvar_33.x;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_32.y) {
    tmpvar_35 = tmpvar_33.y;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_32.z) {
    tmpvar_36 = tmpvar_33.z;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_32.w) {
    tmpvar_37 = tmpvar_33.w;
  } else {
    tmpvar_37 = 1.0;
  };
  highp vec4 tmpvar_38;
  tmpvar_38.x = tmpvar_34;
  tmpvar_38.y = tmpvar_35;
  tmpvar_38.z = tmpvar_36;
  tmpvar_38.w = tmpvar_37;
  shadows_17 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = dot (shadows_17, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_16 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = (((tmpvar_15.w * tmpvar_16) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_41;
  tmpvar_41[0].x = -0.999999;
  tmpvar_41[0].y = 0.00159255;
  tmpvar_41[1].x = -0.00159255;
  tmpvar_41[1].y = -0.999999;
  lowp vec4 tmpvar_42;
  highp vec2 P_43;
  P_43 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_42 = texture2D (_Mask, P_43);
  node_1540_2 = tmpvar_42;
  highp vec2 P_44;
  P_44 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_41) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_45;
  arg0_45 = (1.0 - texture2D (_Glittermap, P_44).xyz);
  highp vec3 tmpvar_46;
  tmpvar_46 = (max (arg0_45, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_47;
  tmpvar_47 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_48;
  tmpvar_48 = (tmpvar_47.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_49;
  highp vec2 P_50;
  P_50 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_49 = texture2D (_Glittermap, P_50);
  lowp vec4 tmpvar_51;
  highp vec2 P_52;
  P_52 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_51 = texture2D (_Specularglitter, P_52);
  lowp vec4 tmpvar_53;
  highp vec2 P_54;
  P_54 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_53 = texture2D (_MainTex, P_54);
  highp vec4 tmpvar_55;
  tmpvar_55.w = 0.0;
  tmpvar_55.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_40) * (((tmpvar_53.xyz * _Color.xyz) + tmpvar_48) + ((1.0 - _MasktransparencyDebug) * tmpvar_46))) + ((tmpvar_40 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_49.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_46) + mix (pow ((tmpvar_51.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_48)));
  tmpvar_1 = tmpvar_55;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec3 xlv_TEXCOORD5;
out highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec3 xlv_TEXCOORD5;
in highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (_LightTexture0, vec2(tmpvar_14));
  highp float tmpvar_16;
  mediump vec4 shadows_17;
  highp vec4 shadowVals_18;
  highp float tmpvar_19;
  tmpvar_19 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_20;
  vec_20 = (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture (_ShadowMapTexture, vec_20);
  packDist_21 = tmpvar_22;
  shadowVals_18.x = dot (packDist_21, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_23;
  vec_23 = (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (_ShadowMapTexture, vec_23);
  packDist_24 = tmpvar_25;
  shadowVals_18.y = dot (packDist_24, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_26;
  vec_26 = (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (_ShadowMapTexture, vec_26);
  packDist_27 = tmpvar_28;
  shadowVals_18.z = dot (packDist_27, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_29;
  vec_29 = (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_30;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture (_ShadowMapTexture, vec_29);
  packDist_30 = tmpvar_31;
  shadowVals_18.w = dot (packDist_30, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  bvec4 tmpvar_32;
  tmpvar_32 = lessThan (shadowVals_18, vec4(tmpvar_19));
  highp vec4 tmpvar_33;
  tmpvar_33 = _LightShadowData.xxxx;
  highp float tmpvar_34;
  if (tmpvar_32.x) {
    tmpvar_34 = tmpvar_33.x;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_32.y) {
    tmpvar_35 = tmpvar_33.y;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_32.z) {
    tmpvar_36 = tmpvar_33.z;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_32.w) {
    tmpvar_37 = tmpvar_33.w;
  } else {
    tmpvar_37 = 1.0;
  };
  highp vec4 tmpvar_38;
  tmpvar_38.x = tmpvar_34;
  tmpvar_38.y = tmpvar_35;
  tmpvar_38.z = tmpvar_36;
  tmpvar_38.w = tmpvar_37;
  shadows_17 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = dot (shadows_17, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_16 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = (((tmpvar_15.w * tmpvar_16) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_41;
  tmpvar_41[0].x = -0.999999;
  tmpvar_41[0].y = 0.00159255;
  tmpvar_41[1].x = -0.00159255;
  tmpvar_41[1].y = -0.999999;
  lowp vec4 tmpvar_42;
  highp vec2 P_43;
  P_43 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_42 = texture (_Mask, P_43);
  node_1540_2 = tmpvar_42;
  highp vec2 P_44;
  P_44 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_41) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_45;
  arg0_45 = (1.0 - texture (_Glittermap, P_44).xyz);
  highp vec3 tmpvar_46;
  tmpvar_46 = (max (arg0_45, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_47;
  tmpvar_47 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_48;
  tmpvar_48 = (tmpvar_47.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_49;
  highp vec2 P_50;
  P_50 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_49 = texture (_Glittermap, P_50);
  lowp vec4 tmpvar_51;
  highp vec2 P_52;
  P_52 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_51 = texture (_Specularglitter, P_52);
  lowp vec4 tmpvar_53;
  highp vec2 P_54;
  P_54 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_53 = texture (_MainTex, P_54);
  highp vec4 tmpvar_55;
  tmpvar_55.w = 0.0;
  tmpvar_55.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_40) * (((tmpvar_53.xyz * _Color.xyz) + tmpvar_48) + ((1.0 - _MasktransparencyDebug) * tmpvar_46))) + ((tmpvar_40 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_49.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_46) + mix (pow ((tmpvar_51.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_48)));
  tmpvar_1 = tmpvar_55;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_LightPositionRange]
"3.0-!!ARBvp1.0
PARAM c[18] = { { 0 },
		state.matrix.mvp,
		program.local[5..17] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R1.xyz, vertex.attrib[14];
MOV R1.w, c[0].x;
DP4 R0.z, R1, c[7];
DP4 R0.y, R1, c[6];
DP4 R0.x, R1, c[5];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, vertex.normal.y, c[10];
MAD R1.xyz, vertex.normal.x, c[9], R1;
MAD R1.xyz, vertex.normal.z, c[11], R1;
ADD R1.xyz, R1, c[0].x;
MUL R2.xyz, R1.zxyw, R0.yzxw;
MAD R2.xyz, R1.yzxw, R0.zxyw, -R2;
MOV result.texcoord[3].xyz, R0;
MUL R2.xyz, vertex.attrib[14].w, R2;
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL result.texcoord[4].xyz, R0.w, R2;
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP4 R0.w, vertex.position, c[8];
MOV result.texcoord[1], R0;
DP4 result.texcoord[5].z, R0, c[15];
DP4 result.texcoord[5].y, R0, c[14];
DP4 result.texcoord[5].x, R0, c[13];
MOV result.texcoord[2].xyz, R1;
ADD result.texcoord[6].xyz, R0, -c[17];
MOV result.texcoord[0].xy, vertex.texcoord[0];
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_LightPositionRange]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c17, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_tangent0 v2
dcl_texcoord0 v3
mov r1.xyz, v2
mov r1.w, c17.x
dp4 r0.z, r1, c6
dp4 r0.y, r1, c5
dp4 r0.x, r1, c4
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
mul r1.xyz, v1.y, c9
mad r1.xyz, v1.x, c8, r1
mad r1.xyz, v1.z, c10, r1
add r1.xyz, r1, c17.x
mul r2.xyz, r1.zxyw, r0.yzxw
mad r2.xyz, r1.yzxw, r0.zxyw, -r2
mov o4.xyz, r0
mul r2.xyz, v2.w, r2
dp3 r0.w, r2, r2
rsq r0.w, r0.w
mul o5.xyz, r0.w, r2
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mov o2, r0
dp4 o6.z, r0, c14
dp4 o6.y, r0, c13
dp4 o6.x, r0, c12
mov o3.xyz, r1
add o7.xyz, r0, -c16
mov o1.xy, v3
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 28 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 304
Matrix 16 [_LightMatrix0]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedilmignahpapgpmgdabomnngaommhchmnabaaaaaaimagaaaaadaaaaaa
cmaaaaaamaaaaaaakiabaaaaejfdeheoimaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaahbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaahiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apapaaaaiaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafaepfdej
feejepeoaaeoepfcenebemaafeebeoehefeofeaafeeffiedepepfceeaaklklkl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklfdeieefcnmaeaaaaeaaaabaadhabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafjaaaaaeegiocaaaabaaaaaaacaaaaaafjaaaaaeegiocaaa
acaaaaaabdaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaabaaaaaa
fpaaaaadpcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaa
afaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
dccabaaaabaaaaaaegbabaaaadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaacaaaaaaegaobaaaaaaaaaaabaaaaaai
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabbaaaaaabaaaaaai
ecaabaaaabaaaaaaegbcbaaaabaaaaaaegiccaaaacaaaaaabcaaaaaadgaaaaaf
hccabaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaa
acaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaamaaaaaaagbabaaaacaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaaoaaaaaakgbkbaaaacaaaaaaegacbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaadgaaaaafhccabaaaaeaaaaaaegacbaaaacaaaaaa
diaaaaahhcaabaaaadaaaaaacgajbaaaabaaaaaajgaebaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgaebaaaabaaaaaacgajbaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaacaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaaaaaaaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaagaaaaaaegiccaaaaaaaaaaaaeaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaaaaaaaaajhccabaaaahaaaaaaegacbaaaaaaaaaaaegiccaiaebaaaaaa
abaaaaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture2D (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  lowp vec4 tmpvar_16;
  tmpvar_16 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  highp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec4 shadowVals_19;
  highp float tmpvar_20;
  tmpvar_20 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_21;
  vec_21 = (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (_ShadowMapTexture, vec_21);
  packDist_22 = tmpvar_23;
  shadowVals_19.x = dot (packDist_22, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_24;
  vec_24 = (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = textureCube (_ShadowMapTexture, vec_24);
  packDist_25 = tmpvar_26;
  shadowVals_19.y = dot (packDist_25, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_27;
  vec_27 = (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (_ShadowMapTexture, vec_27);
  packDist_28 = tmpvar_29;
  shadowVals_19.z = dot (packDist_28, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_30;
  vec_30 = (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_31;
  lowp vec4 tmpvar_32;
  tmpvar_32 = textureCube (_ShadowMapTexture, vec_30);
  packDist_31 = tmpvar_32;
  shadowVals_19.w = dot (packDist_31, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  bvec4 tmpvar_33;
  tmpvar_33 = lessThan (shadowVals_19, vec4(tmpvar_20));
  highp vec4 tmpvar_34;
  tmpvar_34 = _LightShadowData.xxxx;
  highp float tmpvar_35;
  if (tmpvar_33.x) {
    tmpvar_35 = tmpvar_34.x;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_33.y) {
    tmpvar_36 = tmpvar_34.y;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_33.z) {
    tmpvar_37 = tmpvar_34.z;
  } else {
    tmpvar_37 = 1.0;
  };
  highp float tmpvar_38;
  if (tmpvar_33.w) {
    tmpvar_38 = tmpvar_34.w;
  } else {
    tmpvar_38 = 1.0;
  };
  highp vec4 tmpvar_39;
  tmpvar_39.x = tmpvar_35;
  tmpvar_39.y = tmpvar_36;
  tmpvar_39.z = tmpvar_37;
  tmpvar_39.w = tmpvar_38;
  shadows_18 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_40;
  highp vec3 tmpvar_41;
  tmpvar_41 = ((((tmpvar_15.w * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_42;
  tmpvar_42[0].x = -0.999999;
  tmpvar_42[0].y = 0.00159255;
  tmpvar_42[1].x = -0.00159255;
  tmpvar_42[1].y = -0.999999;
  lowp vec4 tmpvar_43;
  highp vec2 P_44;
  P_44 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_43 = texture2D (_Mask, P_44);
  node_1540_2 = tmpvar_43;
  highp vec2 P_45;
  P_45 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_42) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_46;
  arg0_46 = (1.0 - texture2D (_Glittermap, P_45).xyz);
  highp vec3 tmpvar_47;
  tmpvar_47 = (max (arg0_46, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_48;
  tmpvar_48 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_48.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_50;
  highp vec2 P_51;
  P_51 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_50 = texture2D (_Glittermap, P_51);
  lowp vec4 tmpvar_52;
  highp vec2 P_53;
  P_53 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_52 = texture2D (_Specularglitter, P_53);
  lowp vec4 tmpvar_54;
  highp vec2 P_55;
  P_55 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_54 = texture2D (_MainTex, P_55);
  highp vec4 tmpvar_56;
  tmpvar_56.w = 0.0;
  tmpvar_56.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_41) * (((tmpvar_54.xyz * _Color.xyz) + tmpvar_49) + ((1.0 - _MasktransparencyDebug) * tmpvar_47))) + ((tmpvar_41 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_50.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_47) + mix (pow ((tmpvar_52.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_49)));
  tmpvar_1 = tmpvar_56;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
varying highp vec2 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD5;
varying highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_Normalmap, P_7).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  normalLocal_3 = normal_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  lowp vec4 tmpvar_16;
  tmpvar_16 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  highp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec4 shadowVals_19;
  highp float tmpvar_20;
  tmpvar_20 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_21;
  vec_21 = (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (_ShadowMapTexture, vec_21);
  packDist_22 = tmpvar_23;
  shadowVals_19.x = dot (packDist_22, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_24;
  vec_24 = (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = textureCube (_ShadowMapTexture, vec_24);
  packDist_25 = tmpvar_26;
  shadowVals_19.y = dot (packDist_25, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_27;
  vec_27 = (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (_ShadowMapTexture, vec_27);
  packDist_28 = tmpvar_29;
  shadowVals_19.z = dot (packDist_28, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_30;
  vec_30 = (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_31;
  lowp vec4 tmpvar_32;
  tmpvar_32 = textureCube (_ShadowMapTexture, vec_30);
  packDist_31 = tmpvar_32;
  shadowVals_19.w = dot (packDist_31, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  bvec4 tmpvar_33;
  tmpvar_33 = lessThan (shadowVals_19, vec4(tmpvar_20));
  highp vec4 tmpvar_34;
  tmpvar_34 = _LightShadowData.xxxx;
  highp float tmpvar_35;
  if (tmpvar_33.x) {
    tmpvar_35 = tmpvar_34.x;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_33.y) {
    tmpvar_36 = tmpvar_34.y;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_33.z) {
    tmpvar_37 = tmpvar_34.z;
  } else {
    tmpvar_37 = 1.0;
  };
  highp float tmpvar_38;
  if (tmpvar_33.w) {
    tmpvar_38 = tmpvar_34.w;
  } else {
    tmpvar_38 = 1.0;
  };
  highp vec4 tmpvar_39;
  tmpvar_39.x = tmpvar_35;
  tmpvar_39.y = tmpvar_36;
  tmpvar_39.z = tmpvar_37;
  tmpvar_39.w = tmpvar_38;
  shadows_18 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_40;
  highp vec3 tmpvar_41;
  tmpvar_41 = ((((tmpvar_15.w * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_42;
  tmpvar_42[0].x = -0.999999;
  tmpvar_42[0].y = 0.00159255;
  tmpvar_42[1].x = -0.00159255;
  tmpvar_42[1].y = -0.999999;
  lowp vec4 tmpvar_43;
  highp vec2 P_44;
  P_44 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_43 = texture2D (_Mask, P_44);
  node_1540_2 = tmpvar_43;
  highp vec2 P_45;
  P_45 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_42) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_46;
  arg0_46 = (1.0 - texture2D (_Glittermap, P_45).xyz);
  highp vec3 tmpvar_47;
  tmpvar_47 = (max (arg0_46, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_48;
  tmpvar_48 = textureCube (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_48.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_50;
  highp vec2 P_51;
  P_51 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_50 = texture2D (_Glittermap, P_51);
  lowp vec4 tmpvar_52;
  highp vec2 P_53;
  P_53 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_52 = texture2D (_Specularglitter, P_53);
  lowp vec4 tmpvar_54;
  highp vec2 P_55;
  P_55 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_54 = texture2D (_MainTex, P_55);
  highp vec4 tmpvar_56;
  tmpvar_56.w = 0.0;
  tmpvar_56.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_41) * (((tmpvar_54.xyz * _Color.xyz) + tmpvar_49) + ((1.0 - _MasktransparencyDebug) * tmpvar_47))) + ((tmpvar_41 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_50.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_47) + mix (pow ((tmpvar_52.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_49)));
  tmpvar_1 = tmpvar_56;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 _LightMatrix0;
out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
out highp vec3 xlv_TEXCOORD5;
out highp vec3 xlv_TEXCOORD6;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  highp vec4 tmpvar_2;
  tmpvar_2.w = 0.0;
  tmpvar_2.xyz = normalize(_glesNormal);
  highp vec3 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _World2Object).xyz;
  highp vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = tmpvar_1.xyz;
  highp vec3 tmpvar_5;
  tmpvar_5 = normalize((_Object2World * tmpvar_4).xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = _glesMultiTexCoord0.xy;
  xlv_TEXCOORD1 = (_Object2World * _glesVertex);
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = normalize((((tmpvar_3.yzx * tmpvar_5.zxy) - (tmpvar_3.zxy * tmpvar_5.yzx)) * _glesTANGENT.w));
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD6 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _LightShadowData;
uniform lowp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform highp vec4 _LightColor0;
uniform sampler2D _Mask;
uniform highp vec4 _Mask_ST;
uniform highp float _Shininess;
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _Specularglitter;
uniform highp vec4 _Specularglitter_ST;
uniform highp float _MasktransparencyDebug;
uniform highp float _Specularpower05;
uniform highp float _Glitterpower;
uniform highp vec4 _Color;
uniform lowp samplerCube _Reflectioncubemap;
uniform highp float _Reflectioncubemappower;
uniform sampler2D _Normalmap;
uniform highp vec4 _Normalmap_ST;
uniform highp vec4 _Glittercolor;
uniform highp float _Glitterymaskdotsscale;
uniform highp float _Glitteryspeed01;
uniform sampler2D _Glittermap;
uniform highp vec4 _Glittermap_ST;
uniform highp float _Glittercontrast13;
uniform highp float _Specularcontrast13;
uniform highp float _Maskadjust0515;
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
in highp vec3 xlv_TEXCOORD5;
in highp vec3 xlv_TEXCOORD6;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 node_1540_2;
  highp vec3 normalLocal_3;
  highp vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2);
  highp mat3 tmpvar_5;
  tmpvar_5[0].x = xlv_TEXCOORD3.x;
  tmpvar_5[0].y = xlv_TEXCOORD4.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = xlv_TEXCOORD3.y;
  tmpvar_5[1].y = xlv_TEXCOORD4.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = xlv_TEXCOORD3.z;
  tmpvar_5[2].y = xlv_TEXCOORD4.z;
  tmpvar_5[2].z = tmpvar_4.z;
  highp vec3 tmpvar_6;
  tmpvar_6 = normalize((_WorldSpaceCameraPos - xlv_TEXCOORD1.xyz));
  highp vec2 P_7;
  P_7 = ((xlv_TEXCOORD0 * _Normalmap_ST.xy) + _Normalmap_ST.zw);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((texture (_Normalmap, P_7).xyz * 2.0) - 1.0);
  normalLocal_3 = tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_9 = normalize((normalLocal_3 * tmpvar_5));
  highp vec3 tmpvar_10;
  highp vec3 i_11;
  i_11 = -(tmpvar_6);
  tmpvar_10 = (i_11 - (2.0 * (dot (tmpvar_9, i_11) * tmpvar_9)));
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize(mix (_WorldSpaceLightPos0.xyz, (_WorldSpaceLightPos0.xyz - xlv_TEXCOORD1.xyz), _WorldSpaceLightPos0.www));
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_6 + tmpvar_12));
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (_LightTextureB0, vec2(tmpvar_14));
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_LightTexture0, xlv_TEXCOORD5);
  highp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec4 shadowVals_19;
  highp float tmpvar_20;
  tmpvar_20 = ((sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_21;
  vec_21 = (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (_ShadowMapTexture, vec_21);
  packDist_22 = tmpvar_23;
  shadowVals_19.x = dot (packDist_22, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_24;
  vec_24 = (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_25;
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture (_ShadowMapTexture, vec_24);
  packDist_25 = tmpvar_26;
  shadowVals_19.y = dot (packDist_25, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_27;
  vec_27 = (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_28;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_ShadowMapTexture, vec_27);
  packDist_28 = tmpvar_29;
  shadowVals_19.z = dot (packDist_28, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  highp vec3 vec_30;
  vec_30 = (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_31;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_ShadowMapTexture, vec_30);
  packDist_31 = tmpvar_32;
  shadowVals_19.w = dot (packDist_31, vec4(1.0, 0.00392157, 1.53787e-05, 6.03086e-08));
  bvec4 tmpvar_33;
  tmpvar_33 = lessThan (shadowVals_19, vec4(tmpvar_20));
  highp vec4 tmpvar_34;
  tmpvar_34 = _LightShadowData.xxxx;
  highp float tmpvar_35;
  if (tmpvar_33.x) {
    tmpvar_35 = tmpvar_34.x;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_33.y) {
    tmpvar_36 = tmpvar_34.y;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_33.z) {
    tmpvar_37 = tmpvar_34.z;
  } else {
    tmpvar_37 = 1.0;
  };
  highp float tmpvar_38;
  if (tmpvar_33.w) {
    tmpvar_38 = tmpvar_34.w;
  } else {
    tmpvar_38 = 1.0;
  };
  highp vec4 tmpvar_39;
  tmpvar_39.x = tmpvar_35;
  tmpvar_39.y = tmpvar_36;
  tmpvar_39.z = tmpvar_37;
  tmpvar_39.w = tmpvar_38;
  shadows_18 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_40;
  highp vec3 tmpvar_41;
  tmpvar_41 = ((((tmpvar_15.w * tmpvar_16.w) * tmpvar_17) * 2.0) * _LightColor0.xyz);
  highp mat2 tmpvar_42;
  tmpvar_42[0].x = -0.999999;
  tmpvar_42[0].y = 0.00159255;
  tmpvar_42[1].x = -0.00159255;
  tmpvar_42[1].y = -0.999999;
  lowp vec4 tmpvar_43;
  highp vec2 P_44;
  P_44 = ((xlv_TEXCOORD0 * _Mask_ST.xy) + _Mask_ST.zw);
  tmpvar_43 = texture (_Mask, P_44);
  node_1540_2 = tmpvar_43;
  highp vec2 P_45;
  P_45 = (((((((((((_Glitteryspeed01 * -0.05) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) - vec2(0.5, 0.5)) * tmpvar_42) + vec2(0.5, 0.5)) * _Glitterymaskdotsscale) * (1.0 - (_Glitteryspeed01 / 3.14159))) * _Maskadjust0515) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  lowp vec3 arg0_46;
  arg0_46 = (1.0 - texture (_Glittermap, P_45).xyz);
  highp vec3 tmpvar_47;
  tmpvar_47 = (max (arg0_46, node_1540_2.xyz) * _MasktransparencyDebug);
  lowp vec4 tmpvar_48;
  tmpvar_48 = texture (_Reflectioncubemap, tmpvar_10);
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_48.xyz * _Reflectioncubemappower);
  lowp vec4 tmpvar_50;
  highp vec2 P_51;
  P_51 = (((((((0.05 * _Glitteryspeed01) * (tmpvar_5 * tmpvar_6).xy) + xlv_TEXCOORD0) * ((_Glitteryspeed01 / 2.0) + 1.0)) * _Glitterymaskdotsscale) * _Glittermap_ST.xy) + _Glittermap_ST.zw);
  tmpvar_50 = texture (_Glittermap, P_51);
  lowp vec4 tmpvar_52;
  highp vec2 P_53;
  P_53 = ((xlv_TEXCOORD0 * _Specularglitter_ST.xy) + _Specularglitter_ST.zw);
  tmpvar_52 = texture (_Specularglitter, P_53);
  lowp vec4 tmpvar_54;
  highp vec2 P_55;
  P_55 = ((xlv_TEXCOORD0 * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_54 = texture (_MainTex, P_55);
  highp vec4 tmpvar_56;
  tmpvar_56.w = 0.0;
  tmpvar_56.xyz = (((max (0.0, dot (tmpvar_9, tmpvar_12)) * tmpvar_41) * (((tmpvar_54.xyz * _Color.xyz) + tmpvar_49) + ((1.0 - _MasktransparencyDebug) * tmpvar_47))) + ((tmpvar_41 * pow (max (0.0, dot (tmpvar_13, tmpvar_9)), exp2(((_Shininess * 10.0) + 1.0)))) * ((mix (pow (((_Glitterpower * _Glittercolor.xyz) * tmpvar_50.xyz), vec3(_Glittercontrast13)), vec3(0.0, 0.0, 0.0), tmpvar_47) + mix (pow ((tmpvar_52.xyz * _Specularpower05), vec3(_Specularcontrast13)), vec3(0.0, 0.0, 0.0), node_1540_2.xyz)) + tmpvar_49)));
  tmpvar_1 = tmpvar_56;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 102 math, 8 textures
Keywords { "POINT" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
MUL R0.xyz, R2.y, fragment.texcoord[4];
ADD R1.xyz, -fragment.texcoord[1], c[0];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R2.x, R2, R2.y;
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
ADD R2.x, -R2, c[20].y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
MOV R6.xyz, c[13];
MAD R7.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R7.xyz, R7, texture[5], 2D;
MUL R7.xyz, R7, c[8].x;
MUL R1.xyz, R0.w, R1;
RSQ R2.w, R2.x;
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R1.w, R2.w;
MAD R0.xyz, R1.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
DP3 R1.w, R0, -R1;
DP3 R2.x, fragment.texcoord[3], R1;
DP3 R2.y, fragment.texcoord[4], R1;
MUL R4.xy, R2, -c[15].x;
MAD R2.xy, R4, c[20].w, fragment.texcoord[0];
ADD R2.zw, R2.xyxy, -c[21].x;
MUL R2.xy, R2.w, c[21].wyzw;
MAD R2.zw, R2.z, c[21].xyyz, R2.xyxy;
MOV R0.w, c[15].x;
MUL R2.x, R0.w, -c[22];
ADD R2.zw, R2, c[21].x;
MUL R0.w, R0, c[21].x;
MUL R2.zw, R2, c[14].x;
ADD R2.x, R2, c[20].y;
MUL R3.xy, R2.zwzw, R2.x;
MUL R2.xyz, R0, R1.w;
MUL R3.xy, R3, c[19].x;
MAD R2.xyz, -R2, c[20].x, -R1;
MAD R4.zw, R3.xyxy, c[16].xyxy, c[16];
TEX R3.xyz, R2, texture[4], CUBE;
TEX R2.xyz, R4.zwzw, texture[3], 2D;
MAD R4.zw, -R4.xyxy, c[20].w, fragment.texcoord[0].xyxy;
ADD R0.w, R0, c[20].y;
MAD R4.xy, fragment.texcoord[0], c[3], c[3].zwzw;
MUL R4.zw, R4, R0.w;
TEX R5.xyz, R4, texture[2], 2D;
MUL R4.xy, R4.zwzw, c[14].x;
ADD R2.xyz, -R2, c[20].y;
MAX R2.xyz, R2, R5;
MAD R4.xy, R4, c[16], c[16].zwzw;
MUL R2.xyz, R2, c[7].x;
MUL R3.xyz, R3, c[11].x;
TEX R4.xyz, R4, texture[3], 2D;
MUL R6.xyz, R6, c[9].x;
MUL R6.xyz, R6, R4;
MAD R4.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R4, R4;
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R4;
ADD R1.xyz, R4, R1;
DP3 R0.w, R1, R1;
POW R7.x, R7.x, c[18].x;
POW R7.z, R7.z, c[18].x;
POW R7.y, R7.y, c[18].x;
MAD R5.xyz, R5, -R7, R7;
RSQ R0.w, R0.w;
MOV R1.w, c[22].y;
POW R6.x, R6.x, c[17].x;
POW R6.y, R6.y, c[17].x;
POW R6.z, R6.z, c[17].x;
MAD R6.xyz, R2, -R6, R6;
ADD R5.xyz, R6, R5;
MUL R6.xyz, R0.w, R1;
DP3 R0.w, R0, R6;
DP3 R0.x, R0, R4;
MAX R2.w, R0, c[20].z;
MUL R0.w, R1, c[4].x;
ADD R1.w, R0, c[20].y;
DP3 R3.w, fragment.texcoord[5], fragment.texcoord[5];
MAD R6.xy, fragment.texcoord[0], c[5], c[5].zwzw;
ADD R1.xyz, R3, R5;
TEX R0.w, R3.w, texture[1], 2D;
MUL R5.xyz, R0.w, c[2];
EX2 R1.w, R1.w;
TEX R6.xyz, R6, texture[6], 2D;
POW R0.w, R2.w, R1.w;
MUL R5.xyz, R5, c[20].x;
MUL R7.xyz, R5, R0.w;
MOV R0.y, c[20];
MAX R0.w, R0.x, c[20].z;
MUL R1.xyz, R7, R1;
MAD R3.xyz, R6, c[10], R3;
ADD R0.x, R0.y, -c[7];
MAD R0.xyz, R0.x, R2, R3;
MUL R2.xyz, R0.w, R5;
MAD result.color.xyz, R2, R0, R1;
MOV result.color.w, c[20].z;
END
# 102 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 113 math, 8 textures
Keywords { "POINT" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c22, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xyz
mad r0.xy, v0, c12, c12.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c20.x, c20.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r3.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c20
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r3
dp3 r0.y, v4, r3
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c15.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c21.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c21.y
mul r2.xy, r1.w, c21.zwzw
mad r1.zw, r1.z, c22.xyxy, r2.xyxy
dp3 r0.x, r4, -r3
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c20.x, -r3
texld r2.xyz, r0, s4
add r1.zw, r1, c22.z
mov r0.z, c15.x
mad r0.w, r0.z, c22.z, c22
mad r1.xy, -r1, c21.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c15.x
mul r0.xy, r1.zwzw, c14.x
mad r0.z, r0, c23.x, c23.y
mul r5.xy, r0, r0.z
mul r1.xy, r1, c14.x
mad r0.xy, r1, c16, c16.zwzw
mov r0.w, c9.x
mul r1.xyz, c13, r0.w
texld r0.xyz, r0, s3
mul r7.xyz, r1, r0
mul r1.xy, r5, c19.x
mad r5.xy, r1, c16, c16.zwzw
pow r0, r7.x, c17.x
mov r7.x, r0
pow r0, r7.z, c17.x
mad r1.xy, v0, c3, c3.zwzw
texld r5.xyz, r5, s3
texld r1.xyz, r1, s2
add r5.xyz, -r5, c20.w
max r5.xyz, r5, r1
mul r6.xyz, r5, c7.x
pow r5, r7.y, c17.x
mov r7.y, r5
mov r7.z, r0
mad r5.xyz, -v1, c1.w, c1
dp3 r0.w, r5, r5
rsq r1.w, r0.w
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s5
mul r9.xyz, r0, c8.x
pow r0, r9.x, c18.x
mov r9.x, r0
pow r0, r9.z, c18.x
mul r5.xyz, r1.w, r5
mad r8.xyz, r6, -r7, r7
add r7.xyz, r5, r3
pow r3, r9.y, c18.x
dp3 r0.w, r7, r7
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r0.xyz, r8, r0
mad r3.xyz, r2, c11.x, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r7
dp3 r0.x, r4, r0
max r0.y, r0.x, c20.z
mov r0.w, c4.x
mad r0.z, r0.w, c23, c23.y
exp r0.z, r0.z
pow r1, r0.y, r0.z
dp3 r0.x, v5, v5
texld r0.x, r0.x, s1
mul r0.xyz, r0.x, c2
mov r1.w, c7.x
mov r0.w, r1.x
mul r0.xyz, r0, c20.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c20.z
mul r3.xyz, r2, c11.x
mad r7.xy, v0, c5, c5.zwzw
texld r2.xyz, r7, s6
mad r2.xyz, r2, c10, r3
add r1.w, c20, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 86 math, 8 textures
Keywords { "POINT" "SHADOWS_OFF" }
SetTexture 0 [_Normalmap] 2D 5
SetTexture 1 [_LightTexture0] 2D 0
SetTexture 2 [_Mask] 2D 1
SetTexture 3 [_Glittermap] 2D 6
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 3
SetTexture 6 [_MainTex] 2D 2
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefiecedgmbgjgngeflnjnbeliclhdanfdkiojlfabaaaaaaiiaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcfaanaaaaeaaaaaaafeadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafidaaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaa
aaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaa
aaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemln
aaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaa
abaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaa
egbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaa
afaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaa
egaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaa
aaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaa
aceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaa
egaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaaldcaabaaaaaaaaaaa
egaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaadaaaaaaaagabaaa
agaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaakaaaaaaegiccaaa
aaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaa
aaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaa
aceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaa
egaabaaaadaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaak
dcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaabaaaaaaa
abeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaa
abaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaa
kgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaa
egiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaa
adaaaaaaegaabaaaadaaaaaaeghobaaaadaaaaaaaagabaaaagaaaaaaaaaaaaal
hcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaa
egaabaaaaeaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadeaaaaahhcaabaaa
adaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaa
egacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaal
dcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaa
aaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaa
afaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
diaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaabcaaaaaa
bjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaa
egacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaa
adaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
anaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaaaaaaaaaaagabaaaafaaaaaadcaaaaapdcaabaaaafaaaaaa
hgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaa
afaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaa
egbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaa
afaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaaj
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaa
abaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaia
ebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaa
egacbaaaacaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaaegacbaaaaaaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaa
dcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaa
acaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaa
aaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaa
abaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaabaaaaaah
ccaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaaefaaaaajpcaabaaa
aeaaaaaafgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaaaaaaaaah
ccaabaaaabaaaaaaakaabaaaaeaaaaaaakaabaaaaeaaaaaadiaaaaaiocaabaaa
abaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
aeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaa
aeaaaaaaegaabaaaaeaaaaaaeghobaaaagaaaaaaaagabaaaacaaaaaadcaaaaak
hcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaaegacbaaa
acaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaa
abeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 99 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R4.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[20].y;
RSQ R0.w, R0.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[15].x;
MUL R0.z, R0.w, -c[22].x;
DP3 R1.x, fragment.texcoord[3], R4;
DP3 R1.y, fragment.texcoord[4], R4;
MUL R2.xy, R1, -c[15].x;
MAD R1.xy, R2, c[20].w, fragment.texcoord[0];
ADD R0.xy, R1, -c[21].x;
MUL R1.xy, R0.y, c[21].wyzw;
MAD R0.xy, R0.x, c[21].yzzw, R1;
ADD R0.xy, R0, c[21].x;
DP3 R1.z, R3, -R4;
ADD R0.z, R0, c[20].y;
MUL R0.xy, R0, c[14].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[19].x;
MAD R0.xyz, -R0, c[20].x, -R4;
MAD R2.zw, R1.xyxy, c[16].xyxy, c[16];
TEX R1.xyz, R0, texture[3], CUBE;
TEX R0.xyz, R2.zwzw, texture[2], 2D;
MUL R6.xyz, R1, c[11].x;
ADD R1.xyz, -R0, c[20].y;
MUL R0.x, R0.w, c[21];
ADD R1.w, R0.x, c[20].y;
MAD R0.zw, -R2.xyxy, c[20].w, fragment.texcoord[0].xyxy;
MUL R2.xy, R0.zwzw, R1.w;
MAD R0.xy, fragment.texcoord[0], c[3], c[3].zwzw;
MUL R5.xy, R2, c[14].x;
TEX R0.xyz, R0, texture[1], 2D;
MAX R2.xyz, R1, R0;
MAD R1.xy, R5, c[16], c[16].zwzw;
MOV R5.xyz, c[13];
MUL R5.xyz, R5, c[9].x;
TEX R1.xyz, R1, texture[2], 2D;
MUL R1.xyz, R5, R1;
MUL R5.xyz, R2, c[7].x;
MAD R2.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R2;
POW R1.x, R1.x, c[17].x;
POW R1.z, R1.z, c[17].x;
POW R1.y, R1.y, c[17].x;
MAD R7.xyz, R5, -R1, R1;
MAD R1.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R1.xyz, R1, texture[4], 2D;
MUL R1.xyz, R1, c[8].x;
POW R1.x, R1.x, c[18].x;
POW R1.z, R1.z, c[18].x;
POW R1.y, R1.y, c[18].x;
MAD R0.xyz, R0, -R1, R1;
ADD R0.xyz, R7, R0;
ADD R1.xyz, R2, R4;
DP3 R0.w, R1, R1;
RSQ R1.w, R0.w;
MUL R1.xyz, R1.w, R1;
MOV R0.w, c[22].y;
MUL R1.w, R0, c[4].x;
DP3 R0.w, R3, R1;
ADD R1.x, R1.w, c[20].y;
MOV R1.zw, c[20].xyxy;
ADD R0.xyz, R6, R0;
EX2 R1.x, R1.x;
MAX R0.w, R0, c[20].z;
POW R0.w, R0.w, R1.x;
MUL R1.xyz, R1.z, c[2];
MUL R4.xyz, R1, R0.w;
DP3 R0.w, R3, R2;
MAX R0.w, R0, c[20].z;
MUL R4.xyz, R4, R0;
MAD R7.xy, fragment.texcoord[0], c[5], c[5].zwzw;
TEX R0.xyz, R7, texture[5], 2D;
MAD R0.xyz, R0, c[10], R6;
ADD R1.w, R1, -c[7].x;
MAD R0.xyz, R1.w, R5, R0;
MUL R1.xyz, R0.w, R1;
MAD result.color.xyz, R1, R0, R4;
MOV result.color.w, c[20].z;
END
# 99 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 112 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_Mask] 2D 1
SetTexture 2 [_Glittermap] 2D 2
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 4
SetTexture 5 [_MainTex] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_cube s3
dcl_2d s4
dcl_2d s5
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c22, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
mad_pp r0.xyz, -v1, c1.w, c1
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r4.xyz, r0.w, r0
add r2.xyz, -v1, c0
dp3 r0.z, r2, r2
mad r0.xy, v0, c12, c12.zwzw
texld r1.yw, r0, s0
rsq r0.z, r0.z
mul r0.xyz, r0.z, r2
mad_pp r2.xy, r1.wyzw, c20.x, c20.y
add r3.xyz, r4, r0
mul_pp r5.xy, r2, r2
mul r1.xyz, r2.y, v4
mad r2.xyz, r2.x, v3, r1
add_pp_sat r0.w, r5.x, r5.y
dp3 r1.w, r3, r3
rsq r1.w, r1.w
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c20
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mul r3.xyz, r1.w, r3
rcp_pp r0.w, r0.w
mul r1.xyz, r1.x, v2
mad r1.xyz, r0.w, r1, r2
dp3 r0.w, r1, r1
rsq r0.w, r0.w
mul r2.xyz, r0.w, r1
dp3 r0.w, r2, r3
max r1.w, r0, c20.z
mov r1.x, c4
mad r1.x, r1, c23.z, c23.y
exp r2.w, r1.x
dp3 r0.w, r2, -r0
mul r1.xyz, r2, r0.w
pow r8, r1.w, r2.w
mad r1.xyz, -r1, c20.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r5.xy, r0.zwzw, -c15.x
mad r3.xy, r5, c21.x, v0
add r7.xy, r3, c21.y
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s4
mul r6.xyz, r0, c8.x
pow r3, r6.y, c18.x
pow r0, r6.x, c18.x
mov r6.x, r0
pow r0, r6.z, c18.x
mov r6.z, r0
mov r0.z, c15.x
mul r5.zw, r7.y, c21
mov r6.y, r3
mad r0.xy, v0, c3, c3.zwzw
texld r3.xyz, r0, s1
mad r0.xy, r7.x, c22, r5.zwzw
add r0.xy, r0, c22.z
mad r6.xyz, r3, -r6, r6
mad r0.z, r0, c23.x, c23.y
mul r0.xy, r0, c14.x
mul r0.xy, r0, r0.z
mov r0.z, c15.x
mad r1.w, r0.z, c22.z, c22
mad r0.zw, -r5.xyxy, c21.x, v0.xyxy
mul r0.zw, r0, r1.w
mul r5.xy, r0.zwzw, c14.x
mov r0.w, c9.x
mul r0.xy, r0, c19.x
mad r0.xy, r0, c16, c16.zwzw
mad r5.xy, r5, c16, c16.zwzw
mov r1.w, c7.x
texld r0.xyz, r0, s2
texld r5.xyz, r5, s2
mul r7.xyz, c13, r0.w
mul r7.xyz, r7, r5
add r5.xyz, -r0, c20.w
pow r0, r7.x, c17.x
max r3.xyz, r5, r3
mul r5.xyz, r3, c7.x
pow r3, r7.y, c17.x
mov r7.x, r0
pow r0, r7.z, c17.x
mov r7.y, r3
mov r7.z, r0
mad r0.xyz, r5, -r7, r7
add r3.xyz, r0, r6
texld r0.xyz, r1, s3
mov r1.xyz, c2
mad r3.xyz, r0, c11.x, r3
mov r0.w, r8.x
mul r1.xyz, c20.x, r1
mul r6.xyz, r1, r0.w
mul r6.xyz, r6, r3
dp3 r0.w, r2, r4
max r0.w, r0, c20.z
mul r3.xyz, r0, c11.x
mad r7.xy, v0, c5, c5.zwzw
texld r0.xyz, r7, s5
mad r0.xyz, r0, c10, r3
add r1.w, c20, -r1
mad r0.xyz, r1.w, r5, r0
mul r1.xyz, r0.w, r1
mad oC0.xyz, r1, r0, r6
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 84 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
SetTexture 0 [_Normalmap] 2D 4
SetTexture 1 [_Mask] 2D 0
SetTexture 2 [_Glittermap] 2D 5
SetTexture 3 [_Reflectioncubemap] CUBE 3
SetTexture 4 [_Specularglitter] 2D 2
SetTexture 5 [_MainTex] 2D 1
ConstBuffer "$Globals" 240
Vector 16 [_LightColor0]
Vector 32 [_Mask_ST]
Float 48 [_Shininess]
Vector 64 [_MainTex_ST]
Vector 80 [_Specularglitter_ST]
Float 96 [_MasktransparencyDebug]
Float 100 [_Specularpower05]
Float 104 [_Glitterpower]
Vector 112 [_Color]
Float 128 [_Reflectioncubemappower]
Vector 144 [_Normalmap_ST]
Vector 176 [_Glittercolor]
Float 192 [_Glitterymaskdotsscale]
Float 196 [_Glitteryspeed01]
Vector 208 [_Glittermap_ST]
Float 224 [_Glittercontrast13]
Float 228 [_Specularcontrast13]
Float 232 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefiecedbpjjhacbnoblfdhlphfelinolkjiopkpabaaaaaapaanaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcnaamaaaa
eaaaaaaadeadaaaafjaaaaaeegiocaaaaaaaaaaaapaaaaaafjaaaaaeegiocaaa
abaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafidaaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaa
gcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaa
aaaaaaaaamaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaa
aaaaaaaafgifcaaaaaaaaaaaamaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemln
aaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaa
abaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaa
egbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaa
afaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaa
egaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaa
aaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaa
aceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaa
egaabaaaaaaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaaldcaabaaaaaaaaaaa
egaabaaaaaaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaacaaaaaaaagabaaa
afaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaagaaaaaaegiccaaa
aaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaa
aaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaaaoaaaaaabjaaaaafhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaa
aceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaa
egaabaaaadaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaak
dcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaa
amaaaaaadcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaaamaaaaaa
abeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaa
abaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaa
kgikcaaaaaaaaaaaaoaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaa
egiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaa
adaaaaaaegaabaaaadaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaaaaaaaaal
hcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaacaaaaaaogikcaaaaaaaaaaaacaaaaaaefaaaaajpcaabaaaaeaaaaaa
egaabaaaaeaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaadeaaaaahhcaabaaa
adaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaa
egacbaaaadaaaaaaagiacaaaaaaaaaaaagaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaal
dcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaa
aaaaaaaaafaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaa
aeaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaaagaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
diaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaaoaaaaaa
bjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaa
egacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaa
adaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
ajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaaaaaaaaaaagabaaaaeaaaaaadcaaaaapdcaabaaaafaaaaaa
hgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaa
afaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaa
egbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaa
afaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaaj
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaa
abaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaia
ebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaa
egacbaaaacaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaaiaaaaaaegacbaaaaaaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaaiaaaaaa
dcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaa
acaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaa
aaaaaaaaadaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaa
abaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaaaaaaaj
ocaabaaaabaaaaaaagijcaaaaaaaaaaaabaaaaaaagijcaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaaeaaaaaaogikcaaaaaaaaaaaaeaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaafaaaaaaaagabaaa
abaaaaaadcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaa
ahaaaaaaegacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaa
aaaaaaaaagaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaa
aaaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 107 math, 9 textures
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.5 },
		{ 0.050000001, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[20].y;
RSQ R0.w, R0.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R0;
MOV R0.w, c[15].x;
MUL R0.z, R0.w, -c[22].x;
DP3 R1.z, R2, -R6;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R3.xy, R1, -c[15].x;
MAD R1.xy, R3, c[21].x, fragment.texcoord[0];
ADD R0.xy, R1, -c[20].w;
MUL R1.xy, R0.y, c[21].wyzw;
MAD R0.xy, R0.x, c[21].yzzw, R1;
ADD R0.xy, R0, c[20].w;
ADD R0.z, R0, c[20].y;
MUL R0.xy, R0, c[14].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R2, R1.z;
MUL R1.xy, R1, c[19].x;
MAD R0.xyz, -R0, c[20].x, -R6;
MAD R3.zw, R1.xyxy, c[16].xyxy, c[16];
TEX R1.xyz, R0, texture[5], CUBE;
TEX R0.xyz, R3.zwzw, texture[4], 2D;
MUL R4.xyz, R1, c[11].x;
ADD R1.xyz, -R0, c[20].y;
MAD R0.z, R0.w, c[20].w, c[20].y;
MAD R3.xy, -R3, c[21].x, fragment.texcoord[0];
MUL R3.xy, R3, R0.z;
MAD R0.xy, fragment.texcoord[0], c[3], c[3].zwzw;
MUL R5.xy, R3, c[14].x;
TEX R0.xyz, R0, texture[3], 2D;
MAX R3.xyz, R1, R0;
MAD R1.xy, R5, c[16], c[16].zwzw;
MOV R5.xyz, c[13];
MUL R5.xyz, R5, c[9].x;
TEX R1.xyz, R1, texture[4], 2D;
MUL R1.xyz, R5, R1;
POW R5.x, R1.x, c[17].x;
POW R5.y, R1.y, c[17].x;
POW R5.z, R1.z, c[17].x;
MUL R3.xyz, R3, c[7].x;
MAD R7.xyz, R3, -R5, R5;
MAD R1.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
ADD R6.xyz, R1, R6;
DP3 R0.w, R6, R6;
MAD R5.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R5.xyz, R5, texture[6], 2D;
MUL R5.xyz, R5, c[8].x;
DP3 R1.x, R2, R1;
POW R5.x, R5.x, c[18].x;
POW R5.z, R5.z, c[18].x;
POW R5.y, R5.y, c[18].x;
MAD R0.xyz, R0, -R5, R5;
ADD R0.xyz, R7, R0;
RSQ R0.w, R0.w;
MUL R5.xyz, R0.w, R6;
DP3 R1.w, R2, R5;
RCP R0.w, fragment.texcoord[5].w;
MAD R5.xy, fragment.texcoord[5], R0.w, c[20].w;
TEX R0.w, R5, texture[1], 2D;
SLT R2.w, c[20].z, fragment.texcoord[5].z;
MUL R2.w, R2, R0;
MOV R0.w, c[22].y;
MAD R5.xy, fragment.texcoord[0], c[5], c[5].zwzw;
ADD R0.xyz, R4, R0;
TEX R5.xyz, R5, texture[7], 2D;
DP3 R3.w, fragment.texcoord[5], fragment.texcoord[5];
MUL R4.w, R0, c[4].x;
TEX R0.w, R3.w, texture[2], 2D;
MUL R0.w, R2, R0;
MUL R0.w, R0, c[20].x;
MUL R6.xyz, R0.w, c[2];
ADD R3.w, R4, c[20].y;
MOV R0.w, c[20].y;
MAX R1.w, R1, c[20].z;
EX2 R2.w, R3.w;
POW R1.w, R1.w, R2.w;
MUL R7.xyz, R6, R1.w;
MAX R1.w, R1.x, c[20].z;
MUL R0.xyz, R7, R0;
MAD R4.xyz, R5, c[10], R4;
ADD R0.w, R0, -c[7].x;
MAD R1.xyz, R0.w, R3, R4;
MUL R2.xyz, R1.w, R6;
MAD result.color.xyz, R2, R1, R0;
MOV result.color.w, c[20].z;
END
# 107 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 118 math, 9 textures
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_cube s5
dcl_2d s6
dcl_2d s7
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.50000000, 0.05000000, -0.50000000, 1.00000000
def c22, 0.00159374, -0.99999875, -0.00159374, 0
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
mad r0.xy, v0, c12, c12.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c20.x, c20.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r3.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c20
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r3
dp3 r0.y, v4, r3
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c15.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c21.y, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c21.z
mul r2.xy, r1.w, c22
mad r1.zw, r1.z, c22.xyyz, r2.xyxy
dp3 r0.x, r4, -r3
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c20.x, -r3
texld r2.xyz, r0, s5
add r1.zw, r1, c21.x
mov r0.z, c15.x
mad r0.w, r0.z, c21.x, c21
mad r1.xy, -r1, c21.y, v0
mul r1.xy, r1, r0.w
mov r0.z, c15.x
mul r0.xy, r1.zwzw, c14.x
mad r0.z, r0, c23.x, c23.y
mul r5.xy, r0, r0.z
mul r1.xy, r1, c14.x
mad r0.xy, r1, c16, c16.zwzw
mov r0.w, c9.x
mul r1.xyz, c13, r0.w
texld r0.xyz, r0, s4
mul r7.xyz, r1, r0
mul r1.xy, r5, c19.x
mad r5.xy, r1, c16, c16.zwzw
pow r0, r7.x, c17.x
mov r7.x, r0
pow r0, r7.z, c17.x
mad r1.xy, v0, c3, c3.zwzw
texld r5.xyz, r5, s4
texld r1.xyz, r1, s3
add r5.xyz, -r5, c20.w
max r5.xyz, r5, r1
mul r6.xyz, r5, c7.x
pow r5, r7.y, c17.x
mov r7.y, r5
mov r7.z, r0
mad r5.xyz, -v1, c1.w, c1
dp3 r0.w, r5, r5
rsq r1.w, r0.w
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s6
mul r9.xyz, r0, c8.x
pow r0, r9.x, c18.x
mov r9.x, r0
pow r0, r9.z, c18.x
mul r5.xyz, r1.w, r5
mad r8.xyz, r6, -r7, r7
add r7.xyz, r5, r3
pow r3, r9.y, c18.x
dp3 r0.w, r7, r7
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r0.xyz, r8, r0
mad r3.xyz, r2, c11.x, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r7
dp3 r0.x, r4, r0
max r0.y, r0.x, c20.z
mov r0.w, c4.x
mad r0.z, r0.w, c23, c23.y
exp r0.z, r0.z
pow r1, r0.y, r0.z
rcp r0.x, v5.w
mad r7.xy, v5, r0.x, c21.x
texld r0.w, r7, s1
dp3 r0.x, v5, v5
cmp r0.y, -v5.z, c20.z, c20.w
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s2
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, c20
mov r1.w, c7.x
mov r0.w, r1.x
mul r0.xyz, r0.x, c2
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c20.z
mul r3.xyz, r2, c11.x
mad r7.xy, v0, c5, c5.zwzw
texld r2.xyz, r7, s7
mad r2.xyz, r2, c10, r3
add r1.w, c20, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 91 math, 9 textures
Keywords { "SPOT" "SHADOWS_OFF" }
SetTexture 0 [_Normalmap] 2D 6
SetTexture 1 [_LightTexture0] 2D 0
SetTexture 2 [_LightTextureB0] 2D 1
SetTexture 3 [_Mask] 2D 2
SetTexture 4 [_Glittermap] 2D 7
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 4
SetTexture 7 [_MainTex] 2D 3
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefieceddehgdhjahbaoooelcbinohneoknbllngabaaaaaagaapaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcciaoaaaaeaaaaaaaikadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fidaaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaa
fibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gcbaaaadhcbabaaaafaaaaaagcbaaaadpcbabaaaagaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaa
baaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaa
fgifcaaaaaaaaaaabaaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaa
aaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaa
aeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaa
aeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaa
egacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaa
adaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaa
egaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaa
aaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaa
aaaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaa
aaaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaa
diaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaa
apaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaa
cpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaagiacaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaa
olpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaa
adaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaa
adaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaa
idpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaa
egaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaa
aaaaaaaabcaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaa
aaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaa
egaabaaaadaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaaaaaaaaalhcaabaaa
adaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
agaaaaaaogikcaaaaaaaaaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aeaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadeaaaaahhcaabaaaadaaaaaa
egacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaa
adaaaaaaagiacaaaaaaaaaaaakaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaa
adaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaa
afaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaa
ajaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaa
aagabaaaaeaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaa
aaaaaaaaakaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaa
aeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaa
dcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaa
ogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaa
eghobaaaaaaaaaaaaagabaaaagaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaa
afaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialp
aaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaa
egbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaa
aeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaa
egaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
egacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaa
acaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaam
hcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaaacaaaaaa
egiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaafaaaaaa
egacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaajhcaabaaa
abaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaadeaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaaaaaaaaaa
ahaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaa
abaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaoaaaaahgcaabaaa
abaaaaaaagbbbaaaagaaaaaapgbpbaaaagaaaaaaaaaaaaakgcaabaaaabaaaaaa
fgagbaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaadpaaaaaadpaaaaaaaaefaaaaaj
pcaabaaaaeaaaaaajgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaa
dbaaaaahccaabaaaabaaaaaaabeaaaaaaaaaaaaackbabaaaagaaaaaaabaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahccaabaaa
abaaaaaadkaabaaaaeaaaaaabkaabaaaabaaaaaabaaaaaahecaabaaaabaaaaaa
egbcbaaaagaaaaaaegbcbaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaakgakbaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaaapaaaaahccaabaaaabaaaaaa
fgafbaaaabaaaaaaagaabaaaaeaaaaaadiaaaaaiocaabaaaabaaaaaafgafbaaa
abaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaaaeaaaaaaagaabaaa
abaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaa
jgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
aiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aeaaaaaaeghobaaaahaaaaaaaagabaaaadaaaaaadcaaaaakhcaabaaaacaaaaaa
egacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaaegacbaaaacaaaaaaaaaaaaaj
icaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 104 math, 9 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTextureB0] 2D 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[20].y;
RSQ R0.w, R0.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R0;
MOV R0.w, c[15].x;
MUL R0.z, R0.w, -c[22].x;
MUL R0.w, R0, c[21].x;
DP3 R2.w, R2, -R6;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R1.xy, R1, -c[15].x;
MAD R1.zw, R1.xyxy, c[20].w, fragment.texcoord[0].xyxy;
ADD R0.xy, R1.zwzw, -c[21].x;
MUL R1.zw, R0.y, c[21].xywy;
MAD R0.xy, R0.x, c[21].yzzw, R1.zwzw;
ADD R0.xy, R0, c[21].x;
ADD R0.z, R0, c[20].y;
MUL R0.xy, R0, c[14].x;
MUL R1.zw, R0.xyxy, R0.z;
MUL R0.xyz, R2, R2.w;
MAD R0.xyz, -R0, c[20].x, -R6;
TEX R3.xyz, R0, texture[5], CUBE;
MUL R1.zw, R1, c[19].x;
MAD R1.zw, R1, c[16].xyxy, c[16];
TEX R0.xyz, R1.zwzw, texture[4], 2D;
MAD R1.zw, fragment.texcoord[0].xyxy, c[3].xyxy, c[3];
ADD R0.xyz, -R0, c[20].y;
TEX R4.xyz, R1.zwzw, texture[3], 2D;
MUL R3.xyz, R3, c[11].x;
ADD R0.w, R0, c[20].y;
MAD R1.xy, -R1, c[20].w, fragment.texcoord[0];
MUL R1.xy, R1, R0.w;
MUL R5.xy, R1, c[14].x;
MAX R1.xyz, R0, R4;
MAD R0.xy, R5, c[16], c[16].zwzw;
MOV R5.xyz, c[13];
MUL R5.xyz, R5, c[9].x;
TEX R0.xyz, R0, texture[4], 2D;
MUL R0.xyz, R5, R0;
MUL R1.xyz, R1, c[7].x;
POW R5.x, R0.x, c[17].x;
POW R5.y, R0.y, c[17].x;
POW R5.z, R0.z, c[17].x;
MAD R7.xyz, R1, -R5, R5;
MAD R0.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
ADD R6.xyz, R0, R6;
DP3 R0.y, R2, R0;
DP3 R0.w, R6, R6;
MAD R5.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R5.xyz, R5, texture[6], 2D;
MUL R5.xyz, R5, c[8].x;
MOV R0.x, c[20].y;
POW R5.x, R5.x, c[18].x;
POW R5.z, R5.z, c[18].x;
POW R5.y, R5.y, c[18].x;
MAD R4.xyz, R4, -R5, R5;
ADD R4.xyz, R7, R4;
RSQ R0.w, R0.w;
MUL R5.xyz, R0.w, R6;
DP3 R1.w, R2, R5;
MAX R2.w, R1, c[20].z;
MOV R0.w, c[22].y;
MUL R0.w, R0, c[4].x;
ADD R3.w, R0, c[20].y;
DP3 R1.w, fragment.texcoord[5], fragment.texcoord[5];
ADD R4.xyz, R3, R4;
TEX R1.w, R1.w, texture[1], 2D;
TEX R0.w, fragment.texcoord[5], texture[2], CUBE;
MUL R0.w, R1, R0;
MUL R5.xyz, R0.w, c[2];
MUL R6.xyz, R5, c[20].x;
EX2 R1.w, R3.w;
POW R0.w, R2.w, R1.w;
MUL R7.xyz, R6, R0.w;
MAD R5.xy, fragment.texcoord[0], c[5], c[5].zwzw;
TEX R5.xyz, R5, texture[7], 2D;
MAX R0.w, R0.y, c[20].z;
MUL R4.xyz, R7, R4;
MAD R3.xyz, R5, c[10], R3;
ADD R0.x, R0, -c[7];
MAD R0.xyz, R0.x, R1, R3;
MUL R1.xyz, R0.w, R6;
MAD result.color.xyz, R1, R0, R4;
MOV result.color.w, c[20].z;
END
# 104 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 114 math, 9 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTextureB0] 2D 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_cube s2
dcl_2d s3
dcl_2d s4
dcl_cube s5
dcl_2d s6
dcl_2d s7
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c22, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xyz
mad r0.xy, v0, c12, c12.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c20.x, c20.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c20
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c15.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c21.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c21.y
mul r2.xy, r1.w, c21.zwzw
mad r1.zw, r1.z, c22.xyxy, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c20.x, -r6
texld r2.xyz, r0, s5
add r1.zw, r1, c22.z
mov r0.z, c15.x
mad r0.w, r0.z, c22.z, c22
mad r1.xy, -r1, c21.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c15.x
mul r0.xy, r1.zwzw, c14.x
mad r0.z, r0, c23.x, c23.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c14.x
mad r0.xy, r1, c16, c16.zwzw
mov r0.w, c9.x
mul r1.xyz, c13, r0.w
texld r0.xyz, r0, s4
mul r5.xyz, r1, r0
mul r1.xy, r3, c19.x
mad r3.xy, r1, c16, c16.zwzw
pow r0, r5.x, c17.x
mov r5.x, r0
pow r0, r5.z, c17.x
mad r1.xy, v0, c3, c3.zwzw
texld r3.xyz, r3, s4
mov r5.z, r0
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s6
mul r9.xyz, r0, c8.x
pow r0, r9.x, c18.x
texld r1.xyz, r1, s3
add r3.xyz, -r3, c20.w
max r3.xyz, r3, r1
mul r7.xyz, r3, c7.x
pow r3, r5.y, c17.x
mov r5.y, r3
mad r3.xyz, -v1, c1.w, c1
dp3 r1.w, r3, r3
rsq r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul r5.xyz, r0.y, r3
pow r3, r9.y, c18.x
mov r9.x, r0
pow r0, r9.z, c18.x
mov r9.z, r0
add r0.xyz, r5, r6
mov r9.y, r3
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
dp3 r0.x, r4, r0
mad r1.xyz, r1, -r9, r9
add r1.xyz, r8, r1
mad r3.xyz, r2, c11.x, r1
mov r1.x, c4
mad r0.w, r1.x, c23.z, c23.y
exp r0.y, r0.w
max r0.x, r0, c20.z
pow r1, r0.x, r0.y
dp3 r0.x, v5, v5
mov r1.w, c7.x
texld r0.w, v5, s2
texld r0.x, r0.x, s1
mul r0.x, r0, r0.w
mul r0.xyz, r0.x, c2
mov r0.w, r1.x
mul r0.xyz, r0, c20.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c20.z
mul r3.xyz, r2, c11.x
mad r6.xy, v0, c5, c5.zwzw
texld r2.xyz, r6, s7
mad r2.xyz, r2, c10, r3
add r1.w, c20, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 86 math, 9 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_Normalmap] 2D 6
SetTexture 1 [_LightTextureB0] 2D 1
SetTexture 2 [_LightTexture0] CUBE 0
SetTexture 3 [_Mask] 2D 2
SetTexture 4 [_Glittermap] 2D 7
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 4
SetTexture 7 [_MainTex] 2D 3
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefiecedekhbnioncgkbfhdiojamchpnnkmmlgpmabaaaaaamiaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcjaanaaaaeaaaaaaageadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafidaaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fidaaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaa
fibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gcbaaaadhcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaa
baaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaa
fgifcaaaaaaaaaaabaaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaa
aaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaa
aeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaa
aeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaa
egacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaa
adaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaa
egaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaa
aaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaa
aaaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaa
aaaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaa
diaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaa
apaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaa
cpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaagiacaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaa
olpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaa
adaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaa
adaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaa
idpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaa
egaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaa
aaaaaaaabcaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaa
aaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaa
egaabaaaadaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaaaaaaaaalhcaabaaa
adaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
agaaaaaaogikcaaaaaaaaaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aeaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadeaaaaahhcaabaaaadaaaaaa
egacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaa
adaaaaaaagiacaaaaaaaaaaaakaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaa
adaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaa
afaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaa
ajaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaa
aagabaaaaeaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaa
aaaaaaaaakaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaa
aeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaa
dcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaa
ogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaa
eghobaaaaaaaaaaaaagabaaaagaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaa
afaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialp
aaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaa
egbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaa
aeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaa
egaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
egacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaa
acaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaam
hcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaaacaaaaaa
egiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaafaaaaaa
egacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaajhcaabaaa
abaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaadeaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaaaaaaaaaa
ahaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaa
abaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaabaaaaaahccaabaaa
abaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaa
fgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaaefaaaaajpcaabaaa
afaaaaaaegbcbaaaagaaaaaaeghobaaaacaaaaaaaagabaaaaaaaaaaaapaaaaah
ccaabaaaabaaaaaaagaabaaaaeaaaaaapgapbaaaafaaaaaadiaaaaaiocaabaaa
abaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
aeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaa
aeaaaaaaegaabaaaaeaaaaaaeghobaaaahaaaaaaaagabaaaadaaaaaadcaaaaak
hcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaaegacbaaa
acaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaa
abeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 101 math, 8 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[20].y;
RSQ R0.w, R0.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[15].x;
MUL R0.z, R0.w, -c[22].x;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R2.xy, R1, -c[15].x;
MAD R1.xy, R2, c[20].w, fragment.texcoord[0];
ADD R0.xy, R1, -c[21].x;
MUL R1.xy, R0.y, c[21].wyzw;
MAD R0.xy, R0.x, c[21].yzzw, R1;
ADD R0.xy, R0, c[21].x;
DP3 R1.z, R3, -R6;
ADD R0.z, R0, c[20].y;
MUL R0.xy, R0, c[14].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[19].x;
MAD R0.xyz, -R0, c[20].x, -R6;
MAD R2.zw, R1.xyxy, c[16].xyxy, c[16];
TEX R1.xyz, R0, texture[4], CUBE;
TEX R0.xyz, R2.zwzw, texture[3], 2D;
MUL R5.xyz, R1, c[11].x;
ADD R1.xyz, -R0, c[20].y;
MUL R0.x, R0.w, c[21];
ADD R1.w, R0.x, c[20].y;
MAD R0.zw, -R2.xyxy, c[20].w, fragment.texcoord[0].xyxy;
MUL R2.xy, R0.zwzw, R1.w;
MAD R0.xy, fragment.texcoord[0], c[3], c[3].zwzw;
MUL R4.xy, R2, c[14].x;
TEX R0.xyz, R0, texture[2], 2D;
MAX R2.xyz, R1, R0;
MAD R1.xy, R4, c[16], c[16].zwzw;
MOV R4.xyz, c[13];
MUL R4.xyz, R4, c[9].x;
TEX R1.xyz, R1, texture[3], 2D;
MUL R1.xyz, R4, R1;
MUL R4.xyz, R2, c[7].x;
MAD R2.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R2;
ADD R6.xyz, R2, R6;
DP3 R0.w, R6, R6;
POW R1.x, R1.x, c[17].x;
POW R1.y, R1.y, c[17].x;
POW R1.z, R1.z, c[17].x;
MAD R7.xyz, R4, -R1, R1;
MAD R1.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R1.xyz, R1, texture[5], 2D;
MUL R1.xyz, R1, c[8].x;
POW R1.x, R1.x, c[18].x;
POW R1.z, R1.z, c[18].x;
POW R1.y, R1.y, c[18].x;
MAD R0.xyz, R0, -R1, R1;
ADD R0.xyz, R7, R0;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R6;
DP3 R1.x, R3, R1;
MOV R0.w, c[22].y;
MAX R1.w, R1.x, c[20].z;
MUL R0.w, R0, c[4].x;
ADD R1.x, R0.w, c[20].y;
TEX R0.w, fragment.texcoord[5], texture[1], 2D;
EX2 R2.w, R1.x;
MUL R1.xyz, R0.w, c[2];
MUL R6.xyz, R1, c[20].x;
POW R0.w, R1.w, R2.w;
MUL R7.xyz, R6, R0.w;
DP3 R1.w, R3, R2;
ADD R0.xyz, R5, R0;
MAD R1.xy, fragment.texcoord[0], c[5], c[5].zwzw;
TEX R1.xyz, R1, texture[6], 2D;
MOV R0.w, c[20].y;
MAX R1.w, R1, c[20].z;
MUL R0.xyz, R7, R0;
MAD R1.xyz, R1, c[10], R5;
ADD R0.w, R0, -c[7].x;
MAD R1.xyz, R0.w, R4, R1;
MUL R2.xyz, R1.w, R6;
MAD result.color.xyz, R2, R1, R0;
MOV result.color.w, c[20].z;
END
# 101 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 112 math, 8 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c22, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xy
mad r0.xy, v0, c12, c12.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c20.x, c20.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c20
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c15.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c21.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c21.y
mul r2.xy, r1.w, c21.zwzw
mad r1.zw, r1.z, c22.xyxy, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c20.x, -r6
texld r2.xyz, r0, s4
add r1.zw, r1, c22.z
mov r0.z, c15.x
mad r0.w, r0.z, c22.z, c22
mad r1.xy, -r1, c21.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c15.x
mul r0.xy, r1.zwzw, c14.x
mad r0.z, r0, c23.x, c23.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c14.x
mad r0.xy, r1, c16, c16.zwzw
mov r0.w, c9.x
mul r1.xyz, c13, r0.w
texld r0.xyz, r0, s3
mul r5.xyz, r1, r0
mul r1.xy, r3, c19.x
mad r3.xy, r1, c16, c16.zwzw
pow r0, r5.x, c17.x
mov r5.x, r0
pow r0, r5.z, c17.x
mad r1.xy, v0, c3, c3.zwzw
texld r3.xyz, r3, s3
texld r1.xyz, r1, s2
add r3.xyz, -r3, c20.w
max r3.xyz, r3, r1
mul r7.xyz, r3, c7.x
pow r3, r5.y, c17.x
mov r5.y, r3
mov r5.z, r0
mad_pp r3.xyz, -v1, c1.w, c1
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s5
mul r9.xyz, r0, c8.x
pow r0, r9.x, c18.x
dp3_pp r1.w, r3, r3
rsq_pp r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul_pp r5.xyz, r0.y, r3
pow r3, r9.y, c18.x
mov r9.x, r0
pow r0, r9.z, c18.x
mov r1.w, c7.x
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r1.xyz, r5, r6
add r0.xyz, r8, r0
dp3 r0.w, r1, r1
mad r3.xyz, r2, c11.x, r0
rsq r0.x, r0.w
mul r0.xyz, r0.x, r1
dp3 r0.x, r4, r0
mov r0.w, c4.x
mad r0.w, r0, c23.z, c23.y
exp r1.y, r0.w
max r1.x, r0, c20.z
pow r0, r1.x, r1.y
texld r0.w, v5, s1
mul r1.xyz, r0.w, c2
mov r0.w, r0.x
mul r0.xyz, r1, c20.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c20.z
mul r3.xyz, r2, c11.x
mad r6.xy, v0, c5, c5.zwzw
texld r2.xyz, r6, s6
mad r2.xyz, r2, c10, r3
add r1.w, c20, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 8 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_Normalmap] 2D 5
SetTexture 1 [_LightTexture0] 2D 0
SetTexture 2 [_Mask] 2D 1
SetTexture 3 [_Glittermap] 2D 6
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 3
SetTexture 6 [_MainTex] 2D 2
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefiecedfnmhokgbgpmoinoebpilpafkaagpklfcabaaaaaagmaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapahaaaalmaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaaadaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaa
ahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcdeanaaaaeaaaaaaaenadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafidaaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadmcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaa
aaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaa
aaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemln
aaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaa
abaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaa
egbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaa
afaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaa
egaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaa
aaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaa
aceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaa
egaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaaldcaabaaaaaaaaaaa
egaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaadaaaaaaaagabaaa
agaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaakaaaaaaegiccaaa
aaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaa
aaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaa
aceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaa
egaabaaaadaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaak
dcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaabaaaaaaa
abeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaa
abaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaa
kgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaa
egiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaa
adaaaaaaegaabaaaadaaaaaaeghobaaaadaaaaaaaagabaaaagaaaaaaaaaaaaal
hcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaa
egaabaaaaeaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadeaaaaahhcaabaaa
adaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaa
egacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaal
dcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaa
aaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaa
afaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
diaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaabcaaaaaa
bjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaa
egacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaa
adaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
anaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaaaaaaaaaaagabaaaafaaaaaadcaaaaapdcaabaaaafaaaaaa
hgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaa
afaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaa
egbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaa
afaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaaj
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaa
abaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaia
ebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaa
egacbaaaacaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaaegacbaaaaaaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaa
dcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaa
acaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaa
aaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaa
abaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaefaaaaaj
pcaabaaaaeaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaa
aaaaaaahccaabaaaabaaaaaadkaabaaaaeaaaaaadkaabaaaaeaaaaaadiaaaaai
ocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaah
hcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaagaaaaaaaagabaaaacaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 112 math, 10 textures
Keywords { "SPOT" "SHADOWS_DEPTH" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Vector 14 [_Glittercolor]
Float 15 [_Glitterymaskdotsscale]
Float 16 [_Glitteryspeed01]
Vector 17 [_Glittermap_ST]
Float 18 [_Glittercontrast13]
Float 19 [_Specularcontrast13]
Float 20 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"3.0-!!ARBfp1.0
PARAM c[24] = { program.local[0..20],
		{ 2, 1, 0, 0.5 },
		{ 0.050000001, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[13], c[13].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[21].x, -c[21].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
ADD R0.w, -R0, c[21].y;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[16].x;
MUL R0.z, R0.w, -c[23].x;
MOV R5.xyz, c[14];
DP3 R1.w, fragment.texcoord[5], fragment.texcoord[5];
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R2.xy, R1, -c[16].x;
MAD R1.xy, R2, c[22].x, fragment.texcoord[0];
ADD R0.xy, R1, -c[21].w;
MUL R1.xy, R0.y, c[22].wyzw;
MAD R0.xy, R0.x, c[22].yzzw, R1;
ADD R0.xy, R0, c[21].w;
DP3 R1.z, R3, -R6;
ADD R0.z, R0, c[21].y;
MUL R0.xy, R0, c[15].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[20].x;
MAD R0.xyz, -R0, c[21].x, -R6;
MAD R2.zw, R1.xyxy, c[17].xyxy, c[17];
TEX R1.xyz, R0, texture[6], CUBE;
TEX R0.xyz, R2.zwzw, texture[5], 2D;
MUL R4.xyz, R1, c[12].x;
ADD R1.xyz, -R0, c[21].y;
MAD R0.z, R0.w, c[21].w, c[21].y;
MAD R2.xy, -R2, c[22].x, fragment.texcoord[0];
MUL R2.xy, R2, R0.z;
MAD R0.xy, fragment.texcoord[0], c[4], c[4].zwzw;
TEX R0.xyz, R0, texture[4], 2D;
MUL R2.xy, R2, c[15].x;
MAD R2.xy, R2, c[17], c[17].zwzw;
MAX R1.xyz, R1, R0;
TEX R2.xyz, R2, texture[5], 2D;
MUL R5.xyz, R5, c[10].x;
MUL R5.xyz, R5, R2;
MUL R2.xyz, R1, c[8].x;
MAD R1.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
ADD R6.xyz, R1, R6;
DP3 R0.w, R6, R6;
POW R5.x, R5.x, c[18].x;
POW R5.y, R5.y, c[18].x;
POW R5.z, R5.z, c[18].x;
MAD R7.xyz, R2, -R5, R5;
MAD R5.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R5.xyz, R5, texture[7], 2D;
MUL R5.xyz, R5, c[9].x;
POW R5.x, R5.x, c[19].x;
POW R5.z, R5.z, c[19].x;
POW R5.y, R5.y, c[19].x;
MAD R0.xyz, R0, -R5, R5;
ADD R5.xyz, R7, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R6;
DP3 R0.y, R3, R0;
MAX R0.z, R0.y, c[21];
RCP R0.x, fragment.texcoord[5].w;
MAD R0.xy, fragment.texcoord[5], R0.x, c[21].w;
TEX R0.w, R0, texture[1], 2D;
SLT R0.x, c[21].z, fragment.texcoord[5].z;
MUL R0.x, R0, R0.w;
TEX R1.w, R1.w, texture[2], 2D;
MUL R0.y, R0.x, R1.w;
ADD R5.xyz, R4, R5;
TXP R0.x, fragment.texcoord[6], texture[3], 2D;
RCP R0.w, fragment.texcoord[6].w;
MAD R1.w, -fragment.texcoord[6].z, R0, R0.x;
MOV R0.x, c[23].y;
MOV R0.w, c[21].y;
MUL R2.w, R0.x, c[5].x;
CMP R0.x, R1.w, c[2], R0.w;
MUL R0.x, R0.y, R0;
ADD R1.w, R2, c[21].y;
EX2 R0.y, R1.w;
POW R1.w, R0.z, R0.y;
MUL R0.x, R0, c[21];
MUL R0.xyz, R0.x, c[3];
MUL R6.xyz, R0, R1.w;
DP3 R1.w, R3, R1;
MAX R1.w, R1, c[21].z;
MUL R6.xyz, R6, R5;
MAD R7.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R5.xyz, R7, texture[8], 2D;
MAD R1.xyz, R5, c[11], R4;
ADD R0.w, R0, -c[8].x;
MAD R1.xyz, R0.w, R2, R1;
MUL R0.xyz, R1.w, R0;
MAD result.color.xyz, R0, R1, R6;
MOV result.color.w, c[21].z;
END
# 112 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 123 math, 10 textures
Keywords { "SPOT" "SHADOWS_DEPTH" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Vector 14 [_Glittercolor]
Float 15 [_Glitterymaskdotsscale]
Float 16 [_Glitteryspeed01]
Vector 17 [_Glittermap_ST]
Float 18 [_Glittercontrast13]
Float 19 [_Specularcontrast13]
Float 20 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_cube s6
dcl_2d s7
dcl_2d s8
def c21, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c22, 0.50000000, 0.05000000, -0.50000000, 1.00000000
def c23, 0.00159374, -0.99999875, -0.00159374, 0
def c24, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
dcl_texcoord6 v6
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c21.x, c21.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c21
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c16.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c22.y, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c22.z
mul r2.xy, r1.w, c23
mad r1.zw, r1.z, c23.xyyz, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c21.x, -r6
texld r2.xyz, r0, s6
add r1.zw, r1, c22.x
mov r0.z, c16.x
mad r0.w, r0.z, c22.x, c22
mad r1.xy, -r1, c22.y, v0
mul r1.xy, r1, r0.w
mov r0.z, c16.x
mul r0.xy, r1.zwzw, c15.x
mad r0.z, r0, c24.x, c24.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c15.x
mad r0.xy, r1, c17, c17.zwzw
mov r0.w, c10.x
mul r1.xyz, c14, r0.w
texld r0.xyz, r0, s5
mul r5.xyz, r1, r0
mul r1.xy, r3, c20.x
mad r3.xy, r1, c17, c17.zwzw
pow r0, r5.x, c18.x
mov r5.x, r0
pow r0, r5.z, c18.x
mad r1.xy, v0, c4, c4.zwzw
texld r3.xyz, r3, s5
mov r5.z, r0
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s7
mul r9.xyz, r0, c9.x
pow r0, r9.x, c19.x
texld r1.xyz, r1, s4
add r3.xyz, -r3, c21.w
max r3.xyz, r3, r1
mul r7.xyz, r3, c8.x
pow r3, r5.y, c18.x
mov r5.y, r3
mad r3.xyz, -v1, c1.w, c1
dp3 r1.w, r3, r3
rsq r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul r5.xyz, r0.y, r3
pow r3, r9.y, c19.x
mov r9.x, r0
pow r0, r9.z, c19.x
mov r9.z, r0
add r0.xyz, r5, r6
mov r9.y, r3
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
dp3 r0.x, r4, r0
mad r1.xyz, r1, -r9, r9
add r1.xyz, r8, r1
mad r3.xyz, r2, c12.x, r1
mov r1.x, c5
mad r0.w, r1.x, c24.z, c24.y
exp r0.y, r0.w
max r0.x, r0, c21.z
pow r1, r0.x, r0.y
mov r1.w, c8.x
texldp r0.x, v6, s3
rcp r0.y, v6.w
mad r0.y, -v6.z, r0, r0.x
rcp r0.x, v5.w
mad r6.xy, v5, r0.x, c22.x
texld r0.w, r6, s1
mov r0.z, c2.x
cmp r0.z, r0.y, c21.w, r0
dp3 r0.x, v5, v5
cmp r0.y, -v5.z, c21.z, c21.w
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s2
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.x, r0, c21
mov r0.w, r1.x
mul r0.xyz, r0.x, c3
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c21.z
mul r3.xyz, r2, c12.x
mad r6.xy, v0, c6, c6.zwzw
texld r2.xyz, r6, s8
mad r2.xyz, r2, c11, r3
add r1.w, c21, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c21.z
"
}
SubProgram "d3d11 " {
// Stats: 94 math, 10 textures
Keywords { "SPOT" "SHADOWS_DEPTH" }
SetTexture 0 [_Normalmap] 2D 7
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 0
SetTexture 4 [_Mask] 2D 3
SetTexture 5 [_Glittermap] 2D 8
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 5
SetTexture 8 [_MainTex] 2D 4
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedooccomfeakbboccoldgmpkijiopombjiabaaaaaafabaaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apapaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaapapaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcaaapaaaaeaaaaaaamaadaaaafjaaaaaeegiocaaa
aaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafkaaaaadaagabaaa
aiaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafidaaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaa
ffffaaaafibiaaaeaahabaaaaiaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadpcbabaaaagaaaaaagcbaaaad
pcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaak
bcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaa
aaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaia
ebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaa
adaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaah
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaa
adaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaa
ogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaa
eghobaaaafaaaaaaaagabaaaaiaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaa
aaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaa
bcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaa
aeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaa
apaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalkolpphplp
aaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaa
adaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaabkiacaia
ebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaah
dcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaa
adaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaa
adaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaa
bbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaafaaaaaa
aagabaaaaiaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaa
adaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaa
diaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaa
egaabaaaafaaaaaaeghobaaaahaaaaaaaagabaaaafaaaaaadiaaaaaihcaabaaa
afaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaa
afaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaa
egacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaa
pgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaaahaaaaaa
dcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaah
hcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaa
agaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaagaaaaaaaagabaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaa
amaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
agiacaaaaaaaaaaaamaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaa
aaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaoaaaaahgcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaa
agaaaaaaaaaaaaakgcaabaaaabaaaaaafgagbaaaabaaaaaaaceaaaaaaaaaaaaa
aaaaaadpaaaaaadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaajgafbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaadbaaaaahccaabaaaabaaaaaaabeaaaaa
aaaaaaaackbabaaaagaaaaaaabaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaa
abeaaaaaaaaaiadpdiaaaaahccaabaaaabaaaaaadkaabaaaaeaaaaaabkaabaaa
abaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaakgakbaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
acaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaaeaaaaaa
aoaaaaahhcaabaaaaeaaaaaaegbcbaaaahaaaaaapgbpbaaaahaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaaeaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaa
dbaaaaahecaabaaaabaaaaaaakaabaaaafaaaaaackaabaaaaeaaaaaadhaaaaak
ecaabaaaabaaaaaackaabaaaabaaaaaaakiacaaaadaaaaaabiaaaaaaabeaaaaa
aaaaiadpapaaaaahccaabaaaabaaaaaafgafbaaaabaaaaaakgakbaaaabaaaaaa
diaaaaaiocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaa
diaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaiaaaaaaaagabaaa
aeaaaaaadcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaa
alaaaaaaegacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaa
aaaaaaaaakaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaa
aaaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 111 math, 10 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Vector 14 [_Glittercolor]
Float 15 [_Glitterymaskdotsscale]
Float 16 [_Glitteryspeed01]
Vector 17 [_Glittermap_ST]
Float 18 [_Glittercontrast13]
Float 19 [_Specularcontrast13]
Float 20 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"3.0-!!ARBfp1.0
OPTION ARB_fragment_program_shadow;
PARAM c[24] = { program.local[0..20],
		{ 2, 1, 0, 0.5 },
		{ 0.050000001, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[13], c[13].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[21].x, -c[21].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
ADD R0.w, -R0, c[21].y;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[16].x;
MUL R0.z, R0.w, -c[23].x;
MOV R5.xyz, c[14];
DP3 R1.w, fragment.texcoord[5], fragment.texcoord[5];
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R2.xy, R1, -c[16].x;
MAD R1.xy, R2, c[22].x, fragment.texcoord[0];
ADD R0.xy, R1, -c[21].w;
MUL R1.xy, R0.y, c[22].wyzw;
MAD R0.xy, R0.x, c[22].yzzw, R1;
ADD R0.xy, R0, c[21].w;
DP3 R1.z, R3, -R6;
ADD R0.z, R0, c[21].y;
MUL R0.xy, R0, c[15].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[20].x;
MAD R0.xyz, -R0, c[21].x, -R6;
MAD R2.zw, R1.xyxy, c[17].xyxy, c[17];
TEX R1.xyz, R0, texture[6], CUBE;
TEX R0.xyz, R2.zwzw, texture[5], 2D;
MUL R4.xyz, R1, c[12].x;
ADD R1.xyz, -R0, c[21].y;
MAD R0.z, R0.w, c[21].w, c[21].y;
MAD R2.xy, -R2, c[22].x, fragment.texcoord[0];
MUL R2.xy, R2, R0.z;
MAD R0.xy, fragment.texcoord[0], c[4], c[4].zwzw;
TEX R0.xyz, R0, texture[4], 2D;
MUL R2.xy, R2, c[15].x;
MAD R2.xy, R2, c[17], c[17].zwzw;
MAX R1.xyz, R1, R0;
TEX R2.xyz, R2, texture[5], 2D;
MUL R5.xyz, R5, c[10].x;
MUL R5.xyz, R5, R2;
MUL R2.xyz, R1, c[8].x;
MAD R1.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
ADD R6.xyz, R1, R6;
DP3 R0.w, R6, R6;
POW R5.x, R5.x, c[18].x;
POW R5.y, R5.y, c[18].x;
POW R5.z, R5.z, c[18].x;
MAD R7.xyz, R2, -R5, R5;
MAD R5.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R5.xyz, R5, texture[7], 2D;
MUL R5.xyz, R5, c[9].x;
POW R5.x, R5.x, c[19].x;
POW R5.z, R5.z, c[19].x;
POW R5.y, R5.y, c[19].x;
MAD R0.xyz, R0, -R5, R5;
ADD R5.xyz, R7, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R6;
DP3 R0.y, R3, R0;
MAX R0.z, R0.y, c[21];
RCP R0.x, fragment.texcoord[5].w;
MAD R0.xy, fragment.texcoord[5], R0.x, c[21].w;
TEX R0.w, R0, texture[1], 2D;
SLT R0.x, c[21].z, fragment.texcoord[5].z;
MUL R0.x, R0, R0.w;
TEX R1.w, R1.w, texture[2], 2D;
MUL R0.y, R0.x, R1.w;
MOV R0.x, c[23].y;
MOV R0.w, c[21].y;
ADD R1.w, R0, -c[2].x;
MUL R2.w, R0.x, c[5].x;
TXP R0.x, fragment.texcoord[6], texture[3], SHADOW2D;
MAD R0.x, R0, R1.w, c[2];
MUL R0.x, R0.y, R0;
ADD R1.w, R2, c[21].y;
EX2 R0.y, R1.w;
POW R1.w, R0.z, R0.y;
MUL R0.x, R0, c[21];
MUL R0.xyz, R0.x, c[3];
MUL R6.xyz, R0, R1.w;
ADD R5.xyz, R4, R5;
DP3 R1.w, R3, R1;
MAX R1.w, R1, c[21].z;
MUL R6.xyz, R6, R5;
MAD R7.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R5.xyz, R7, texture[8], 2D;
MAD R1.xyz, R5, c[11], R4;
ADD R0.w, R0, -c[8].x;
MAD R1.xyz, R0.w, R2, R1;
MUL R0.xyz, R1.w, R0;
MAD result.color.xyz, R0, R1, R6;
MOV result.color.w, c[21].z;
END
# 111 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 122 math, 10 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_LightColor0]
Vector 4 [_Mask_ST]
Float 5 [_Shininess]
Vector 6 [_MainTex_ST]
Vector 7 [_Specularglitter_ST]
Float 8 [_MasktransparencyDebug]
Float 9 [_Specularpower05]
Float 10 [_Glitterpower]
Vector 11 [_Color]
Float 12 [_Reflectioncubemappower]
Vector 13 [_Normalmap_ST]
Vector 14 [_Glittercolor]
Float 15 [_Glitterymaskdotsscale]
Float 16 [_Glitteryspeed01]
Vector 17 [_Glittermap_ST]
Float 18 [_Glittercontrast13]
Float 19 [_Specularcontrast13]
Float 20 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_cube s6
dcl_2d s7
dcl_2d s8
def c21, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c22, 0.50000000, 0.05000000, -0.50000000, 1.00000000
def c23, 0.00159374, -0.99999875, -0.00159374, 0
def c24, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
dcl_texcoord6 v6
mad r0.xy, v0, c13, c13.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c21.x, c21.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c21
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c16.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c22.y, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c22.z
mul r2.xy, r1.w, c23
mad r1.zw, r1.z, c23.xyyz, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c21.x, -r6
texld r2.xyz, r0, s6
add r1.zw, r1, c22.x
mov r0.z, c16.x
mad r0.w, r0.z, c22.x, c22
mad r1.xy, -r1, c22.y, v0
mul r1.xy, r1, r0.w
mov r0.z, c16.x
mul r0.xy, r1.zwzw, c15.x
mad r0.z, r0, c24.x, c24.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c15.x
mad r0.xy, r1, c17, c17.zwzw
mov r0.w, c10.x
mul r1.xyz, c14, r0.w
texld r0.xyz, r0, s5
mul r5.xyz, r1, r0
mul r1.xy, r3, c20.x
mad r3.xy, r1, c17, c17.zwzw
pow r0, r5.x, c18.x
mov r5.x, r0
pow r0, r5.z, c18.x
mad r1.xy, v0, c4, c4.zwzw
texld r3.xyz, r3, s5
mov r5.z, r0
mad r0.xy, v0, c7, c7.zwzw
texld r0.xyz, r0, s7
mul r9.xyz, r0, c9.x
pow r0, r9.x, c19.x
texld r1.xyz, r1, s4
add r3.xyz, -r3, c21.w
max r3.xyz, r3, r1
mul r7.xyz, r3, c8.x
pow r3, r5.y, c18.x
mov r5.y, r3
mad r3.xyz, -v1, c1.w, c1
dp3 r1.w, r3, r3
rsq r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul r5.xyz, r0.y, r3
pow r3, r9.y, c19.x
mov r9.x, r0
pow r0, r9.z, c19.x
mov r9.z, r0
add r0.xyz, r5, r6
mov r9.y, r3
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
dp3 r0.x, r4, r0
mad r1.xyz, r1, -r9, r9
add r1.xyz, r8, r1
mad r3.xyz, r2, c12.x, r1
mov r1.x, c5
mad r0.w, r1.x, c24.z, c24.y
exp r0.y, r0.w
max r0.x, r0, c21.z
pow r1, r0.x, r0.y
mov r0.x, c2
rcp r0.y, v5.w
mad r6.xy, v5, r0.y, c22.x
texld r0.w, r6, s1
add r0.z, c21.w, -r0.x
texldp r0.x, v6, s3
mad r0.z, r0.x, r0, c2.x
dp3 r0.x, v5, v5
cmp r0.y, -v5.z, c21.z, c21.w
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s2
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.x, r0, c21
mov r1.w, c8.x
mov r0.w, r1.x
mul r0.xyz, r0.x, c3
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c21.z
mul r3.xyz, r2, c12.x
mad r6.xy, v0, c6, c6.zwzw
texld r2.xyz, r6, s8
mad r2.xyz, r2, c11, r3
add r1.w, c21, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c21.z
"
}
SubProgram "d3d11 " {
// Stats: 95 math, 9 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
SetTexture 0 [_Normalmap] 2D 7
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 8
SetTexture 5 [_Reflectioncubemap] CUBE 6
SetTexture 6 [_Specularglitter] 2D 5
SetTexture 7 [_MainTex] 2D 4
SetTexture 8 [_ShadowMapTexture] 2D 0
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedhdeogppieapicmllkmbfkhggabolaameabaaaaaagabaaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apapaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaapapaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcbaapaaaaeaaaaaaameadaaaafjaaaaaeegiocaaa
aaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaiaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafkaaaaadaagabaaa
aiaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaa
ffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaa
ffffaaaafibiaaaeaahabaaaaiaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadpcbabaaaagaaaaaagcbaaaad
pcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaak
bcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaa
aaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaia
ebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaa
adaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaah
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaa
adaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaa
ogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaa
eghobaaaaeaaaaaaaagabaaaaiaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaa
aaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaa
bcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaa
aeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaa
apaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalkolpphplp
aaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaa
adaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaabkiacaia
ebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaah
dcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaa
adaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaa
adaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaa
bbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaaeaaaaaa
aagabaaaaiaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaadaaaaaaaagabaaa
adaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaa
diaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaa
egaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaafaaaaaadiaaaaaihcaabaaa
afaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaa
afaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaa
egacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaa
pgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaaahaaaaaa
dcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaah
hcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaa
agaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaafaaaaaaaagabaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaa
amaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
agiacaaaaaaaaaaaamaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaa
aaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaoaaaaahgcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaa
agaaaaaaaaaaaaakgcaabaaaabaaaaaafgagbaaaabaaaaaaaceaaaaaaaaaaaaa
aaaaaadpaaaaaadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaajgafbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaadbaaaaahccaabaaaabaaaaaaabeaaaaa
aaaaaaaackbabaaaagaaaaaaabaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaa
abeaaaaaaaaaiadpdiaaaaahccaabaaaabaaaaaadkaabaaaaeaaaaaabkaabaaa
abaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaakgakbaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
acaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaaeaaaaaa
aoaaaaahhcaabaaaaeaaaaaaegbcbaaaahaaaaaapgbpbaaaahaaaaaaehaaaaal
ecaabaaaabaaaaaaegaabaaaaeaaaaaaaghabaaaaiaaaaaaaagabaaaaaaaaaaa
ckaabaaaaeaaaaaaaaaaaaajicaabaaaabaaaaaaakiacaiaebaaaaaaadaaaaaa
biaaaaaaabeaaaaaaaaaiadpdcaaaaakecaabaaaabaaaaaackaabaaaabaaaaaa
dkaabaaaabaaaaaaakiacaaaadaaaaaabiaaaaaaapaaaaahccaabaaaabaaaaaa
fgafbaaaabaaaaaakgakbaaaabaaaaaadiaaaaaiocaabaaaabaaaaaafgafbaaa
abaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaaaeaaaaaaagaabaaa
abaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaa
jgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
aiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aeaaaaaaeghobaaaahaaaaaaaagabaaaaeaaaaaadcaaaaakhcaabaaaacaaaaaa
egacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaaegacbaaaacaaaaaaaaaaaaaj
icaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 101 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[20].y;
RSQ R0.w, R0.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[15].x;
MUL R0.z, R0.w, -c[22].x;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R2.xy, R1, -c[15].x;
MAD R1.xy, R2, c[20].w, fragment.texcoord[0];
ADD R0.xy, R1, -c[21].x;
MUL R1.xy, R0.y, c[21].wyzw;
MAD R0.xy, R0.x, c[21].yzzw, R1;
ADD R0.xy, R0, c[21].x;
DP3 R1.z, R3, -R6;
ADD R0.z, R0, c[20].y;
MUL R0.xy, R0, c[14].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[19].x;
MAD R0.xyz, -R0, c[20].x, -R6;
MAD R2.zw, R1.xyxy, c[16].xyxy, c[16];
TEX R1.xyz, R0, texture[4], CUBE;
TEX R0.xyz, R2.zwzw, texture[3], 2D;
MUL R5.xyz, R1, c[11].x;
ADD R1.xyz, -R0, c[20].y;
MUL R0.x, R0.w, c[21];
ADD R1.w, R0.x, c[20].y;
MAD R0.zw, -R2.xyxy, c[20].w, fragment.texcoord[0].xyxy;
MUL R2.xy, R0.zwzw, R1.w;
MAD R0.xy, fragment.texcoord[0], c[3], c[3].zwzw;
MUL R4.xy, R2, c[14].x;
TEX R0.xyz, R0, texture[2], 2D;
MAX R2.xyz, R1, R0;
MAD R1.xy, R4, c[16], c[16].zwzw;
MOV R4.xyz, c[13];
MUL R4.xyz, R4, c[9].x;
TEX R1.xyz, R1, texture[3], 2D;
MUL R1.xyz, R4, R1;
MUL R4.xyz, R2, c[7].x;
MAD R2.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R2;
ADD R6.xyz, R2, R6;
DP3 R0.w, R6, R6;
DP3 R1.w, R3, R2;
POW R1.x, R1.x, c[17].x;
POW R1.y, R1.y, c[17].x;
POW R1.z, R1.z, c[17].x;
MAD R7.xyz, R4, -R1, R1;
MAD R1.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R1.xyz, R1, texture[5], 2D;
MUL R1.xyz, R1, c[8].x;
POW R1.x, R1.x, c[18].x;
POW R1.z, R1.z, c[18].x;
POW R1.y, R1.y, c[18].x;
MAD R0.xyz, R0, -R1, R1;
ADD R0.xyz, R7, R0;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R6;
DP3 R1.x, R3, R1;
MAX R1.y, R1.x, c[20].z;
MOV R0.w, c[22].y;
MUL R0.w, R0, c[4].x;
ADD R0.w, R0, c[20].y;
EX2 R1.z, R0.w;
TXP R1.x, fragment.texcoord[5], texture[1], 2D;
MUL R0.w, R1.x, c[20].x;
POW R1.z, R1.y, R1.z;
MUL R6.xyz, R0.w, c[2];
MOV R0.w, c[20].y;
MAX R1.w, R1, c[20].z;
MUL R7.xyz, R6, R1.z;
ADD R0.xyz, R5, R0;
MAD R1.xy, fragment.texcoord[0], c[5], c[5].zwzw;
TEX R1.xyz, R1, texture[6], 2D;
MUL R0.xyz, R7, R0;
MAD R1.xyz, R1, c[10], R5;
ADD R0.w, R0, -c[7].x;
MAD R1.xyz, R0.w, R4, R1;
MUL R2.xyz, R1.w, R6;
MAD result.color.xyz, R2, R1, R0;
MOV result.color.w, c[20].z;
END
# 101 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 112 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_Mask] 2D 2
SetTexture 3 [_Glittermap] 2D 3
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 5
SetTexture 6 [_MainTex] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c22, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
mad r0.xy, v0, c12, c12.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c20.x, c20.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c20
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c15.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c21.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c21.y
mul r2.xy, r1.w, c21.zwzw
mad r1.zw, r1.z, c22.xyxy, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c20.x, -r6
texld r2.xyz, r0, s4
add r1.zw, r1, c22.z
mov r0.z, c15.x
mad r0.w, r0.z, c22.z, c22
mad r1.xy, -r1, c21.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c15.x
mul r0.xy, r1.zwzw, c14.x
mad r0.z, r0, c23.x, c23.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c14.x
mad r0.xy, r1, c16, c16.zwzw
mov r0.w, c9.x
mul r1.xyz, c13, r0.w
texld r0.xyz, r0, s3
mul r5.xyz, r1, r0
mul r1.xy, r3, c19.x
mad r3.xy, r1, c16, c16.zwzw
pow r0, r5.x, c17.x
mov r5.x, r0
pow r0, r5.z, c17.x
mad r1.xy, v0, c3, c3.zwzw
texld r3.xyz, r3, s3
texld r1.xyz, r1, s2
add r3.xyz, -r3, c20.w
max r3.xyz, r3, r1
mul r7.xyz, r3, c7.x
pow r3, r5.y, c17.x
mov r5.y, r3
mov r5.z, r0
mad_pp r3.xyz, -v1, c1.w, c1
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s5
mul r9.xyz, r0, c8.x
pow r0, r9.x, c18.x
dp3_pp r1.w, r3, r3
rsq_pp r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul_pp r5.xyz, r0.y, r3
pow r3, r9.y, c18.x
mov r9.x, r0
pow r0, r9.z, c18.x
mov r1.w, c7.x
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r1.xyz, r5, r6
add r0.xyz, r8, r0
dp3 r0.w, r1, r1
mad r3.xyz, r2, c11.x, r0
rsq r0.x, r0.w
mul r0.xyz, r0.x, r1
dp3 r0.x, r4, r0
mov r0.w, c4.x
mad r0.w, r0, c23.z, c23.y
exp r1.y, r0.w
max r1.x, r0, c20.z
pow r0, r1.x, r1.y
texldp r1.x, v5, s1
mov r0.w, r0.x
mul_pp r0.y, r1.x, c20.x
mul r0.xyz, r0.y, c2
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c20.z
mul r3.xyz, r2, c11.x
mad r6.xy, v0, c5, c5.zwzw
texld r2.xyz, r6, s6
mad r2.xyz, r2, c10, r3
add r1.w, c20, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 86 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
SetTexture 0 [_Normalmap] 2D 5
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [_Mask] 2D 1
SetTexture 3 [_Glittermap] 2D 6
SetTexture 4 [_Reflectioncubemap] CUBE 4
SetTexture 5 [_Specularglitter] 2D 3
SetTexture 6 [_MainTex] 2D 2
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefiecedjkmeniicchonlaaloohpcpnipmnbabnfabaaaaaaiiaoaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcfaanaaaaeaaaaaaafeadaaaa
fjaaaaaeegiocaaaaaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafidaaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadlcbabaaaagaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaa
aaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaa
aaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemln
aaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaa
abaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaa
egbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaa
afaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaa
egaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaa
aaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaa
aceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaa
egaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaaldcaabaaaaaaaaaaa
egaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaadaaaaaaaagabaaa
agaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaakaaaaaaegiccaaa
aaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaa
aaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaa
aceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaa
egaabaaaadaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaak
dcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaabaaaaaaa
abeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaa
abaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaa
kgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaa
egiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaa
adaaaaaaegaabaaaadaaaaaaeghobaaaadaaaaaaaagabaaaagaaaaaaaaaaaaal
hcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaaefaaaaajpcaabaaaaeaaaaaa
egaabaaaaeaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadeaaaaahhcaabaaa
adaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaa
egacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaal
dcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaa
aaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaa
afaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
diaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaabcaaaaaa
bjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaa
egacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaa
adaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
anaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaaaaaaaaaaagabaaaafaaaaaadcaaaaapdcaabaaaafaaaaaa
hgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaa
afaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaa
egbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaa
afaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaaj
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaa
abaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaia
ebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaa
egacbaaaacaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaaegacbaaaaaaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaamaaaaaa
dcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaa
acaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaa
aaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaa
abaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaoaaaaah
gcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaaagaaaaaaefaaaaajpcaabaaa
aeaaaaaajgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaaaaaaaaah
ccaabaaaabaaaaaaakaabaaaaeaaaaaaakaabaaaaeaaaaaadiaaaaaiocaabaaa
abaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
aeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaa
aeaaaaaaegaabaaaaeaaaaaaeghobaaaagaaaaaaaagabaaaacaaaaaadcaaaaak
hcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaaegacbaaa
acaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaa
abeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 103 math, 9 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"3.0-!!ARBfp1.0
PARAM c[23] = { program.local[0..19],
		{ 2, 1, 0, 0.050000001 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[12], c[12].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[20].x, -c[20].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[20].y;
RSQ R0.w, R0.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[15].x;
MUL R0.z, R0.w, -c[22].x;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R2.xy, R1, -c[15].x;
MAD R1.xy, R2, c[20].w, fragment.texcoord[0];
ADD R0.xy, R1, -c[21].x;
MUL R1.xy, R0.y, c[21].wyzw;
MAD R0.xy, R0.x, c[21].yzzw, R1;
ADD R0.xy, R0, c[21].x;
DP3 R1.z, R3, -R6;
ADD R0.z, R0, c[20].y;
MUL R0.xy, R0, c[14].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[19].x;
MAD R0.xyz, -R0, c[20].x, -R6;
MAD R2.zw, R1.xyxy, c[16].xyxy, c[16];
TEX R1.xyz, R0, texture[5], CUBE;
TEX R0.xyz, R2.zwzw, texture[4], 2D;
MUL R4.xyz, R1, c[11].x;
ADD R1.xyz, -R0, c[20].y;
MUL R0.x, R0.w, c[21];
ADD R1.w, R0.x, c[20].y;
MAD R0.zw, -R2.xyxy, c[20].w, fragment.texcoord[0].xyxy;
MUL R2.xy, R0.zwzw, R1.w;
MAD R0.xy, fragment.texcoord[0], c[3], c[3].zwzw;
MUL R5.xy, R2, c[14].x;
TEX R0.xyz, R0, texture[3], 2D;
MAX R2.xyz, R1, R0;
MAD R1.xy, R5, c[16], c[16].zwzw;
MOV R5.xyz, c[13];
MUL R5.xyz, R5, c[9].x;
TEX R1.xyz, R1, texture[4], 2D;
MUL R1.xyz, R5, R1;
POW R5.x, R1.x, c[17].x;
POW R5.y, R1.y, c[17].x;
POW R5.z, R1.z, c[17].x;
MUL R2.xyz, R2, c[7].x;
MAD R7.xyz, R2, -R5, R5;
MAD R1.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
ADD R6.xyz, R1, R6;
DP3 R1.x, R3, R1;
DP3 R0.w, R6, R6;
MAD R5.xy, fragment.texcoord[0], c[6], c[6].zwzw;
TEX R5.xyz, R5, texture[6], 2D;
MUL R5.xyz, R5, c[8].x;
POW R5.x, R5.x, c[18].x;
POW R5.z, R5.z, c[18].x;
POW R5.y, R5.y, c[18].x;
MAD R0.xyz, R0, -R5, R5;
ADD R0.xyz, R7, R0;
RSQ R0.w, R0.w;
ADD R5.xyz, R4, R0;
MUL R0.xyz, R0.w, R6;
DP3 R0.x, R3, R0;
MOV R0.w, c[22].y;
MUL R0.y, R0.w, c[4].x;
MAX R1.w, R0.x, c[20].z;
ADD R0.y, R0, c[20];
TEX R0.w, fragment.texcoord[5], texture[2], 2D;
TXP R0.x, fragment.texcoord[6], texture[1], 2D;
MUL R0.x, R0.w, R0;
EX2 R0.w, R0.y;
MUL R0.xyz, R0.x, c[2];
MUL R6.xyz, R0, c[20].x;
POW R0.w, R1.w, R0.w;
MUL R7.xyz, R6, R0.w;
MAD R0.xy, fragment.texcoord[0], c[5], c[5].zwzw;
TEX R0.xyz, R0, texture[7], 2D;
MOV R0.w, c[20].y;
MAX R1.x, R1, c[20].z;
MUL R5.xyz, R7, R5;
MAD R0.xyz, R0, c[10], R4;
ADD R0.w, R0, -c[7].x;
MAD R0.xyz, R0.w, R2, R0;
MUL R1.xyz, R1.x, R6;
MAD result.color.xyz, R1, R0, R5;
MOV result.color.w, c[20].z;
END
# 103 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 113 math, 9 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightColor0]
Vector 3 [_Mask_ST]
Float 4 [_Shininess]
Vector 5 [_MainTex_ST]
Vector 6 [_Specularglitter_ST]
Float 7 [_MasktransparencyDebug]
Float 8 [_Specularpower05]
Float 9 [_Glitterpower]
Vector 10 [_Color]
Float 11 [_Reflectioncubemappower]
Vector 12 [_Normalmap_ST]
Vector 13 [_Glittercolor]
Float 14 [_Glitterymaskdotsscale]
Float 15 [_Glitteryspeed01]
Vector 16 [_Glittermap_ST]
Float 17 [_Glittercontrast13]
Float 18 [_Specularcontrast13]
Float 19 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_cube s5
dcl_2d s6
dcl_2d s7
def c20, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c21, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c22, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c23, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xy
dcl_texcoord6 v6
mad r0.xy, v0, c12, c12.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c20.x, c20.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c20
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c15.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c21.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c21.y
mul r2.xy, r1.w, c21.zwzw
mad r1.zw, r1.z, c22.xyxy, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c20.x, -r6
texld r2.xyz, r0, s5
add r1.zw, r1, c22.z
mov r0.z, c15.x
mad r0.w, r0.z, c22.z, c22
mad r1.xy, -r1, c21.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c15.x
mul r0.xy, r1.zwzw, c14.x
mad r0.z, r0, c23.x, c23.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c14.x
mad r0.xy, r1, c16, c16.zwzw
mov r0.w, c9.x
mul r1.xyz, c13, r0.w
texld r0.xyz, r0, s4
mul r5.xyz, r1, r0
mul r1.xy, r3, c19.x
mad r3.xy, r1, c16, c16.zwzw
pow r0, r5.x, c17.x
mov r5.x, r0
pow r0, r5.z, c17.x
mad r1.xy, v0, c3, c3.zwzw
texld r3.xyz, r3, s4
texld r1.xyz, r1, s3
add r3.xyz, -r3, c20.w
max r3.xyz, r3, r1
mul r7.xyz, r3, c7.x
pow r3, r5.y, c17.x
mov r5.y, r3
mov r5.z, r0
mad_pp r3.xyz, -v1, c1.w, c1
mad r0.xy, v0, c6, c6.zwzw
texld r0.xyz, r0, s6
mul r9.xyz, r0, c8.x
pow r0, r9.x, c18.x
dp3_pp r1.w, r3, r3
rsq_pp r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul_pp r5.xyz, r0.y, r3
pow r3, r9.y, c18.x
mov r9.x, r0
pow r0, r9.z, c18.x
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r1.xyz, r5, r6
add r0.xyz, r8, r0
mad r3.xyz, r2, c11.x, r0
dp3 r0.w, r1, r1
rsq r0.x, r0.w
mul r0.xyz, r0.x, r1
dp3 r0.x, r4, r0
mov r0.w, c4.x
mad r0.w, r0, c23.z, c23.y
exp r0.y, r0.w
max r0.x, r0, c20.z
pow r1, r0.x, r0.y
mov r1.w, c7.x
texld r0.w, v5, s2
texldp r0.x, v6, s1
mul r0.x, r0.w, r0
mul r0.xyz, r0.x, c2
mov r0.w, r1.x
mul r0.xyz, r0, c20.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c20.z
mul r3.xyz, r2, c11.x
mad r6.xy, v0, c5, c5.zwzw
texld r2.xyz, r6, s7
mad r2.xyz, r2, c10, r3
add r1.w, c20, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c20.z
"
}
SubProgram "d3d11 " {
// Stats: 86 math, 9 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
SetTexture 0 [_Normalmap] 2D 6
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 0
SetTexture 3 [_Mask] 2D 2
SetTexture 4 [_Glittermap] 2D 7
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 4
SetTexture 7 [_MainTex] 2D 3
ConstBuffer "$Globals" 368
Vector 144 [_LightColor0]
Vector 160 [_Mask_ST]
Float 176 [_Shininess]
Vector 192 [_MainTex_ST]
Vector 208 [_Specularglitter_ST]
Float 224 [_MasktransparencyDebug]
Float 228 [_Specularpower05]
Float 232 [_Glitterpower]
Vector 240 [_Color]
Float 256 [_Reflectioncubemappower]
Vector 272 [_Normalmap_ST]
Vector 304 [_Glittercolor]
Float 320 [_Glitterymaskdotsscale]
Float 324 [_Glitteryspeed01]
Vector 336 [_Glittermap_ST]
Float 352 [_Glittercontrast13]
Float 356 [_Specularcontrast13]
Float 360 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
"ps_4_0
eefiecedepkhgmhbleffnokjdinckljdgjlojddhabaaaaaaomaoaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapahaaaaneaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaaadaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaa
ahahaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaagaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcjmanaaaaeaaaaaaaghadaaaafjaaaaaeegiocaaa
aaaaaaaabhaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafkaaaaad
aagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafidaaaaeaahabaaa
afaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaa
ahaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadlcbabaaaagaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaakbcaabaaaaaaaaaaabkiacaaa
aaaaaaaabeaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaalgcaabaaa
aaaaaaaafgifcaaaaaaaaaaabeaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemln
aaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaa
abaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaadaaaaaa
egbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaahccaabaaaadaaaaaaegbcbaaa
afaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaaadaaaaaafgakbaaaaaaaaaaa
egaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaahdcaabaaaaaaaaaaaagaabaaa
aaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaaadaaaaaaogakbaaaadaaaaaa
aceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaa
egaabaaaaaaaaaaaagiacaaaaaaaaaaabeaaaaaadcaaaaaldcaabaaaaaaaaaaa
egaabaaaaaaaaaaaegiacaaaaaaaaaaabfaaaaaaogikcaaaaaaaaaaabfaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaa
ahaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaaaaaaaaaaaoaaaaaaegiccaaa
aaaaaaaabdaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaa
aaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaabgaaaaaabjaaaaafhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaaaeaaaaaaegaabaaaadaaaaaa
aceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaaapaaaaakccaabaaaaeaaaaaa
egaabaaaadaaaaaaaceaaaaaallnnalkolpphplpaaaaaaaaaaaaaaaaaaaaaaak
dcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaaagiacaaaaaaaaaaa
beaaaaaadcaaaaalicaabaaaabaaaaaabkiacaiaebaaaaaaaaaaaaaabeaaaaaa
abeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaahdcaabaaaadaaaaaapgapbaaa
abaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaaadaaaaaa
kgikcaaaaaaaaaaabgaaaaaadcaaaaaldcaabaaaadaaaaaaegaabaaaadaaaaaa
egiacaaaaaaaaaaabfaaaaaaogikcaaaaaaaaaaabfaaaaaaefaaaaajpcaabaaa
adaaaaaaegaabaaaadaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaaaaaaaaal
hcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaaefaaaaajpcaabaaaaeaaaaaa
egaabaaaaeaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadeaaaaahhcaabaaa
adaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaa
egacbaaaadaaaaaaagiacaaaaaaaaaaaaoaaaaaadcaaaaakhcaabaaaaaaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaal
dcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaa
aaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaa
agaaaaaaaagabaaaaeaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaaaoaaaaaacpaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
diaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaabgaaaaaa
bjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaa
egacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaaegacbaaaafaaaaaaaaaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegbcbaaa
adaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaa
bbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaa
afaaaaaaeghobaaaaaaaaaaaaagabaaaagaaaaaadcaaaaapdcaabaaaafaaaaaa
hgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaahhcaabaaaagaaaaaafgafbaaa
afaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaaagaaaaaaagaabaaaafaaaaaa
egbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaa
afaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaaj
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaapgapbaaa
abaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaaeaaaaaapgapbaia
ebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaa
egacbaaaacaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaabaaaaaaaegacbaaaaaaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaaaaaaaaaaegbcbaiaebaaaaaa
acaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaaafaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaafaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaafaaaaaadeaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaeaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaakccaabaaaabaaaaaaakiacaaa
aaaaaaaaalaaaaaaabeaaaaaaaaacaebabeaaaaaaaaaiadpbjaaaaafccaabaaa
abaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaoaaaaah
gcaabaaaabaaaaaaagbbbaaaagaaaaaapgbpbaaaagaaaaaaefaaaaajpcaabaaa
aeaaaaaajgafbaaaabaaaaaaeghobaaaacaaaaaaaagabaaaaaaaaaaaefaaaaaj
pcaabaaaafaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaa
apaaaaahccaabaaaabaaaaaapgapbaaaafaaaaaaagaabaaaaeaaaaaadiaaaaai
ocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
hcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaahaaaaaaaagabaaaadaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaapaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaa
aoaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 111 math, 9 textures
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"3.0-!!ARBfp1.0
PARAM c[26] = { program.local[0..21],
		{ 2, 1, 0, 0.97000003 },
		{ 1, 0.0039215689, 1.53787e-005, 6.0308629e-008 },
		{ 0.050000001, 0.5, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[14], c[14].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[22].x, -c[22].y;
MUL R0.xyz, R2.y, fragment.texcoord[4];
ADD R1.xyz, -fragment.texcoord[1], c[0];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R2.x, R2, R2.y;
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
ADD R2.x, -R2, c[22].y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
MOV R6.xyz, c[15];
MAD R7.xy, fragment.texcoord[0], c[8], c[8].zwzw;
TEX R7.xyz, R7, texture[6], 2D;
MUL R7.xyz, R7, c[10].x;
MUL R1.xyz, R0.w, R1;
RSQ R2.w, R2.x;
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R1.w, R2.w;
MAD R0.xyz, R1.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
DP3 R1.w, R0, -R1;
DP3 R2.x, fragment.texcoord[3], R1;
DP3 R2.y, fragment.texcoord[4], R1;
MUL R4.xy, R2, -c[17].x;
MAD R2.xy, R4, c[24].x, fragment.texcoord[0];
ADD R2.zw, R2.xyxy, -c[24].y;
MUL R2.xy, R2.w, c[25];
MAD R2.zw, R2.z, c[24], R2.xyxy;
MOV R0.w, c[17].x;
MUL R2.x, R0.w, -c[25].z;
ADD R2.zw, R2, c[24].y;
MUL R0.w, R0, c[24].y;
MUL R2.zw, R2, c[16].x;
ADD R2.x, R2, c[22].y;
MUL R3.xy, R2.zwzw, R2.x;
MUL R2.xyz, R0, R1.w;
MUL R3.xy, R3, c[21].x;
MAD R2.xyz, -R2, c[22].x, -R1;
MAD R4.zw, R3.xyxy, c[18].xyxy, c[18];
TEX R3.xyz, R2, texture[5], CUBE;
TEX R2.xyz, R4.zwzw, texture[4], 2D;
MAD R4.zw, -R4.xyxy, c[24].x, fragment.texcoord[0].xyxy;
ADD R0.w, R0, c[22].y;
MAD R4.xy, fragment.texcoord[0], c[5], c[5].zwzw;
MUL R4.zw, R4, R0.w;
TEX R5.xyz, R4, texture[3], 2D;
MUL R4.xy, R4.zwzw, c[16].x;
ADD R2.xyz, -R2, c[22].y;
MAX R2.xyz, R2, R5;
MAD R4.xy, R4, c[18], c[18].zwzw;
MUL R2.xyz, R2, c[9].x;
MUL R3.xyz, R3, c[13].x;
TEX R4.xyz, R4, texture[4], 2D;
MUL R6.xyz, R6, c[11].x;
MUL R6.xyz, R6, R4;
MAD R4.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R4, R4;
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R4;
ADD R1.xyz, R4, R1;
DP3 R0.w, R1, R1;
POW R7.x, R7.x, c[20].x;
POW R7.y, R7.y, c[20].x;
POW R7.z, R7.z, c[20].x;
MAD R5.xyz, R5, -R7, R7;
RSQ R0.w, R0.w;
DP3 R1.w, fragment.texcoord[6], fragment.texcoord[6];
MOV R3.w, c[25];
POW R6.x, R6.x, c[19].x;
POW R6.y, R6.y, c[19].x;
POW R6.z, R6.z, c[19].x;
MAD R6.xyz, R2, -R6, R6;
ADD R5.xyz, R6, R5;
MUL R6.xyz, R0.w, R1;
DP3 R0.w, R0, R6;
ADD R1.xyz, R3, R5;
MAX R2.w, R0, c[22].z;
RSQ R0.w, R1.w;
RCP R1.w, R0.w;
TEX R5, fragment.texcoord[6], texture[1], CUBE;
DP4 R0.w, R5, c[23];
MUL R1.w, R1, c[2];
MAD R1.w, -R1, c[22], R0;
MOV R0.w, c[22].y;
CMP R4.w, R1, c[3].x, R0;
MUL R1.w, R3, c[6].x;
DP3 R5.x, fragment.texcoord[5], fragment.texcoord[5];
ADD R3.w, R1, c[22].y;
TEX R1.w, R5.x, texture[2], 2D;
MUL R4.w, R1, R4;
EX2 R1.w, R3.w;
MUL R5.xyz, R4.w, c[4];
POW R1.w, R2.w, R1.w;
MUL R5.xyz, R5, c[22].x;
MUL R6.xyz, R5, R1.w;
DP3 R1.w, R0, R4;
MUL R1.xyz, R6, R1;
MAD R7.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R6.xyz, R7, texture[7], 2D;
MAD R0.xyz, R6, c[12], R3;
ADD R0.w, R0, -c[9].x;
MAD R0.xyz, R0.w, R2, R0;
MAX R1.w, R1, c[22].z;
MUL R2.xyz, R1.w, R5;
MAD result.color.xyz, R2, R0, R1;
MOV result.color.w, c[22].z;
END
# 111 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 122 math, 9 textures
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"ps_3_0
dcl_2d s0
dcl_cube s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_cube s5
dcl_2d s6
dcl_2d s7
def c22, 2.00000000, -1.00000000, 0.00000000, 0.97000003
def c23, 1.00000000, 0.00392157, 0.00001538, 0.00000006
def c24, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c25, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c26, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xyz
dcl_texcoord6 v6.xyz
mad r0.xy, v0, c14, c14.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c22.x, c22.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r3.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c23.x
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r3
dp3 r0.y, v4, r3
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c17.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c24.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c24.y
mul r2.xy, r1.w, c24.zwzw
mad r1.zw, r1.z, c25.xyxy, r2.xyxy
dp3 r0.x, r4, -r3
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c22.x, -r3
texld r2.xyz, r0, s5
add r1.zw, r1, c25.z
mov r0.z, c17.x
mad r0.w, r0.z, c25.z, c25
mad r1.xy, -r1, c24.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c17.x
mul r0.xy, r1.zwzw, c16.x
mad r0.z, r0, c26.x, c26.y
mul r5.xy, r0, r0.z
mul r1.xy, r1, c16.x
mad r0.xy, r1, c18, c18.zwzw
mov r0.w, c11.x
mul r1.xyz, c15, r0.w
texld r0.xyz, r0, s4
mul r7.xyz, r1, r0
mul r1.xy, r5, c21.x
mad r5.xy, r1, c18, c18.zwzw
pow r0, r7.x, c19.x
mov r7.x, r0
pow r0, r7.z, c19.x
mad r1.xy, v0, c5, c5.zwzw
texld r5.xyz, r5, s4
texld r1.xyz, r1, s3
add r5.xyz, -r5, c23.x
max r5.xyz, r5, r1
mul r6.xyz, r5, c9.x
pow r5, r7.y, c19.x
mov r7.y, r5
mov r7.z, r0
mad r5.xyz, -v1, c1.w, c1
dp3 r0.w, r5, r5
rsq r1.w, r0.w
mad r0.xy, v0, c8, c8.zwzw
texld r0.xyz, r0, s6
mul r9.xyz, r0, c10.x
pow r0, r9.x, c20.x
mov r9.x, r0
pow r0, r9.z, c20.x
mul r5.xyz, r1.w, r5
mad r8.xyz, r6, -r7, r7
add r7.xyz, r5, r3
pow r3, r9.y, c20.x
dp3 r0.w, r7, r7
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r0.xyz, r8, r0
mad r3.xyz, r2, c13.x, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r7
dp3 r0.x, r4, r0
max r0.y, r0.x, c22.z
mov r0.w, c6.x
mad r0.z, r0.w, c26, c26.y
exp r0.z, r0.z
pow r1, r0.y, r0.z
dp3 r0.x, v6, v6
rsq r1.y, r0.x
texld r0, v6, s1
dp4 r0.y, r0, c23
rcp r1.y, r1.y
mul r0.x, r1.y, c2.w
mad r0.y, -r0.x, c22.w, r0
mov r0.z, c3.x
dp3 r0.x, v5, v5
mov r1.w, c9.x
mov r0.w, r1.x
cmp r0.y, r0, c23.x, r0.z
texld r0.x, r0.x, s2
mul r0.x, r0, r0.y
mul r0.xyz, r0.x, c4
mul r0.xyz, r0, c22.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c22.z
mul r3.xyz, r2, c13.x
mad r7.xy, v0, c7, c7.zwzw
texld r2.xyz, r7, s7
mad r2.xyz, r2, c12, r3
add r1.w, c23.x, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c22.z
"
}
SubProgram "d3d11 " {
// Stats: 92 math, 9 textures
Keywords { "POINT" "SHADOWS_CUBE" }
SetTexture 0 [_Normalmap] 2D 6
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_ShadowMapTexture] CUBE 0
SetTexture 3 [_Mask] 2D 2
SetTexture 4 [_Glittermap] 2D 7
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 4
SetTexture 7 [_MainTex] 2D 3
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedkaejcgfdalccideacildhajeokkadmciabaaaaaaneapaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcieaoaaaaeaaaaaaakbadaaaafjaaaaaeegiocaaa
aaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafidaaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaa
agaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaa
gcbaaaadhcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
bbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaa
aaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
aeaaaaaaaagabaaaahaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaadaaaaaa
aagabaaaacaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
akaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaaeaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
agaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaafaaaaaa
aagabaaaafaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaa
acaaaaaaaaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aeaaaaaaegacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaakccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaeb
abeaaaaaaaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaahaaaaaa
egbcbaaaahaaaaaaelaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaai
ccaabaaaabaaaaaabkaabaaaabaaaaaadkiacaaaacaaaaaaabaaaaaadiaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaomfbhidpefaaaaajpcaabaaa
aeaaaaaaegbcbaaaahaaaaaaeghobaaaacaaaaaaaagabaaaaaaaaaaabbaaaaak
ecaabaaaabaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdh
afidibdddbaaaaahccaabaaaabaaaaaackaabaaaabaaaaaabkaabaaaabaaaaaa
dhaaaaakccaabaaaabaaaaaabkaabaaaabaaaaaaakiacaaaadaaaaaabiaaaaaa
abeaaaaaaaaaiadpbaaaaaahecaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaakgakbaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaabaaaaaaapaaaaahccaabaaaabaaaaaaagaabaaaaeaaaaaafgafbaaa
abaaaaaadiaaaaaiocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaa
afaaaaaadiaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaa
aiaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaahaaaaaa
aagabaaaadaaaaaadcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaa
aaaaaaaaalaaaaaaegacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaia
ebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaa
pgapbaaaaaaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 113 math, 10 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_LightTexture0] CUBE 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"3.0-!!ARBfp1.0
PARAM c[26] = { program.local[0..21],
		{ 2, 1, 0, 0.97000003 },
		{ 1, 0.0039215689, 1.53787e-005, 6.0308629e-008 },
		{ 0.050000001, 0.5, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[14], c[14].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[22].x, -c[22].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[22].y;
RSQ R0.w, R0.w;
MOV R5.xyz, c[15];
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R0;
MOV R0.w, c[17].x;
MUL R0.z, R0.w, -c[25];
MUL R0.w, R0, c[24].y;
DP3 R2.w, R2, -R6;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R1.xy, R1, -c[17].x;
MAD R1.zw, R1.xyxy, c[24].x, fragment.texcoord[0].xyxy;
ADD R0.xy, R1.zwzw, -c[24].y;
MUL R1.zw, R0.y, c[25].xyxy;
MAD R0.xy, R0.x, c[24].zwzw, R1.zwzw;
ADD R0.xy, R0, c[24].y;
ADD R0.z, R0, c[22].y;
MUL R0.xy, R0, c[16].x;
MUL R1.zw, R0.xyxy, R0.z;
MUL R0.xyz, R2, R2.w;
MAD R0.xyz, -R0, c[22].x, -R6;
TEX R3.xyz, R0, texture[6], CUBE;
MUL R1.zw, R1, c[21].x;
MAD R1.zw, R1, c[18].xyxy, c[18];
TEX R0.xyz, R1.zwzw, texture[5], 2D;
MAD R1.zw, fragment.texcoord[0].xyxy, c[5].xyxy, c[5];
TEX R4.xyz, R1.zwzw, texture[4], 2D;
ADD R0.xyz, -R0, c[22].y;
MAX R0.xyz, R0, R4;
MUL R3.xyz, R3, c[13].x;
ADD R0.w, R0, c[22].y;
MAD R1.xy, -R1, c[24].x, fragment.texcoord[0];
MUL R1.xy, R1, R0.w;
MUL R1.xy, R1, c[16].x;
MAD R1.xy, R1, c[18], c[18].zwzw;
TEX R1.xyz, R1, texture[5], 2D;
MUL R5.xyz, R5, c[11].x;
MUL R5.xyz, R5, R1;
MUL R1.xyz, R0, c[9].x;
MAD R0.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
ADD R6.xyz, R0, R6;
DP3 R0.w, R6, R6;
POW R5.x, R5.x, c[19].x;
POW R5.y, R5.y, c[19].x;
POW R5.z, R5.z, c[19].x;
MAD R7.xyz, R1, -R5, R5;
MAD R5.xy, fragment.texcoord[0], c[8], c[8].zwzw;
TEX R5.xyz, R5, texture[7], 2D;
MUL R5.xyz, R5, c[10].x;
POW R5.x, R5.x, c[20].x;
POW R5.z, R5.z, c[20].x;
POW R5.y, R5.y, c[20].x;
MAD R4.xyz, R4, -R5, R5;
ADD R5.xyz, R7, R4;
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R6;
DP3 R1.w, R2, R4;
DP3 R0.w, fragment.texcoord[6], fragment.texcoord[6];
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
TEX R4, fragment.texcoord[6], texture[1], CUBE;
MAX R3.w, R1, c[22].z;
DP4 R1.w, R4, c[23];
MUL R0.w, R0, c[2];
MAD R1.w, -R0, c[22], R1;
MOV R2.w, c[22].y;
CMP R4.x, R1.w, c[3], R2.w;
MOV R0.w, c[25];
MUL R4.y, R0.w, c[6].x;
DP3 R1.w, fragment.texcoord[5], fragment.texcoord[5];
ADD R5.xyz, R3, R5;
TEX R1.w, R1.w, texture[2], 2D;
TEX R0.w, fragment.texcoord[5], texture[3], CUBE;
MUL R0.w, R1, R0;
ADD R1.w, R4.y, c[22].y;
MUL R0.w, R0, R4.x;
MUL R4.xyz, R0.w, c[4];
EX2 R1.w, R1.w;
POW R0.w, R3.w, R1.w;
MUL R4.xyz, R4, c[22].x;
MUL R6.xyz, R4, R0.w;
DP3 R0.w, R2, R0;
MUL R6.xyz, R6, R5;
MAD R7.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R5.xyz, R7, texture[8], 2D;
MAD R0.xyz, R5, c[12], R3;
ADD R1.w, R2, -c[9].x;
MAD R0.xyz, R1.w, R1, R0;
MAX R0.w, R0, c[22].z;
MUL R1.xyz, R0.w, R4;
MAD result.color.xyz, R1, R0, R6;
MOV result.color.w, c[22].z;
END
# 113 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 123 math, 10 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_LightTexture0] CUBE 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"ps_3_0
dcl_2d s0
dcl_cube s1
dcl_2d s2
dcl_cube s3
dcl_2d s4
dcl_2d s5
dcl_cube s6
dcl_2d s7
dcl_2d s8
def c22, 2.00000000, -1.00000000, 0.00000000, 0.97000003
def c23, 1.00000000, 0.00392157, 0.00001538, 0.00000006
def c24, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c25, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c26, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xyz
dcl_texcoord6 v6.xyz
mad r0.xy, v0, c14, c14.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c22.x, c22.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r6.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c23.x
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r6
dp3 r0.y, v4, r6
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c17.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c24.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c24.y
mul r2.xy, r1.w, c24.zwzw
mad r1.zw, r1.z, c25.xyxy, r2.xyxy
dp3 r0.x, r4, -r6
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c22.x, -r6
texld r2.xyz, r0, s6
add r1.zw, r1, c25.z
mov r0.z, c17.x
mad r0.w, r0.z, c25.z, c25
mad r1.xy, -r1, c24.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c17.x
mul r0.xy, r1.zwzw, c16.x
mad r0.z, r0, c26.x, c26.y
mul r3.xy, r0, r0.z
mul r1.xy, r1, c16.x
mad r0.xy, r1, c18, c18.zwzw
mov r0.w, c11.x
mul r1.xyz, c15, r0.w
texld r0.xyz, r0, s5
mul r5.xyz, r1, r0
mul r1.xy, r3, c21.x
mad r3.xy, r1, c18, c18.zwzw
pow r0, r5.x, c19.x
mov r5.x, r0
pow r0, r5.z, c19.x
mad r1.xy, v0, c5, c5.zwzw
texld r3.xyz, r3, s5
mov r5.z, r0
mad r0.xy, v0, c8, c8.zwzw
texld r0.xyz, r0, s7
mul r9.xyz, r0, c10.x
pow r0, r9.x, c20.x
texld r1.xyz, r1, s4
add r3.xyz, -r3, c23.x
max r3.xyz, r3, r1
mul r7.xyz, r3, c9.x
pow r3, r5.y, c19.x
mov r5.y, r3
mad r3.xyz, -v1, c1.w, c1
dp3 r1.w, r3, r3
rsq r0.y, r1.w
mad r8.xyz, r7, -r5, r5
mul r5.xyz, r0.y, r3
pow r3, r9.y, c20.x
mov r9.x, r0
pow r0, r9.z, c20.x
mov r9.z, r0
add r0.xyz, r5, r6
mov r9.y, r3
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0.w, r0
dp3 r0.x, r4, r0
mad r1.xyz, r1, -r9, r9
add r1.xyz, r8, r1
mad r3.xyz, r2, c13.x, r1
mov r1.x, c6
mad r0.w, r1.x, c26.z, c26.y
exp r0.y, r0.w
max r0.x, r0, c22.z
pow r1, r0.x, r0.y
texld r0, v6, s1
dp4 r0.y, r0, c23
dp3 r1.y, v6, v6
rsq r1.y, r1.y
rcp r0.x, r1.y
mul r0.x, r0, c2.w
mov r1.w, c9.x
mad r0.x, -r0, c22.w, r0.y
mov r0.z, c3.x
cmp r0.y, r0.x, c23.x, r0.z
dp3 r0.x, v5, v5
texld r0.w, v5, s3
texld r0.x, r0.x, s2
mul r0.x, r0, r0.w
mul r0.x, r0, r0.y
mul r0.xyz, r0.x, c4
mov r0.w, r1.x
mul r0.xyz, r0, c22.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c22.z
mul r3.xyz, r2, c13.x
mad r6.xy, v0, c7, c7.zwzw
texld r2.xyz, r6, s8
mad r2.xyz, r2, c12, r3
add r1.w, c23.x, -r1
mad r2.xyz, r1.w, r7, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c22.z
"
}
SubProgram "d3d11 " {
// Stats: 93 math, 10 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
SetTexture 0 [_Normalmap] 2D 7
SetTexture 1 [_LightTextureB0] 2D 2
SetTexture 2 [_LightTexture0] CUBE 1
SetTexture 3 [_ShadowMapTexture] CUBE 0
SetTexture 4 [_Mask] 2D 3
SetTexture 5 [_Glittermap] 2D 8
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 5
SetTexture 8 [_MainTex] 2D 4
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedgmcapjmlnfbjnjdbmkmpdcpmkekdpooaabaaaaaadabaaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcoaaoaaaaeaaaaaaaliadaaaafjaaaaaeegiocaaa
aaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafkaaaaadaagabaaa
aiaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafidaaaaeaahabaaaacaaaaaaffffaaaafidaaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafidaaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaa
ffffaaaafibiaaaeaahabaaaaiaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaagcbaaaad
hcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaak
bcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaa
aaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaia
ebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaa
adaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaah
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaa
adaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaa
ogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaa
eghobaaaafaaaaaaaagabaaaaiaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaa
aaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaa
bcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaa
aeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaa
apaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalkolpphplp
aaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaa
adaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaabkiacaia
ebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaah
dcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaa
adaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaa
adaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaa
bbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaafaaaaaa
aagabaaaaiaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaa
adaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaa
diaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaa
egaabaaaafaaaaaaeghobaaaahaaaaaaaagabaaaafaaaaaadiaaaaaihcaabaaa
afaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaa
afaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaa
egacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaa
pgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaaahaaaaaa
dcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaah
hcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaa
agaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaagaaaaaaaagabaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaa
amaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
agiacaaaaaaaaaaaamaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaa
aaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaahaaaaaaegbcbaaa
ahaaaaaaelaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaa
abaaaaaabkaabaaaabaaaaaadkiacaaaacaaaaaaabaaaaaadiaaaaahccaabaaa
abaaaaaabkaabaaaabaaaaaaabeaaaaaomfbhidpefaaaaajpcaabaaaaeaaaaaa
egbcbaaaahaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaabbaaaaakecaabaaa
abaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhafidibdd
dbaaaaahccaabaaaabaaaaaackaabaaaabaaaaaabkaabaaaabaaaaaadhaaaaak
ccaabaaaabaaaaaabkaabaaaabaaaaaaakiacaaaadaaaaaabiaaaaaaabeaaaaa
aaaaiadpbaaaaaahecaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaakgakbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
acaaaaaaefaaaaajpcaabaaaafaaaaaaegbcbaaaagaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadiaaaaahecaabaaaabaaaaaaakaabaaaaeaaaaaadkaabaaa
afaaaaaaapaaaaahccaabaaaabaaaaaakgakbaaaabaaaaaafgafbaaaabaaaaaa
diaaaaaiocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaa
diaaaaahhcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaiaaaaaaaagabaaa
aeaaaaaadcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaa
alaaaaaaegacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaa
aaaaaaaaakaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaa
aaaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 123 math, 13 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_ShadowOffsets0]
Vector 4 [_ShadowOffsets1]
Vector 5 [_ShadowOffsets2]
Vector 6 [_ShadowOffsets3]
Vector 7 [_LightColor0]
Vector 8 [_Mask_ST]
Float 9 [_Shininess]
Vector 10 [_MainTex_ST]
Vector 11 [_Specularglitter_ST]
Float 12 [_MasktransparencyDebug]
Float 13 [_Specularpower05]
Float 14 [_Glitterpower]
Vector 15 [_Color]
Float 16 [_Reflectioncubemappower]
Vector 17 [_Normalmap_ST]
Vector 18 [_Glittercolor]
Float 19 [_Glitterymaskdotsscale]
Float 20 [_Glitteryspeed01]
Vector 21 [_Glittermap_ST]
Float 22 [_Glittercontrast13]
Float 23 [_Specularcontrast13]
Float 24 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"3.0-!!ARBfp1.0
PARAM c[28] = { program.local[0..24],
		{ 2, 1, 0, 0.5 },
		{ 0.25, 0.050000001, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[17], c[17].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[25].x, -c[25].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R2.x, R2, R2.y;
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R1;
ADD R2.x, -R2, c[25].y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
MOV R6.xyz, c[18];
MAD R7.xy, fragment.texcoord[0], c[11], c[11].zwzw;
TEX R7.xyz, R7, texture[7], 2D;
MUL R7.xyz, R7, c[13].x;
RSQ R2.w, R2.x;
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R1.w, R2.w;
MAD R0.xyz, R1.w, R2, R0;
DP3 R0.w, R0, R0;
DP3 R1.x, fragment.texcoord[3], R4;
DP3 R1.y, fragment.texcoord[4], R4;
MUL R2.xy, R1, -c[20].x;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R0;
MAD R2.zw, R2.xyxy, c[26].y, fragment.texcoord[0].xyxy;
ADD R0.zw, R2, -c[25].w;
MUL R2.zw, R0.w, c[27].xyxy;
MOV R0.w, c[20].x;
MUL R0.y, R0.w, -c[27].z;
MAD R2.zw, R0.z, c[26], R2;
ADD R2.zw, R2, c[25].w;
DP3 R0.x, R1, -R4;
ADD R0.y, R0, c[25];
MUL R2.zw, R2, c[19].x;
MUL R2.zw, R2, R0.y;
MUL R0.xyz, R1, R0.x;
MAD R0.xyz, -R0, c[25].x, -R4;
TEX R3.xyz, R0, texture[6], CUBE;
MUL R2.zw, R2, c[24].x;
MAD R2.zw, R2, c[21].xyxy, c[21];
TEX R0.xyz, R2.zwzw, texture[5], 2D;
MAD R2.zw, -R2.xyxy, c[26].y, fragment.texcoord[0].xyxy;
MAD R0.w, R0, c[25], c[25].y;
MAD R2.xy, fragment.texcoord[0], c[8], c[8].zwzw;
MUL R2.zw, R2, R0.w;
TEX R5.xyz, R2, texture[4], 2D;
MUL R2.xy, R2.zwzw, c[19].x;
ADD R0.xyz, -R0, c[25].y;
MAD R2.xy, R2, c[21], c[21].zwzw;
MAX R0.xyz, R0, R5;
MUL R3.xyz, R3, c[16].x;
TEX R2.xyz, R2, texture[5], 2D;
MUL R6.xyz, R6, c[14].x;
MUL R6.xyz, R6, R2;
MUL R2.xyz, R0, c[12].x;
MAD R0.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
ADD R4.xyz, R0, R4;
DP3 R0.w, R4, R4;
POW R7.x, R7.x, c[23].x;
POW R7.y, R7.y, c[23].x;
POW R7.z, R7.z, c[23].x;
MAD R5.xyz, R5, -R7, R7;
RSQ R0.w, R0.w;
SLT R4.w, c[25].z, fragment.texcoord[5].z;
POW R6.x, R6.x, c[22].x;
POW R6.y, R6.y, c[22].x;
POW R6.z, R6.z, c[22].x;
MAD R6.xyz, R2, -R6, R6;
ADD R5.xyz, R6, R5;
MUL R6.xyz, R0.w, R4;
DP3 R1.w, R1, R6;
MAX R2.w, R1, c[25].z;
RCP R0.w, fragment.texcoord[6].w;
ADD R4.xyz, R3, R5;
MAD R5.xy, fragment.texcoord[6], R0.w, c[6];
MAD R5.zw, fragment.texcoord[6].xyxy, R0.w, c[5].xyxy;
TEX R6.x, R5.zwzw, texture[3], 2D;
TEX R5.x, R5, texture[3], 2D;
MOV R6.w, R5.x;
MAD R5.xy, fragment.texcoord[6], R0.w, c[4];
TEX R5.x, R5, texture[3], 2D;
MOV R6.z, R6.x;
MAD R5.zw, fragment.texcoord[6].xyxy, R0.w, c[3].xyxy;
TEX R6.x, R5.zwzw, texture[3], 2D;
MOV R6.y, R5.x;
MAD R5, -fragment.texcoord[6].z, R0.w, R6;
MOV R1.w, c[25].y;
CMP R5, R5, c[2].x, R1.w;
RCP R0.w, fragment.texcoord[5].w;
MAD R6.xy, fragment.texcoord[5], R0.w, c[25].w;
DP4 R3.w, R5, c[26].x;
TEX R0.w, R6, texture[1], 2D;
MUL R5.x, R4.w, R0.w;
DP3 R0.w, fragment.texcoord[5], fragment.texcoord[5];
TEX R0.w, R0.w, texture[2], 2D;
MUL R5.x, R5, R0.w;
MUL R3.w, R5.x, R3;
MOV R4.w, c[27];
MUL R4.w, R4, c[9].x;
ADD R0.w, R4, c[25].y;
EX2 R0.w, R0.w;
MUL R3.w, R3, c[25].x;
POW R0.w, R2.w, R0.w;
MUL R5.xyz, R3.w, c[7];
MUL R6.xyz, R5, R0.w;
DP3 R0.w, R1, R0;
MAX R1.x, R0.w, c[25].z;
MUL R4.xyz, R6, R4;
MAD R7.xy, fragment.texcoord[0], c[10], c[10].zwzw;
TEX R6.xyz, R7, texture[8], 2D;
MAD R0.xyz, R6, c[15], R3;
ADD R0.w, R1, -c[12].x;
MAD R0.xyz, R0.w, R2, R0;
MUL R1.xyz, R1.x, R5;
MAD result.color.xyz, R1, R0, R4;
MOV result.color.w, c[25].z;
END
# 123 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 131 math, 13 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_ShadowOffsets0]
Vector 4 [_ShadowOffsets1]
Vector 5 [_ShadowOffsets2]
Vector 6 [_ShadowOffsets3]
Vector 7 [_LightColor0]
Vector 8 [_Mask_ST]
Float 9 [_Shininess]
Vector 10 [_MainTex_ST]
Vector 11 [_Specularglitter_ST]
Float 12 [_MasktransparencyDebug]
Float 13 [_Specularpower05]
Float 14 [_Glitterpower]
Vector 15 [_Color]
Float 16 [_Reflectioncubemappower]
Vector 17 [_Normalmap_ST]
Vector 18 [_Glittercolor]
Float 19 [_Glitterymaskdotsscale]
Float 20 [_Glitteryspeed01]
Vector 21 [_Glittermap_ST]
Float 22 [_Glittercontrast13]
Float 23 [_Specularcontrast13]
Float 24 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_cube s6
dcl_2d s7
dcl_2d s8
def c25, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c26, 0.50000000, 0.25000000, 0.05000000, -0.50000000
def c27, 0.00159374, -0.99999875, -0.00159374, 0
def c28, -0.31830987, 1.00000000, 10.00000000, 0.50000000
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
dcl_texcoord6 v6
mad r0.xy, v0, c17, c17.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c25.x, c25.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
rsq r2.w, r0.w
mul r3.xyz, r2.w, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c25
rsq_pp r0.w, r0.w
rcp r2.w, v6.w
dp3 r0.x, v3, r3
dp3 r0.y, v4, r3
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c20.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c26.z, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c26.w
mul r2.xy, r1.w, c27
mad r1.zw, r1.z, c27.xyyz, r2.xyxy
dp3 r0.x, r4, -r3
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c25.x, -r3
texld r2.xyz, r0, s6
add r1.zw, r1, c26.x
mov r0.z, c20.x
mad r0.w, r0.z, c28, c28.y
mad r1.xy, -r1, c26.z, v0
mul r1.xy, r1, r0.w
mov r0.z, c20.x
mul r0.xy, r1.zwzw, c19.x
mad r0.z, r0, c28.x, c28.y
mul r5.xy, r0, r0.z
mul r1.xy, r1, c19.x
mad r0.xy, r1, c21, c21.zwzw
mov r0.w, c14.x
mul r1.xyz, c18, r0.w
texld r0.xyz, r0, s5
mul r7.xyz, r1, r0
mul r1.xy, r5, c24.x
mad r5.xy, r1, c21, c21.zwzw
pow r0, r7.x, c22.x
mov r7.x, r0
pow r0, r7.z, c22.x
mov r7.z, r0
mad r0.xyz, -v1, c1.w, c1
dp3 r0.w, r0, r0
mad r1.xy, v0, c8, c8.zwzw
texld r5.xyz, r5, s5
texld r1.xyz, r1, s4
add r5.xyz, -r5, c25.w
max r5.xyz, r5, r1
mul r6.xyz, r5, c12.x
pow r5, r7.y, c22.x
mov r7.y, r5
mad r5.xy, v0, c11, c11.zwzw
texld r5.xyz, r5, s7
mul r9.xyz, r5, c13.x
rsq r0.w, r0.w
mul r5.xyz, r0.w, r0
pow r0, r9.x, c23.x
mad r8.xyz, r6, -r7, r7
add r7.xyz, r5, r3
pow r3, r9.y, c23.x
mov r9.x, r0
pow r0, r9.z, c23.x
dp3 r1.w, r7, r7
rsq r0.w, r1.w
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r1.xyz, r8, r0
mul r0.xyz, r0.w, r7
dp3 r0.x, r4, r0
mad r3.xyz, r2, c16.x, r1
max r0.z, r0.x, c25
mov r0.y, c9.x
mad r0.x, r0.y, c28.z, c28.y
exp r0.w, r0.x
pow r1, r0.z, r0.w
mad r0.xy, v6, r2.w, c6
texld r0.x, r0, s3
mad r7.xy, v6, r2.w, c5
mov r0.w, r0.x
texld r0.x, r7, s3
mad r7.xy, v6, r2.w, c4
mov r0.z, r0.x
texld r0.x, r7, s3
mad r7.xy, v6, r2.w, c3
mov r0.y, r0.x
texld r0.x, r7, s3
mov r1.y, c2.x
mad r0, -v6.z, r2.w, r0
cmp r0, r0, c25.w, r1.y
dp4_pp r0.z, r0, c26.y
rcp r1.y, v5.w
mad r7.xy, v5, r1.y, c26.x
texld r0.w, r7, s1
dp3 r0.x, v5, v5
cmp r0.y, -v5.z, c25.z, c25.w
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s2
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.x, r0, c25
mov r1.w, c12.x
mov r0.w, r1.x
mul r0.xyz, r0.x, c7
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c25.z
mul r3.xyz, r2, c16.x
mad r7.xy, v0, c10, c10.zwzw
texld r2.xyz, r7, s8
mad r2.xyz, r2, c15, r3
add r1.w, c25, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c25.z
"
}
SubProgram "d3d11 " {
// Stats: 99 math, 13 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
SetTexture 0 [_Normalmap] 2D 7
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 0
SetTexture 4 [_Mask] 2D 3
SetTexture 5 [_Glittermap] 2D 8
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 5
SetTexture 8 [_MainTex] 2D 4
ConstBuffer "$Globals" 368
Vector 16 [_ShadowOffsets0]
Vector 32 [_ShadowOffsets1]
Vector 48 [_ShadowOffsets2]
Vector 64 [_ShadowOffsets3]
Vector 144 [_LightColor0]
Vector 160 [_Mask_ST]
Float 176 [_Shininess]
Vector 192 [_MainTex_ST]
Vector 208 [_Specularglitter_ST]
Float 224 [_MasktransparencyDebug]
Float 228 [_Specularpower05]
Float 232 [_Glitterpower]
Vector 240 [_Color]
Float 256 [_Reflectioncubemappower]
Vector 272 [_Normalmap_ST]
Vector 304 [_Glittercolor]
Float 320 [_Glitterymaskdotsscale]
Float 324 [_Glitteryspeed01]
Vector 336 [_Glittermap_ST]
Float 352 [_Glittercontrast13]
Float 356 [_Specularcontrast13]
Float 360 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedjfcegemmlajmbmgoeakdgkkbpmmimhlcabaaaaaakmbbaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apapaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaapapaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcfmbaaaaaeaaaaaaabhaeaaaafjaaaaaeegiocaaa
aaaaaaaabhaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafkaaaaadaagabaaa
aiaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafidaaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaa
ffffaaaafibiaaaeaahabaaaaiaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadpcbabaaaagaaaaaagcbaaaad
pcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaak
bcaabaaaaaaaaaaabkiacaaaaaaaaaaabeaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabeaaaaaaaceaaaaa
aaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaia
ebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaa
adaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaah
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaa
adaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaabeaaaaaa
dcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaabfaaaaaa
ogikcaaaaaaaaaaabfaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaa
eghobaaaafaaaaaaaagabaaaaiaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaa
aaaaaaaaaoaaaaaaegiccaaaaaaaaaaabdaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaa
bgaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaa
aeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaa
apaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalkolpphplp
aaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaa
adaaaaaaagiacaaaaaaaaaaabeaaaaaadcaaaaalicaabaaaabaaaaaabkiacaia
ebaaaaaaaaaaaaaabeaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaah
dcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaa
adaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabgaaaaaadcaaaaaldcaabaaa
adaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabfaaaaaaogikcaaaaaaaaaaa
bfaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaafaaaaaa
aagabaaaaiaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaa
adaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaa
diaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaaoaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaa
egaabaaaafaaaaaaeghobaaaahaaaaaaaagabaaaafaaaaaadiaaaaaihcaabaaa
afaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaaoaaaaaacpaaaaafhcaabaaa
afaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaabgaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaa
egacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaa
pgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaaahaaaaaa
dcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaah
hcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaa
agaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaagaaaaaaaagabaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaa
baaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
agiacaaaaaaaaaaabaaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaa
aaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaalaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaoaaaaahocaabaaaabaaaaaaagbjbaaaahaaaaaapgbpbaaa
ahaaaaaaaaaaaaaidcaabaaaaeaaaaaajgafbaaaabaaaaaaegiacaaaaaaaaaaa
abaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaadaaaaaa
aagabaaaaaaaaaaaaaaaaaaidcaabaaaafaaaaaajgafbaaaabaaaaaaegiacaaa
aaaaaaaaacaaaaaaefaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaa
adaaaaaaaagabaaaaaaaaaaadgaaaaafccaabaaaaeaaaaaaakaabaaaafaaaaaa
aaaaaaaidcaabaaaafaaaaaajgafbaaaabaaaaaaegiacaaaaaaaaaaaadaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaadaaaaaaaagabaaa
aaaaaaaadgaaaaafecaabaaaaeaaaaaaakaabaaaafaaaaaaaaaaaaaigcaabaaa
abaaaaaafgagbaaaabaaaaaaagibcaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaa
afaaaaaajgafbaaaabaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaadgaaaaaf
icaabaaaaeaaaaaaakaabaaaafaaaaaadbaaaaahpcaabaaaaeaaaaaaegaobaaa
aeaaaaaapgapbaaaabaaaaaadhaaaaanpcaabaaaaeaaaaaaegaobaaaaeaaaaaa
agiacaaaadaaaaaabiaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadp
bbaaaaakccaabaaaabaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadoaaaaiado
aaaaiadoaaaaiadoaoaaaaahmcaabaaaabaaaaaaagbebaaaagaaaaaapgbpbaaa
agaaaaaaaaaaaaakmcaabaaaabaaaaaakgaobaaaabaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaaadpaaaaaadpefaaaaajpcaabaaaaeaaaaaaogakbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaadbaaaaahecaabaaaabaaaaaaabeaaaaa
aaaaaaaackbabaaaagaaaaaaabaaaaahecaabaaaabaaaaaackaabaaaabaaaaaa
abeaaaaaaaaaiadpdiaaaaahecaabaaaabaaaaaadkaabaaaaeaaaaaackaabaaa
abaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaapgapbaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
acaaaaaadiaaaaahecaabaaaabaaaaaackaabaaaabaaaaaaakaabaaaaeaaaaaa
apaaaaahccaabaaaabaaaaaakgakbaaaabaaaaaafgafbaaaabaaaaaadiaaaaai
ocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
hcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaiaaaaaaaagabaaaaeaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaapaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaa
aoaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 123 math, 13 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_ShadowOffsets0]
Vector 4 [_ShadowOffsets1]
Vector 5 [_ShadowOffsets2]
Vector 6 [_ShadowOffsets3]
Vector 7 [_LightColor0]
Vector 8 [_Mask_ST]
Float 9 [_Shininess]
Vector 10 [_MainTex_ST]
Vector 11 [_Specularglitter_ST]
Float 12 [_MasktransparencyDebug]
Float 13 [_Specularpower05]
Float 14 [_Glitterpower]
Vector 15 [_Color]
Float 16 [_Reflectioncubemappower]
Vector 17 [_Normalmap_ST]
Vector 18 [_Glittercolor]
Float 19 [_Glitterymaskdotsscale]
Float 20 [_Glitteryspeed01]
Vector 21 [_Glittermap_ST]
Float 22 [_Glittercontrast13]
Float 23 [_Specularcontrast13]
Float 24 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"3.0-!!ARBfp1.0
OPTION ARB_fragment_program_shadow;
PARAM c[28] = { program.local[0..24],
		{ 2, 1, 0, 0.5 },
		{ 0.25, 0.050000001, -0.99999875, -0.001592548 },
		{ 0.001592548, -0.99999875, 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[17], c[17].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[25].x, -c[25].y;
ADD R1.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R1, R1;
RSQ R2.w, R0.w;
MUL R6.xyz, R2.w, R1;
MUL R0.xyz, R2.y, fragment.texcoord[4];
MAD R0.xyz, R2.x, fragment.texcoord[3], R0;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
ADD R0.w, -R0, c[25].y;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MAD R0.xyz, R0.w, R2, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R0;
MOV R0.w, c[20].x;
MUL R0.z, R0.w, -c[27];
RCP R1.w, fragment.texcoord[6].w;
DP3 R1.x, fragment.texcoord[3], R6;
DP3 R1.y, fragment.texcoord[4], R6;
MUL R2.xy, R1, -c[20].x;
MAD R1.xy, R2, c[26].y, fragment.texcoord[0];
ADD R0.xy, R1, -c[25].w;
MUL R1.xy, R0.y, c[27];
MAD R0.xy, R0.x, c[26].zwzw, R1;
ADD R0.xy, R0, c[25].w;
DP3 R1.z, R3, -R6;
ADD R0.z, R0, c[25].y;
MUL R0.xy, R0, c[19].x;
MUL R1.xy, R0, R0.z;
MUL R0.xyz, R3, R1.z;
MUL R1.xy, R1, c[24].x;
MAD R0.xyz, -R0, c[25].x, -R6;
MAD R2.zw, R1.xyxy, c[21].xyxy, c[21];
TEX R1.xyz, R0, texture[6], CUBE;
TEX R0.xyz, R2.zwzw, texture[5], 2D;
MUL R5.xyz, R1, c[16].x;
ADD R1.xyz, -R0, c[25].y;
MAD R0.z, R0.w, c[25].w, c[25].y;
MAD R2.xy, -R2, c[26].y, fragment.texcoord[0];
MUL R2.xy, R2, R0.z;
MAD R0.xy, fragment.texcoord[0], c[8], c[8].zwzw;
TEX R0.xyz, R0, texture[4], 2D;
MUL R4.xy, R2, c[19].x;
MAX R2.xyz, R1, R0;
MAD R1.xy, R4, c[21], c[21].zwzw;
MOV R4.xyz, c[18];
MUL R4.xyz, R4, c[14].x;
TEX R1.xyz, R1, texture[5], 2D;
MUL R1.xyz, R4, R1;
MUL R4.xyz, R2, c[12].x;
MAD R2.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R2, R2;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R2;
POW R1.x, R1.x, c[22].x;
POW R1.z, R1.z, c[22].x;
POW R1.y, R1.y, c[22].x;
MAD R7.xyz, R4, -R1, R1;
MAD R1.xy, fragment.texcoord[0], c[11], c[11].zwzw;
TEX R1.xyz, R1, texture[7], 2D;
MUL R1.xyz, R1, c[13].x;
POW R1.x, R1.x, c[23].x;
POW R1.z, R1.z, c[23].x;
POW R1.y, R1.y, c[23].x;
MAD R1.xyz, R0, -R1, R1;
ADD R0.xyz, R2, R6;
ADD R1.xyz, R7, R1;
DP3 R0.w, R0, R0;
ADD R6.xyz, R5, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R0;
DP3 R0.w, R3, R1;
MAD R0.xyz, fragment.texcoord[6], R1.w, c[6];
MAD R1.xyz, fragment.texcoord[6], R1.w, c[4];
TEX R0.x, R0, texture[3], SHADOW2D;
MAX R2.w, R0, c[25].z;
MOV R0.w, R0.x;
MAD R0.xyz, fragment.texcoord[6], R1.w, c[5];
TEX R0.x, R0, texture[3], SHADOW2D;
TEX R1.x, R1, texture[3], SHADOW2D;
MOV R0.y, R1.x;
MAD R1.xyz, fragment.texcoord[6], R1.w, c[3];
MOV R0.z, R0.x;
TEX R0.x, R1, texture[3], SHADOW2D;
MOV R1.w, c[25].y;
ADD R1.y, R1.w, -c[2].x;
MAD R0, R0, R1.y, c[2].x;
DP4 R0.x, R0, c[26].x;
RCP R1.x, fragment.texcoord[5].w;
MAD R1.xy, fragment.texcoord[5], R1.x, c[25].w;
TEX R0.w, R1, texture[1], 2D;
SLT R0.y, c[25].z, fragment.texcoord[5].z;
MUL R0.z, R0.y, R0.w;
MOV R0.y, c[27].w;
DP3 R0.w, fragment.texcoord[5], fragment.texcoord[5];
MUL R1.x, R0.y, c[9];
TEX R0.w, R0.w, texture[2], 2D;
MUL R0.y, R0.z, R0.w;
MUL R0.x, R0.y, R0;
ADD R0.z, R1.x, c[25].y;
EX2 R0.y, R0.z;
POW R0.w, R2.w, R0.y;
MUL R0.x, R0, c[25];
MUL R0.xyz, R0.x, c[7];
MUL R1.xyz, R0, R0.w;
DP3 R0.w, R3, R2;
MAX R0.w, R0, c[25].z;
MUL R6.xyz, R1, R6;
MAD R7.xy, fragment.texcoord[0], c[10], c[10].zwzw;
TEX R1.xyz, R7, texture[8], 2D;
MAD R1.xyz, R1, c[15], R5;
ADD R1.w, R1, -c[12].x;
MAD R1.xyz, R1.w, R4, R1;
MUL R0.xyz, R0.w, R0;
MAD result.color.xyz, R0, R1, R6;
MOV result.color.w, c[25].z;
END
# 123 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 131 math, 13 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightShadowData]
Vector 3 [_ShadowOffsets0]
Vector 4 [_ShadowOffsets1]
Vector 5 [_ShadowOffsets2]
Vector 6 [_ShadowOffsets3]
Vector 7 [_LightColor0]
Vector 8 [_Mask_ST]
Float 9 [_Shininess]
Vector 10 [_MainTex_ST]
Vector 11 [_Specularglitter_ST]
Float 12 [_MasktransparencyDebug]
Float 13 [_Specularpower05]
Float 14 [_Glitterpower]
Vector 15 [_Color]
Float 16 [_Reflectioncubemappower]
Vector 17 [_Normalmap_ST]
Vector 18 [_Glittercolor]
Float 19 [_Glitterymaskdotsscale]
Float 20 [_Glitteryspeed01]
Vector 21 [_Glittermap_ST]
Float 22 [_Glittercontrast13]
Float 23 [_Specularcontrast13]
Float 24 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_cube s6
dcl_2d s7
dcl_2d s8
def c25, 2.00000000, -1.00000000, 0.00000000, 1.00000000
def c26, 0.50000000, 0.25000000, 0.05000000, -0.50000000
def c27, 0.00159374, -0.99999875, -0.00159374, 0
def c28, -0.31830987, 1.00000000, 10.00000000, 0.50000000
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5
dcl_texcoord6 v6
mad r0.xy, v0, c17, c17.zwzw
texld r0.yw, r0, s0
mad_pp r0.xy, r0.wyzw, c25.x, c25.y
mul_pp r1.xy, r0, r0
add_pp_sat r0.w, r1.x, r1.y
mul r2.xyz, r0.y, v4
dp3 r1.x, v2, v2
add_pp r0.w, -r0, c25
rsq r1.x, r1.x
rsq_pp r0.w, r0.w
mad r0.xyz, r0.x, v3, r2
mul r1.xyz, r1.x, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r1, r0
mad r1.xyz, -v1, c1.w, c1
dp3 r0.w, r2, r2
add r0.xyz, -v1, c0
dp3 r2.w, r0, r0
dp3 r1.w, r1, r1
rsq r2.w, r2.w
rsq r1.w, r1.w
rsq r0.w, r0.w
mul r0.xyz, r2.w, r0
mul r3.xyz, r0.w, r2
mul r5.xyz, r1.w, r1
add r1.xyz, r5, r0
dp3 r1.w, r1, r1
rsq r1.w, r1.w
mul r2.xyz, r1.w, r1
dp3 r0.w, r3, -r0
mul r1.xyz, r3, r0.w
dp3 r2.w, r3, r2
mad r2.xyz, -r1, c25.x, -r0
dp3 r0.w, v4, r0
dp3 r0.z, v3, r0
mul r6.xy, r0.zwzw, -c20.x
mad r1.xy, r6, c26.z, v0
add r7.xy, r1, c26.w
mad r0.xy, v0, c11, c11.zwzw
texld r0.xyz, r0, s7
mul r4.xyz, r0, c13.x
pow r1, r4.y, c23.x
pow r0, r4.x, c23.x
mov r4.x, r0
pow r0, r4.z, c23.x
mov r4.z, r0
mov r0.z, c20.x
mul r6.zw, r7.y, c27.xyxy
texld r2.xyz, r2, s6
mov r4.y, r1
mad r0.xy, v0, c8, c8.zwzw
texld r1.xyz, r0, s4
mad r0.xy, r7.x, c27.yzzw, r6.zwzw
add r0.xy, r0, c26.x
mad r4.xyz, r1, -r4, r4
mad r0.z, r0, c28.x, c28.y
mul r0.xy, r0, c19.x
mul r0.xy, r0, r0.z
mov r0.z, c20.x
mad r1.w, r0.z, c28, c28.y
mad r0.zw, -r6.xyxy, c26.z, v0.xyxy
mul r0.zw, r0, r1.w
mul r6.xy, r0.zwzw, c19.x
mov r0.w, c14.x
mul r0.xy, r0, c24.x
mad r0.xy, r0, c21, c21.zwzw
mad r6.xy, r6, c21, c21.zwzw
texld r0.xyz, r0, s5
texld r6.xyz, r6, s5
mul r7.xyz, c18, r0.w
mul r7.xyz, r7, r6
add r6.xyz, -r0, c25.w
pow r0, r7.x, c22.x
max r1.xyz, r6, r1
mul r6.xyz, r1, c12.x
pow r1, r7.y, c22.x
mov r7.x, r0
pow r0, r7.z, c22.x
max r0.w, r2, c25.z
rcp r2.w, v6.w
mov r7.z, r0
mov r7.y, r1
mad r0.xyz, r6, -r7, r7
add r0.xyz, r0, r4
mad r1.yzw, r2.xxyz, c16.x, r0.xxyz
mov r0.x, c9
mad r1.x, r0, c28.z, c28.y
mad r0.xyz, v6, r2.w, c6
exp r1.x, r1.x
pow r4, r0.w, r1.x
texld r0.x, r0, s3
mov_pp r0.w, r0.x
mad r0.xyz, v6, r2.w, c5
texld r0.x, r0, s3
mad r7.xyz, v6, r2.w, c4
texld r1.x, r7, s3
mov_pp r0.z, r0.x
mov_pp r0.y, r1.x
mov r0.x, c2
add r1.x, c25.w, -r0
mad r7.xyz, v6, r2.w, c3
texld r0.x, r7, s3
mad r0, r0, r1.x, c2.x
dp4_pp r0.z, r0, c26.y
rcp r1.x, v5.w
mad r7.xy, v5, r1.x, c26.x
texld r0.w, r7, s1
dp3 r0.x, v5, v5
cmp r0.y, -v5.z, c25.z, c25.w
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s2
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.x, r0, c25
mov r0.w, r4.x
mul r0.xyz, r0.x, c7
mul r4.xyz, r0, r0.w
mul r1.xyz, r4, r1.yzww
dp3 r0.w, r3, r5
mov r1.w, c12.x
max r0.w, r0, c25.z
mul r4.xyz, r2, c16.x
mad r7.xy, v0, c10, c10.zwzw
texld r2.xyz, r7, s8
mad r2.xyz, r2, c15, r4
add r1.w, c25, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c25.z
"
}
SubProgram "d3d11 " {
// Stats: 100 math, 9 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
SetTexture 0 [_Normalmap] 2D 7
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 8
SetTexture 5 [_Reflectioncubemap] CUBE 6
SetTexture 6 [_Specularglitter] 2D 5
SetTexture 7 [_MainTex] 2D 4
SetTexture 8 [_ShadowMapTexture] 2D 0
ConstBuffer "$Globals" 368
Vector 16 [_ShadowOffsets0]
Vector 32 [_ShadowOffsets1]
Vector 48 [_ShadowOffsets2]
Vector 64 [_ShadowOffsets3]
Vector 144 [_LightColor0]
Vector 160 [_Mask_ST]
Float 176 [_Shininess]
Vector 192 [_MainTex_ST]
Vector 208 [_Specularglitter_ST]
Float 224 [_MasktransparencyDebug]
Float 228 [_Specularpower05]
Float 232 [_Glitterpower]
Vector 240 [_Color]
Float 256 [_Reflectioncubemappower]
Vector 272 [_Normalmap_ST]
Vector 304 [_Glittercolor]
Float 320 [_Glitterymaskdotsscale]
Float 324 [_Glitteryspeed01]
Vector 336 [_Glittermap_ST]
Float 352 [_Glittercontrast13]
Float 356 [_Specularcontrast13]
Float 360 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedoechjabpmogfjonjdnflgdclfgbapbbmabaaaaaaimbbaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
apapaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaapapaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcdmbaaaaaeaaaaaaaapaeaaaafjaaaaaeegiocaaa
aaaaaaaabhaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaiaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafkaaaaadaagabaaa
aiaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaa
ffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaa
ffffaaaafibiaaaeaahabaaaaiaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadpcbabaaaagaaaaaagcbaaaad
pcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaak
bcaabaaaaaaaaaaabkiacaaaaaaaaaaabeaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabeaaaaaaaceaaaaa
aaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaia
ebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaa
adaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaah
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaa
adaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaabeaaaaaa
dcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaabfaaaaaa
ogikcaaaaaaaaaaabfaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaa
eghobaaaaeaaaaaaaagabaaaaiaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaa
aaaaaaaaaoaaaaaaegiccaaaaaaaaaaabdaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaa
bgaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaa
aeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaa
apaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalkolpphplp
aaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaa
adaaaaaaagiacaaaaaaaaaaabeaaaaaadcaaaaalicaabaaaabaaaaaabkiacaia
ebaaaaaaaaaaaaaabeaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaah
dcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaa
adaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabgaaaaaadcaaaaaldcaabaaa
adaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabfaaaaaaogikcaaaaaaaaaaa
bfaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaaeaaaaaa
aagabaaaaiaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaadaaaaaaaagabaaa
adaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaa
diaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaaoaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaajpcaabaaaafaaaaaa
egaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaafaaaaaadiaaaaaihcaabaaa
afaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaaoaaaaaacpaaaaafhcaabaaa
afaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaabgaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaa
egacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaa
pgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaaahaaaaaa
dcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaah
hcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaa
agaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaafaaaaaaaagabaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaa
baaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
agiacaaaaaaaaaaabaaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaa
aaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaalaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaaaaaaaaajccaabaaaabaaaaaaakiacaiaebaaaaaaadaaaaaa
biaaaaaaabeaaaaaaaaaiadpaoaaaaahhcaabaaaaeaaaaaaegbcbaaaahaaaaaa
pgbpbaaaahaaaaaaaaaaaaaihcaabaaaafaaaaaaegacbaaaaeaaaaaaegiccaaa
aaaaaaaaabaaaaaaehaaaaalbcaabaaaafaaaaaaegaabaaaafaaaaaaaghabaaa
aiaaaaaaaagabaaaaaaaaaaackaabaaaafaaaaaaaaaaaaaihcaabaaaagaaaaaa
egacbaaaaeaaaaaaegiccaaaaaaaaaaaacaaaaaaehaaaaalccaabaaaafaaaaaa
egaabaaaagaaaaaaaghabaaaaiaaaaaaaagabaaaaaaaaaaackaabaaaagaaaaaa
aaaaaaaihcaabaaaagaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaadaaaaaa
aaaaaaaihcaabaaaaeaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaaeaaaaaa
ehaaaaalicaabaaaafaaaaaaegaabaaaaeaaaaaaaghabaaaaiaaaaaaaagabaaa
aaaaaaaackaabaaaaeaaaaaaehaaaaalecaabaaaafaaaaaaegaabaaaagaaaaaa
aghabaaaaiaaaaaaaagabaaaaaaaaaaackaabaaaagaaaaaadcaaaaakpcaabaaa
aeaaaaaaegaobaaaafaaaaaafgafbaaaabaaaaaaagiacaaaadaaaaaabiaaaaaa
bbaaaaakccaabaaaabaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadoaaaaiado
aaaaiadoaaaaiadoaoaaaaahmcaabaaaabaaaaaaagbebaaaagaaaaaapgbpbaaa
agaaaaaaaaaaaaakmcaabaaaabaaaaaakgaobaaaabaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaaadpaaaaaadpefaaaaajpcaabaaaaeaaaaaaogakbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaadbaaaaahecaabaaaabaaaaaaabeaaaaa
aaaaaaaackbabaaaagaaaaaaabaaaaahecaabaaaabaaaaaackaabaaaabaaaaaa
abeaaaaaaaaaiadpdiaaaaahecaabaaaabaaaaaadkaabaaaaeaaaaaackaabaaa
abaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaapgapbaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
acaaaaaadiaaaaahecaabaaaabaaaaaackaabaaaabaaaaaaakaabaaaaeaaaaaa
apaaaaahccaabaaaabaaaaaakgakbaaaabaaaaaafgafbaaaabaaaaaadiaaaaai
ocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
hcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaahaaaaaaaagabaaaaeaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaapaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaa
aoaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 122 math, 12 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"3.0-!!ARBfp1.0
PARAM c[27] = { program.local[0..21],
		{ 2, 1, 0, 0.97000003 },
		{ 0.0078125, -0.0078125, 0.25, 0.050000001 },
		{ 1, 0.0039215689, 1.53787e-005, 6.0308629e-008 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[14], c[14].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[22].x, -c[22].y;
MUL R1.xyz, R2.y, fragment.texcoord[4];
ADD R0.xyz, -fragment.texcoord[1], c[0];
MAD R1.xyz, R2.x, fragment.texcoord[3], R1;
MUL R2.xy, R2, R2;
ADD_SAT R2.x, R2, R2.y;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
ADD R2.x, -R2, c[22].y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
MOV R6.xyz, c[15];
MAD R7.xy, fragment.texcoord[0], c[8], c[8].zwzw;
TEX R7.xyz, R7, texture[6], 2D;
MUL R7.xyz, R7, c[10].x;
MUL R0.xyz, R0.w, R0;
RSQ R2.w, R2.x;
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R1.w, R2.w;
MAD R1.xyz, R1.w, R2, R1;
DP3 R0.w, R1, R1;
RSQ R0.w, R0.w;
MUL R1.xyz, R0.w, R1;
DP3 R1.w, R1, -R0;
DP3 R2.x, fragment.texcoord[3], R0;
DP3 R2.y, fragment.texcoord[4], R0;
MUL R3.xy, R2, -c[17].x;
MAD R2.xy, R3, c[23].w, fragment.texcoord[0];
ADD R2.zw, R2.xyxy, -c[25].x;
MUL R2.xy, R2.w, c[25].wyzw;
MAD R2.zw, R2.z, c[25].xyyz, R2.xyxy;
MOV R0.w, c[17].x;
MUL R2.x, R0.w, -c[26];
ADD R2.zw, R2, c[25].x;
MUL R0.w, R0, c[25].x;
MUL R2.zw, R2, c[16].x;
ADD R2.x, R2, c[22].y;
MUL R3.zw, R2, R2.x;
MUL R2.xyz, R1, R1.w;
MAD R2.xyz, -R2, c[22].x, -R0;
MUL R3.zw, R3, c[21].x;
MAD R3.zw, R3, c[18].xyxy, c[18];
TEX R4.xyz, R3.zwzw, texture[4], 2D;
MAD R3.zw, fragment.texcoord[0].xyxy, c[5].xyxy, c[5];
TEX R5.xyz, R3.zwzw, texture[3], 2D;
TEX R2.xyz, R2, texture[5], CUBE;
ADD R4.xyz, -R4, c[22].y;
MAX R4.xyz, R4, R5;
DP3 R2.w, fragment.texcoord[6], fragment.texcoord[6];
MUL R2.xyz, R2, c[13].x;
ADD R0.w, R0, c[22].y;
MAD R3.xy, -R3, c[23].w, fragment.texcoord[0];
MUL R3.xy, R3, R0.w;
MUL R3.xy, R3, c[16].x;
MAD R3.xy, R3, c[18], c[18].zwzw;
MUL R6.xyz, R6, c[11].x;
TEX R3.xyz, R3, texture[4], 2D;
MUL R3.xyz, R6, R3;
MAD R6.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R6, R6;
RSQ R0.w, R0.w;
MUL R6.xyz, R0.w, R6;
ADD R0.xyz, R6, R0;
DP3 R0.w, R0, R0;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, R0;
DP3 R1.w, R1, R0;
MUL R4.xyz, R4, c[9].x;
POW R7.x, R7.x, c[20].x;
POW R7.z, R7.z, c[20].x;
POW R7.y, R7.y, c[20].x;
MAD R5.xyz, R5, -R7, R7;
MAX R1.w, R1, c[22].z;
RSQ R2.w, R2.w;
POW R3.x, R3.x, c[19].x;
POW R3.y, R3.y, c[19].x;
POW R3.z, R3.z, c[19].x;
MAD R3.xyz, R4, -R3, R3;
ADD R3.xyz, R3, R5;
ADD R5.xyz, fragment.texcoord[6], c[23].xyyw;
TEX R0, R5, texture[1], CUBE;
DP4 R7.w, R0, c[24];
ADD R0.xyz, fragment.texcoord[6], c[23].yxyw;
TEX R0, R0, texture[1], CUBE;
DP4 R7.z, R0, c[24];
ADD R5.xyz, fragment.texcoord[6], c[23].yyxw;
TEX R5, R5, texture[1], CUBE;
ADD R0.xyz, fragment.texcoord[6], c[23].x;
TEX R0, R0, texture[1], CUBE;
DP4 R7.x, R0, c[24];
RCP R0.x, R2.w;
DP4 R7.y, R5, c[24];
MUL R0.x, R0, c[2].w;
MAD R0, -R0.x, c[22].w, R7;
MOV R2.w, c[22].y;
CMP R0, R0, c[3].x, R2.w;
DP4 R0.y, R0, c[23].z;
DP3 R0.z, fragment.texcoord[5], fragment.texcoord[5];
TEX R0.w, R0.z, texture[2], 2D;
MOV R3.w, c[26].y;
MUL R0.x, R3.w, c[6];
ADD R0.x, R0, c[22].y;
MUL R0.y, R0.w, R0;
EX2 R0.w, R0.x;
MUL R0.xyz, R0.y, c[4];
POW R0.w, R1.w, R0.w;
MUL R0.xyz, R0, c[22].x;
MUL R5.xyz, R0, R0.w;
DP3 R0.w, R1, R6;
MAX R1.w, R0, c[22].z;
ADD R3.xyz, R2, R3;
MUL R3.xyz, R5, R3;
MAD R7.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R5.xyz, R7, texture[7], 2D;
MAD R1.xyz, R5, c[12], R2;
ADD R0.w, R2, -c[9].x;
MAD R1.xyz, R0.w, R4, R1;
MUL R0.xyz, R1.w, R0;
MAD result.color.xyz, R0, R1, R3;
MOV result.color.w, c[22].z;
END
# 122 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 130 math, 12 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_Glittermap] 2D 4
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 6
SetTexture 7 [_MainTex] 2D 7
"ps_3_0
dcl_2d s0
dcl_cube s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_cube s5
dcl_2d s6
dcl_2d s7
def c22, 2.00000000, -1.00000000, 0.00000000, 0.00781250
def c23, 0.00781250, -0.00781250, 0.97000003, 0.25000000
def c24, 1.00000000, 0.00392157, 0.00001538, 0.00000006
def c25, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c26, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c27, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xyz
dcl_texcoord6 v6.xyz
mad r0.xy, v0, c14, c14.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c22.x, c22.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
rsq r2.w, r0.w
mul r3.xyz, r2.w, r0
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c24.x
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r3
dp3 r0.y, v4, r3
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c17.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c25.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c25.y
mul r2.xy, r1.w, c25.zwzw
mad r1.zw, r1.z, c26.xyxy, r2.xyxy
dp3 r0.x, r4, -r3
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c22.x, -r3
texld r2.xyz, r0, s5
add r1.zw, r1, c26.z
mov r0.z, c17.x
mad r0.w, r0.z, c26.z, c26
mad r1.xy, -r1, c25.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c17.x
mul r0.xy, r1.zwzw, c16.x
mad r0.z, r0, c27.x, c27.y
mul r5.xy, r0, r0.z
mul r1.xy, r1, c16.x
mad r0.xy, r1, c18, c18.zwzw
mov r0.w, c11.x
mul r1.xyz, c15, r0.w
texld r0.xyz, r0, s4
mul r7.xyz, r1, r0
mul r1.xy, r5, c21.x
mad r5.xy, r1, c18, c18.zwzw
pow r0, r7.x, c19.x
mov r7.x, r0
pow r0, r7.z, c19.x
mov r7.z, r0
mad r0.xyz, -v1, c1.w, c1
dp3 r0.w, r0, r0
mad r1.xy, v0, c5, c5.zwzw
texld r5.xyz, r5, s4
texld r1.xyz, r1, s3
add r5.xyz, -r5, c24.x
max r5.xyz, r5, r1
mul r6.xyz, r5, c9.x
pow r5, r7.y, c19.x
mov r7.y, r5
mad r5.xy, v0, c8, c8.zwzw
texld r5.xyz, r5, s6
mul r9.xyz, r5, c10.x
rsq r0.w, r0.w
mul r5.xyz, r0.w, r0
mad r8.xyz, r6, -r7, r7
add r7.xyz, r5, r3
pow r0, r9.x, c20.x
pow r3, r9.y, c20.x
mov r9.x, r0
pow r0, r9.z, c20.x
dp3 r1.w, r7, r7
rsq r0.w, r1.w
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r1.xyz, r8, r0
mul r0.xyz, r0.w, r7
dp3 r0.x, r4, r0
mad r7.xyz, r2, c13.x, r1
mov r0.y, c6.x
mad r0.w, r0.y, c27.z, c27.y
max r1.x, r0, c22.z
exp r1.y, r0.w
pow r3, r1.x, r1.y
add r0.xyz, v6, c23.xyyw
texld r0, r0, s1
dp4 r8.w, r0, c24
add r0.xyz, v6, c23.yxyw
texld r0, r0, s1
dp4 r8.z, r0, c24
add r1.xyz, v6, c23.yyxw
texld r1, r1, s1
dp4 r8.y, r1, c24
add r0.xyz, v6, c22.w
texld r0, r0, s1
dp3 r1.x, v6, v6
rsq r1.x, r1.x
dp4 r8.x, r0, c24
rcp r0.x, r1.x
mul r0.x, r0, c2.w
mad r0, -r0.x, c23.z, r8
mov r1.x, c3
cmp r1, r0, c24.x, r1.x
dp4_pp r0.y, r1, c23.w
mov r0.w, r3.x
dp3 r0.x, v5, v5
texld r0.x, r0.x, s2
mul r0.x, r0, r0.y
mul r0.xyz, r0.x, c4
mul r0.xyz, r0, c22.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r7
dp3 r0.w, r4, r5
mov r1.w, c9.x
max r0.w, r0, c22.z
mul r3.xyz, r2, c13.x
mad r7.xy, v0, c7, c7.zwzw
texld r2.xyz, r7, s7
mad r2.xyz, r2, c12, r3
add r1.w, c24.x, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c22.z
"
}
SubProgram "d3d11 " {
// Stats: 100 math, 12 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
SetTexture 0 [_Normalmap] 2D 6
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_ShadowMapTexture] CUBE 0
SetTexture 3 [_Mask] 2D 2
SetTexture 4 [_Glittermap] 2D 7
SetTexture 5 [_Reflectioncubemap] CUBE 5
SetTexture 6 [_Specularglitter] 2D 4
SetTexture 7 [_MainTex] 2D 3
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedkclfeeeofnndgpcidplbahiklplcmkaeabaaaaaaimbbaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcdmbaaaaaeaaaaaaaapaeaaaafjaaaaaeegiocaaa
aaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafidaaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaa
agaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaa
gcbaaaadhcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaa
dcaaaaakbcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaa
egbcbaiaebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaa
baaaaaahccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaaj
pcaabaaaadaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaa
diaaaaahdcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaak
dcaabaaaadaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaa
aaaaaaaadiaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaa
baaaaaaadcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaa
bbaaaaaaogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aaaaaaaaeghobaaaaeaaaaaaaagabaaaahaaaaaadiaaaaajhcaabaaaaaaaaaaa
kgikcaaaaaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaa
egacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaa
aaaaaaaabcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaak
bcaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaa
aaaaaaaaapaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalk
olpphplpaaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaa
egaabaaaadaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaa
bkiacaiaebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadp
diaaaaahdcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaai
dcaabaaaadaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaal
dcaabaaaadaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaa
aaaaaaaabbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaa
aeaaaaaaaagabaaaahaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaa
aeaaaaaaegbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaadaaaaaa
aagabaaaacaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaa
akaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaa
afaaaaaaegaabaaaafaaaaaaeghobaaaagaaaaaaaagabaaaaeaaaaaadiaaaaai
hcaabaaaafaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaaf
hcaabaaaafaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaa
afaaaaaafgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaa
afaaaaaadcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
afaaaaaaegacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaaeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
aeaaaaaapgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaa
agaaaaaadcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
diaaaaahhcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaaj
hcaabaaaagaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaai
icaabaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaafaaaaaa
aagabaaaafaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaa
aaaaaaaaamaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaamaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaa
acaaaaaaaaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaa
abaaaaaaegacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aeaaaaaaegacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaakccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaeb
abeaaaaaaaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaahaaaaaa
egbcbaaaahaaaaaaelaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaai
ccaabaaaabaaaaaabkaabaaaabaaaaaadkiacaaaacaaaaaaabaaaaaadiaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaomfbhidpaaaaaaakhcaabaaa
aeaaaaaaegbcbaaaahaaaaaaaceaaaaaaaaaaadmaaaaaadmaaaaaadmaaaaaaaa
efaaaaajpcaabaaaaeaaaaaaegacbaaaaeaaaaaaeghobaaaacaaaaaaaagabaaa
aaaaaaaabbaaaaakbcaabaaaaeaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadp
ibiaiadlicabibdhafidibddaaaaaaakhcaabaaaafaaaaaaegbcbaaaahaaaaaa
aceaaaaaaaaaaalmaaaaaalmaaaaaadmaaaaaaaaefaaaaajpcaabaaaafaaaaaa
egacbaaaafaaaaaaeghobaaaacaaaaaaaagabaaaaaaaaaaabbaaaaakccaabaaa
aeaaaaaaegaobaaaafaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhafidibdd
aaaaaaakhcaabaaaafaaaaaaegbcbaaaahaaaaaaaceaaaaaaaaaaalmaaaaaadm
aaaaaalmaaaaaaaaefaaaaajpcaabaaaafaaaaaaegacbaaaafaaaaaaeghobaaa
acaaaaaaaagabaaaaaaaaaaabbaaaaakecaabaaaaeaaaaaaegaobaaaafaaaaaa
aceaaaaaaaaaiadpibiaiadlicabibdhafidibddaaaaaaakhcaabaaaafaaaaaa
egbcbaaaahaaaaaaaceaaaaaaaaaaadmaaaaaalmaaaaaalmaaaaaaaaefaaaaaj
pcaabaaaafaaaaaaegacbaaaafaaaaaaeghobaaaacaaaaaaaagabaaaaaaaaaaa
bbaaaaakicaabaaaaeaaaaaaegaobaaaafaaaaaaaceaaaaaaaaaiadpibiaiadl
icabibdhafidibdddbaaaaahpcaabaaaaeaaaaaaegaobaaaaeaaaaaafgafbaaa
abaaaaaadhaaaaanpcaabaaaaeaaaaaaegaobaaaaeaaaaaaagiacaaaadaaaaaa
biaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpbbaaaaakccaabaaa
abaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadoaaaaiadoaaaaiadoaaaaiado
baaaaaahecaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaaefaaaaaj
pcaabaaaaeaaaaaakgakbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaa
apaaaaahccaabaaaabaaaaaaagaabaaaaeaaaaaafgafbaaaabaaaaaadiaaaaai
ocaabaaaabaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaah
hcaabaaaaeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaahaaaaaaaagabaaaadaaaaaa
dcaaaaakhcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaa
egacbaaaacaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 124 math, 13 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_LightTexture0] CUBE 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"3.0-!!ARBfp1.0
PARAM c[27] = { program.local[0..21],
		{ 2, 1, 0, 0.97000003 },
		{ 0.0078125, -0.0078125, 0.25, 0.050000001 },
		{ 1, 0.0039215689, 1.53787e-005, 6.0308629e-008 },
		{ 0.5, -0.99999875, -0.001592548, 0.001592548 },
		{ 0.31830987, 10 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MAD R0.xy, fragment.texcoord[0], c[14], c[14].zwzw;
TEX R0.yw, R0, texture[0], 2D;
MAD R2.xy, R0.wyzw, c[22].x, -c[22].y;
MUL R1.xyz, R2.y, fragment.texcoord[4];
ADD R0.xyz, -fragment.texcoord[1], c[0];
DP3 R0.w, R0, R0;
RSQ R2.w, R0.w;
MAD R1.xyz, R2.x, fragment.texcoord[3], R1;
MUL R2.xy, R2, R2;
ADD_SAT R0.w, R2.x, R2.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
ADD R0.w, -R0, c[22].y;
RSQ R0.w, R0.w;
MUL R0.xyz, R2.w, R0;
MUL R2.xyz, R1.w, fragment.texcoord[2];
RCP R0.w, R0.w;
MAD R1.xyz, R0.w, R2, R1;
DP3 R0.w, R1, R1;
DP3 R2.x, fragment.texcoord[3], R0;
DP3 R2.y, fragment.texcoord[4], R0;
MUL R4.xy, R2, -c[17].x;
RSQ R0.w, R0.w;
MUL R2.xyz, R0.w, R1;
MAD R3.xy, R4, c[23].w, fragment.texcoord[0];
ADD R1.xy, R3, -c[25].x;
MUL R1.zw, R1.y, c[25].xywy;
MAD R1.xy, R1.x, c[25].yzzw, R1.zwzw;
MOV R0.w, c[17].x;
MUL R1.z, R0.w, -c[26].x;
ADD R1.xy, R1, c[25].x;
MUL R0.w, R0, c[25].x;
DP3 R2.w, R2, -R0;
ADD R1.z, R1, c[22].y;
MUL R1.xy, R1, c[16].x;
MUL R3.xy, R1, R1.z;
MUL R1.xyz, R2, R2.w;
MUL R3.xy, R3, c[21].x;
MAD R1.xyz, -R1, c[22].x, -R0;
MAD R4.zw, R3.xyxy, c[18].xyxy, c[18];
TEX R3.xyz, R1, texture[6], CUBE;
TEX R1.xyz, R4.zwzw, texture[5], 2D;
MUL R5.xyz, R3, c[13].x;
ADD R3.xyz, -R1, c[22].y;
MAD R1.zw, -R4.xyxy, c[23].w, fragment.texcoord[0].xyxy;
ADD R0.w, R0, c[22].y;
MUL R4.xy, R1.zwzw, R0.w;
MAD R1.xy, fragment.texcoord[0], c[5], c[5].zwzw;
MUL R6.xy, R4, c[16].x;
TEX R1.xyz, R1, texture[4], 2D;
MAX R4.xyz, R3, R1;
MAD R3.xy, R6, c[18], c[18].zwzw;
MOV R6.xyz, c[15];
MUL R6.xyz, R6, c[11].x;
TEX R3.xyz, R3, texture[5], 2D;
MUL R3.xyz, R6, R3;
POW R6.x, R3.x, c[19].x;
POW R6.y, R3.y, c[19].x;
POW R6.z, R3.z, c[19].x;
MUL R4.xyz, R4, c[9].x;
MAD R7.xyz, R4, -R6, R6;
MAD R3.xyz, -fragment.texcoord[1], c[1].w, c[1];
DP3 R0.w, R3, R3;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R3;
ADD R0.xyz, R3, R0;
DP3 R0.w, R0, R0;
MAD R6.xy, fragment.texcoord[0], c[8], c[8].zwzw;
TEX R6.xyz, R6, texture[7], 2D;
MUL R6.xyz, R6, c[10].x;
POW R6.x, R6.x, c[20].x;
POW R6.z, R6.z, c[20].x;
POW R6.y, R6.y, c[20].x;
MAD R1.xyz, R1, -R6, R6;
ADD R1.xyz, R7, R1;
RSQ R0.w, R0.w;
ADD R6.xyz, R5, R1;
MUL R1.xyz, R0.w, R0;
DP3 R1.x, R2, R1;
MAX R2.w, R1.x, c[22].z;
ADD R0.xyz, fragment.texcoord[6], c[23].xyyw;
TEX R0, R0, texture[1], CUBE;
DP4 R7.w, R0, c[24];
ADD R0.xyz, fragment.texcoord[6], c[23].yxyw;
TEX R0, R0, texture[1], CUBE;
DP4 R7.z, R0, c[24];
ADD R1.xyz, fragment.texcoord[6], c[23].yyxw;
TEX R1, R1, texture[1], CUBE;
DP4 R7.y, R1, c[24];
ADD R0.xyz, fragment.texcoord[6], c[23].x;
TEX R0, R0, texture[1], CUBE;
DP3 R1.x, fragment.texcoord[6], fragment.texcoord[6];
DP4 R7.x, R0, c[24];
RSQ R1.x, R1.x;
RCP R0.x, R1.x;
MUL R0.x, R0, c[2].w;
MAD R0, -R0.x, c[22].w, R7;
MOV R3.w, c[22].y;
CMP R0, R0, c[3].x, R3.w;
DP4 R0.y, R0, c[23].z;
MOV R1.x, c[26].y;
MUL R0.z, R1.x, c[6].x;
DP3 R0.x, fragment.texcoord[5], fragment.texcoord[5];
TEX R1.w, R0.x, texture[2], 2D;
TEX R0.w, fragment.texcoord[5], texture[3], CUBE;
MUL R0.x, R1.w, R0.w;
ADD R0.z, R0, c[22].y;
EX2 R0.w, R0.z;
MUL R0.x, R0, R0.y;
MUL R0.xyz, R0.x, c[4];
POW R0.w, R2.w, R0.w;
MUL R0.xyz, R0, c[22].x;
MUL R1.xyz, R0, R0.w;
DP3 R0.w, R2, R3;
MAX R0.w, R0, c[22].z;
MUL R6.xyz, R1, R6;
MAD R7.xy, fragment.texcoord[0], c[7], c[7].zwzw;
TEX R1.xyz, R7, texture[8], 2D;
MAD R1.xyz, R1, c[12], R5;
ADD R1.w, R3, -c[9].x;
MAD R1.xyz, R1.w, R4, R1;
MUL R0.xyz, R0.w, R0;
MAD result.color.xyz, R0, R1, R6;
MOV result.color.w, c[22].z;
END
# 124 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 131 math, 13 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Vector 2 [_LightPositionRange]
Vector 3 [_LightShadowData]
Vector 4 [_LightColor0]
Vector 5 [_Mask_ST]
Float 6 [_Shininess]
Vector 7 [_MainTex_ST]
Vector 8 [_Specularglitter_ST]
Float 9 [_MasktransparencyDebug]
Float 10 [_Specularpower05]
Float 11 [_Glitterpower]
Vector 12 [_Color]
Float 13 [_Reflectioncubemappower]
Vector 14 [_Normalmap_ST]
Vector 15 [_Glittercolor]
Float 16 [_Glitterymaskdotsscale]
Float 17 [_Glitteryspeed01]
Vector 18 [_Glittermap_ST]
Float 19 [_Glittercontrast13]
Float 20 [_Specularcontrast13]
Float 21 [_Maskadjust0515]
SetTexture 0 [_Normalmap] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTextureB0] 2D 2
SetTexture 3 [_LightTexture0] CUBE 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_Glittermap] 2D 5
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 7
SetTexture 8 [_MainTex] 2D 8
"ps_3_0
dcl_2d s0
dcl_cube s1
dcl_2d s2
dcl_cube s3
dcl_2d s4
dcl_2d s5
dcl_cube s6
dcl_2d s7
dcl_2d s8
def c22, 2.00000000, -1.00000000, 0.00000000, 0.00781250
def c23, 0.00781250, -0.00781250, 0.97000003, 0.25000000
def c24, 1.00000000, 0.00392157, 0.00001538, 0.00000006
def c25, 0.05000000, -0.50000000, 0.00159374, -0.99999875
def c26, -0.99999875, -0.00159374, 0.50000000, 1.00000000
def c27, -0.31830987, 1.00000000, 10.00000000, 0
dcl_texcoord0 v0.xy
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dcl_texcoord5 v5.xyz
dcl_texcoord6 v6.xyz
mad r0.xy, v0, c14, c14.zwzw
texld r0.yw, r0, s0
mad_pp r2.xy, r0.wyzw, c22.x, c22.y
add r0.xyz, -v1, c0
dp3 r0.w, r0, r0
rsq r2.w, r0.w
mul r3.xyz, r2.w, r0
mul r1.xyz, r2.y, v4
mad r1.xyz, r2.x, v3, r1
mul_pp r2.xy, r2, r2
add_pp_sat r0.w, r2.x, r2.y
dp3 r1.w, v2, v2
rsq r1.w, r1.w
add_pp r0.w, -r0, c24.x
rsq_pp r0.w, r0.w
dp3 r0.x, v3, r3
dp3 r0.y, v4, r3
mul r2.xyz, r1.w, v2
rcp_pp r0.w, r0.w
mad r2.xyz, r0.w, r2, r1
dp3 r0.z, r2, r2
mul r1.xy, r0, -c17.x
rsq r0.x, r0.z
mad r0.zw, r1.xyxy, c25.x, v0.xyxy
mul r4.xyz, r0.x, r2
add r1.zw, r0, c25.y
mul r2.xy, r1.w, c25.zwzw
mad r1.zw, r1.z, c26.xyxy, r2.xyxy
dp3 r0.x, r4, -r3
mul r0.xyz, r4, r0.x
mad r0.xyz, -r0, c22.x, -r3
texld r2.xyz, r0, s6
add r1.zw, r1, c26.z
mov r0.z, c17.x
mad r0.w, r0.z, c26.z, c26
mad r1.xy, -r1, c25.x, v0
mul r1.xy, r1, r0.w
mov r0.z, c17.x
mul r0.xy, r1.zwzw, c16.x
mad r0.z, r0, c27.x, c27.y
mul r5.xy, r0, r0.z
mul r1.xy, r1, c16.x
mad r0.xy, r1, c18, c18.zwzw
mov r0.w, c11.x
mul r1.xyz, c15, r0.w
texld r0.xyz, r0, s5
mul r7.xyz, r1, r0
mul r1.xy, r5, c21.x
mad r5.xy, r1, c18, c18.zwzw
pow r0, r7.x, c19.x
mov r7.x, r0
pow r0, r7.z, c19.x
mad r1.xy, v0, c5, c5.zwzw
texld r5.xyz, r5, s5
texld r1.xyz, r1, s4
add r5.xyz, -r5, c24.x
max r5.xyz, r5, r1
mul r6.xyz, r5, c9.x
pow r5, r7.y, c19.x
mov r7.y, r5
mov r7.z, r0
mad r5.xyz, -v1, c1.w, c1
dp3 r0.w, r5, r5
rsq r1.w, r0.w
mad r0.xy, v0, c8, c8.zwzw
texld r0.xyz, r0, s7
mul r9.xyz, r0, c10.x
pow r0, r9.x, c20.x
mov r9.x, r0
pow r0, r9.z, c20.x
mul r5.xyz, r1.w, r5
mad r8.xyz, r6, -r7, r7
add r7.xyz, r5, r3
dp3 r0.w, r7, r7
pow r3, r9.y, c20.x
mov r9.y, r3
mov r9.z, r0
mad r0.xyz, r1, -r9, r9
add r0.xyz, r8, r0
mad r3.xyz, r2, c13.x, r0
rsq r0.w, r0.w
mul r1.xyz, r0.w, r7
dp3 r1.x, r4, r1
max r2.w, r1.x, c22.z
add r0.xyz, v6, c23.xyyw
texld r0, r0, s1
dp4 r7.w, r0, c24
add r0.xyz, v6, c23.yxyw
texld r0, r0, s1
dp4 r7.z, r0, c24
add r1.xyz, v6, c23.yyxw
texld r1, r1, s1
dp4 r7.y, r1, c24
add r0.xyz, v6, c22.w
texld r0, r0, s1
dp3 r1.x, v6, v6
dp4 r7.x, r0, c24
rsq r1.x, r1.x
rcp r0.x, r1.x
mov r1.x, c6
mad r1.y, r1.x, c27.z, c27
mul r0.x, r0, c2.w
mad r0, -r0.x, c23.z, r7
exp r3.w, r1.y
mov r1.x, c3
cmp r1, r0, c24.x, r1.x
pow r0, r2.w, r3.w
dp4_pp r0.z, r1, c23.w
dp3 r1.x, v5, v5
mov r1.w, c9.x
texld r0.w, v5, s3
texld r1.x, r1.x, s2
mul r0.y, r1.x, r0.w
mul r0.y, r0, r0.z
mul r1.xyz, r0.y, c4
mov r0.w, r0.x
mul r0.xyz, r1, c22.x
mul r1.xyz, r0, r0.w
mul r1.xyz, r1, r3
dp3 r0.w, r4, r5
max r0.w, r0, c22.z
mul r3.xyz, r2, c13.x
mad r7.xy, v0, c7, c7.zwzw
texld r2.xyz, r7, s8
mad r2.xyz, r2, c12, r3
add r1.w, c24.x, -r1
mad r2.xyz, r1.w, r6, r2
mul r0.xyz, r0.w, r0
mad oC0.xyz, r0, r2, r1
mov_pp oC0.w, c22.z
"
}
SubProgram "d3d11 " {
// Stats: 101 math, 13 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
SetTexture 0 [_Normalmap] 2D 7
SetTexture 1 [_LightTextureB0] 2D 2
SetTexture 2 [_LightTexture0] CUBE 1
SetTexture 3 [_ShadowMapTexture] CUBE 0
SetTexture 4 [_Mask] 2D 3
SetTexture 5 [_Glittermap] 2D 8
SetTexture 6 [_Reflectioncubemap] CUBE 6
SetTexture 7 [_Specularglitter] 2D 5
SetTexture 8 [_MainTex] 2D 4
ConstBuffer "$Globals" 304
Vector 80 [_LightColor0]
Vector 96 [_Mask_ST]
Float 112 [_Shininess]
Vector 128 [_MainTex_ST]
Vector 144 [_Specularglitter_ST]
Float 160 [_MasktransparencyDebug]
Float 164 [_Specularpower05]
Float 168 [_Glitterpower]
Vector 176 [_Color]
Float 192 [_Reflectioncubemappower]
Vector 208 [_Normalmap_ST]
Vector 240 [_Glittercolor]
Float 256 [_Glitterymaskdotsscale]
Float 260 [_Glitteryspeed01]
Vector 272 [_Glittermap_ST]
Float 288 [_Glittercontrast13]
Float 292 [_Specularcontrast13]
Float 296 [_Maskadjust0515]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
"ps_4_0
eefiecedjcfaiokeihlgbflgooiplpnlmjlhlaheabaaaaaaoibbaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcjibaaaaaeaaaaaaacgaeaaaafjaaaaaeegiocaaa
aaaaaaaabdaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafkaaaaadaagabaaa
aiaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafidaaaaeaahabaaaacaaaaaaffffaaaafidaaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaa
ffffaaaafidaaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaa
ffffaaaafibiaaaeaahabaaaaiaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadhcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaagcbaaaad
hcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacahaaaaaadcaaaaak
bcaabaaaaaaaaaaabkiacaaaaaaaaaaabaaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaalgcaabaaaaaaaaaaafgifcaaaaaaaaaaabaaaaaaaaceaaaaa
aaaaaaaamnmmemdnmnmmemlnaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaia
ebaaaaaaacaaaaaaegiccaaaabaaaaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaadaaaaaaegbcbaaaaeaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaadaaaaaaegbcbaaaafaaaaaaegacbaaaacaaaaaadcaaaaajpcaabaaa
adaaaaaafgakbaaaaaaaaaaaegaebaaaadaaaaaaegbebaaaabaaaaaadiaaaaah
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaegaabaaaadaaaaaaaaaaaaakdcaabaaa
adaaaaaaogakbaaaadaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
diaaaaaidcaabaaaaaaaaaaaegaabaaaaaaaaaaaagiacaaaaaaaaaaabaaaaaaa
dcaaaaaldcaabaaaaaaaaaaaegaabaaaaaaaaaaaegiacaaaaaaaaaaabbaaaaaa
ogikcaaaaaaaaaaabbaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaaaaaaaaa
eghobaaaafaaaaaaaagabaaaaiaaaaaadiaaaaajhcaabaaaaaaaaaaakgikcaaa
aaaaaaaaakaaaaaaegiccaaaaaaaaaaaapaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaaaaaaaacpaaaaafhcaabaaaaaaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaagiacaaaaaaaaaaa
bcaaaaaabjaaaaafhcaabaaaaaaaaaaaegacbaaaaaaaaaaaapaaaaakbcaabaaa
aeaaaaaaegaabaaaadaaaaaaaceaaaaaolpphplpallnnadkaaaaaaaaaaaaaaaa
apaaaaakccaabaaaaeaaaaaaegaabaaaadaaaaaaaceaaaaaallnnalkolpphplp
aaaaaaaaaaaaaaaaaaaaaaakdcaabaaaadaaaaaaegaabaaaaeaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaadiaaaaaidcaabaaaadaaaaaaegaabaaa
adaaaaaaagiacaaaaaaaaaaabaaaaaaadcaaaaalicaabaaaabaaaaaabkiacaia
ebaaaaaaaaaaaaaabaaaaaaaabeaaaaaidpjkcdoabeaaaaaaaaaiadpdiaaaaah
dcaabaaaadaaaaaapgapbaaaabaaaaaaegaabaaaadaaaaaadiaaaaaidcaabaaa
adaaaaaaegaabaaaadaaaaaakgikcaaaaaaaaaaabcaaaaaadcaaaaaldcaabaaa
adaaaaaaegaabaaaadaaaaaaegiacaaaaaaaaaaabbaaaaaaogikcaaaaaaaaaaa
bbaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaafaaaaaa
aagabaaaaiaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaaaaadcaaaaaldcaabaaaaeaaaaaa
egbabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
efaaaaajpcaabaaaaeaaaaaaegaabaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaa
adaaaaaadeaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaa
diaaaaaihcaabaaaadaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaakaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaaabaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaaafaaaaaa
egaabaaaafaaaaaaeghobaaaahaaaaaaaagabaaaafaaaaaadiaaaaaihcaabaaa
afaaaaaaegacbaaaafaaaaaafgifcaaaaaaaaaaaakaaaaaacpaaaaafhcaabaaa
afaaaaaaegacbaaaafaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaafaaaaaa
fgifcaaaaaaaaaaabcaaaaaabjaaaaafhcaabaaaafaaaaaaegacbaaaafaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaafaaaaaa
egacbaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aeaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaa
pgapbaaaabaaaaaaegbcbaaaadaaaaaadcaaaaaldcaabaaaafaaaaaaegbabaaa
abaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaaefaaaaaj
pcaabaaaafaaaaaaegaabaaaafaaaaaaeghobaaaaaaaaaaaaagabaaaahaaaaaa
dcaaaaapdcaabaaaafaaaaaahgapbaaaafaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadiaaaaah
hcaabaaaagaaaaaafgafbaaaafaaaaaaegbcbaaaafaaaaaadcaaaaajhcaabaaa
agaaaaaaagaabaaaafaaaaaaegbcbaaaaeaaaaaaegacbaaaagaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaafaaaaaaegaabaaaafaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajhcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaagaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaaeaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaaeaaaaaapgapbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaaiicaabaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaaeaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaaeaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaagaaaaaaaagabaaa
agaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaa
amaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
agiacaaaaaaaaaaaamaaaaaadcaaaaamhcaabaaaafaaaaaapgipcaaaacaaaaaa
aaaaaaaaegbcbaiaebaaaaaaacaaaaaaegiccaaaacaaaaaaaaaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaaafaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaa
aaaaaaaaegacbaaaafaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaafaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaaeaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaak
ccaabaaaabaaaaaaakiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaacaebabeaaaaa
aaaaiadpbjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaahaaaaaaegbcbaaa
ahaaaaaaelaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaa
abaaaaaabkaabaaaabaaaaaadkiacaaaacaaaaaaabaaaaaadiaaaaahccaabaaa
abaaaaaabkaabaaaabaaaaaaabeaaaaaomfbhidpaaaaaaakhcaabaaaaeaaaaaa
egbcbaaaahaaaaaaaceaaaaaaaaaaadmaaaaaadmaaaaaadmaaaaaaaaefaaaaaj
pcaabaaaaeaaaaaaegacbaaaaeaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaa
bbaaaaakbcaabaaaaeaaaaaaegaobaaaaeaaaaaaaceaaaaaaaaaiadpibiaiadl
icabibdhafidibddaaaaaaakhcaabaaaafaaaaaaegbcbaaaahaaaaaaaceaaaaa
aaaaaalmaaaaaalmaaaaaadmaaaaaaaaefaaaaajpcaabaaaafaaaaaaegacbaaa
afaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaabbaaaaakccaabaaaaeaaaaaa
egaobaaaafaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhafidibddaaaaaaak
hcaabaaaafaaaaaaegbcbaaaahaaaaaaaceaaaaaaaaaaalmaaaaaadmaaaaaalm
aaaaaaaaefaaaaajpcaabaaaafaaaaaaegacbaaaafaaaaaaeghobaaaadaaaaaa
aagabaaaaaaaaaaabbaaaaakecaabaaaaeaaaaaaegaobaaaafaaaaaaaceaaaaa
aaaaiadpibiaiadlicabibdhafidibddaaaaaaakhcaabaaaafaaaaaaegbcbaaa
ahaaaaaaaceaaaaaaaaaaadmaaaaaalmaaaaaalmaaaaaaaaefaaaaajpcaabaaa
afaaaaaaegacbaaaafaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaabbaaaaak
icaabaaaaeaaaaaaegaobaaaafaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdh
afidibdddbaaaaahpcaabaaaaeaaaaaaegaobaaaaeaaaaaafgafbaaaabaaaaaa
dhaaaaanpcaabaaaaeaaaaaaegaobaaaaeaaaaaaagiacaaaadaaaaaabiaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpbbaaaaakccaabaaaabaaaaaa
egaobaaaaeaaaaaaaceaaaaaaaaaiadoaaaaiadoaaaaiadoaaaaiadobaaaaaah
ecaabaaaabaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaaefaaaaajpcaabaaa
aeaaaaaakgakbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaaefaaaaaj
pcaabaaaafaaaaaaegbcbaaaagaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaa
diaaaaahecaabaaaabaaaaaaakaabaaaaeaaaaaadkaabaaaafaaaaaaapaaaaah
ccaabaaaabaaaaaakgakbaaaabaaaaaafgafbaaaabaaaaaadiaaaaaiocaabaaa
abaaaaaafgafbaaaabaaaaaaagijcaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaa
aeaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaajgahbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaeaaaaaadcaaaaaldcaabaaaaeaaaaaaegbabaaaabaaaaaa
egiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaa
aeaaaaaaegaabaaaaeaaaaaaeghobaaaaiaaaaaaaagabaaaaeaaaaaadcaaaaak
hcaabaaaacaaaaaaegacbaaaaeaaaaaaegiccaaaaaaaaaaaalaaaaaaegacbaaa
acaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaa
abeaaaaaaaaaiadpdcaaaaajhcaabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaaegacbaaaacaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3"
}
}
 }
}
Fallback "Diffuse"
}